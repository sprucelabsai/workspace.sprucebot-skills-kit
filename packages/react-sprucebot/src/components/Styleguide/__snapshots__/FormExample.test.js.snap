// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormExample it renders 1`] = `
<WrappedCmp>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <Connect(Component)>
      <Component
        actions={
          Object {
            "auth": Object {
              "go": [Function],
            },
          }
        }
        auth={Object {}}
        config={
          Object {
            "SERVER_HOST": "https://example.com",
          }
        }
        form={
          Object {
            "form-example": Object {
              "initial": Object {
                "firstName": "Sprucebot",
              },
              "registeredFields": Object {
                "description": Object {
                  "count": 1,
                  "name": "description",
                  "type": "Field",
                },
                "dropdown": Object {
                  "count": 1,
                  "name": "dropdown",
                  "type": "Field",
                },
                "email": Object {
                  "count": 1,
                  "name": "email",
                  "type": "Field",
                },
                "firstName": Object {
                  "count": 1,
                  "name": "firstName",
                  "type": "Field",
                },
                "password": Object {
                  "count": 1,
                  "name": "password",
                  "type": "Field",
                },
              },
              "syncErrors": Object {
                "dropdown": "Required",
                "password": "Required",
              },
              "values": Object {
                "firstName": "Sprucebot",
              },
            },
          }
        }
      >
        <ReduxForm
          onSubmit={[MockFunction]}
        >
          <Connect(Form(FormExample))
            destroyOnUnmount={true}
            enableReinitialize={false}
            forceUnregisterOnUnmount={false}
            form="form-example"
            getFormState={[Function]}
            initialValues={
              Object {
                "firstName": "Sprucebot",
              }
            }
            keepDirtyOnReinitialize={false}
            onSubmit={[MockFunction]}
            persistentSubmitErrors={false}
            pure={true}
            shouldAsyncValidate={[Function]}
            shouldError={[Function]}
            shouldValidate={[Function]}
            shouldWarn={[Function]}
            touchOnBlur={true}
            touchOnChange={false}
            updateUnregisteredFields={false}
          >
            <Form(FormExample)
              anyTouched={false}
              array={
                Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
              }
              arrayInsert={[Function]}
              arrayMove={[Function]}
              arrayPop={[Function]}
              arrayPush={[Function]}
              arrayRemove={[Function]}
              arrayRemoveAll={[Function]}
              arrayShift={[Function]}
              arraySplice={[Function]}
              arraySwap={[Function]}
              arrayUnshift={[Function]}
              asyncValidating={false}
              autofill={[Function]}
              blur={[Function]}
              change={[Function]}
              clearAsyncError={[Function]}
              clearFields={[Function]}
              clearSubmit={[Function]}
              clearSubmitErrors={[Function]}
              destroy={[Function]}
              destroyOnUnmount={true}
              dirty={false}
              dispatch={[Function]}
              enableReinitialize={false}
              focus={[Function]}
              forceUnregisterOnUnmount={false}
              form="form-example"
              getFormState={[Function]}
              initialValues={
                Object {
                  "firstName": "Sprucebot",
                }
              }
              initialize={[Function]}
              initialized={true}
              invalid={true}
              keepDirtyOnReinitialize={false}
              onSubmit={[MockFunction]}
              persistentSubmitErrors={false}
              pristine={true}
              pure={true}
              registerField={[Function]}
              registeredFields={
                Object {
                  "description": Object {
                    "count": 1,
                    "name": "description",
                    "type": "Field",
                  },
                  "dropdown": Object {
                    "count": 1,
                    "name": "dropdown",
                    "type": "Field",
                  },
                  "email": Object {
                    "count": 1,
                    "name": "email",
                    "type": "Field",
                  },
                  "firstName": Object {
                    "count": 1,
                    "name": "firstName",
                    "type": "Field",
                  },
                  "password": Object {
                    "count": 1,
                    "name": "password",
                    "type": "Field",
                  },
                }
              }
              reset={[Function]}
              resetSection={[Function]}
              setSubmitFailed={[Function]}
              setSubmitSucceeded={[Function]}
              shouldAsyncValidate={[Function]}
              shouldError={[Function]}
              shouldValidate={[Function]}
              shouldWarn={[Function]}
              startAsyncValidation={[Function]}
              startSubmit={[Function]}
              stopAsyncValidation={[Function]}
              stopSubmit={[Function]}
              submit={[Function]}
              submitFailed={false}
              submitSucceeded={false}
              submitting={false}
              syncErrors={
                Object {
                  "dropdown": "Required",
                  "password": "Required",
                }
              }
              syncWarnings={Object {}}
              touch={[Function]}
              touchOnBlur={true}
              touchOnChange={false}
              unregisterField={[Function]}
              untouch={[Function]}
              updateSyncErrors={[Function]}
              updateSyncWarnings={[Function]}
              updateUnregisteredFields={false}
              valid={false}
              validExceptSubmit={false}
              values={
                Object {
                  "firstName": "Sprucebot",
                }
              }
            >
              <FormExample
                anyTouched={false}
                array={
                  Object {
                    "insert": [Function],
                    "move": [Function],
                    "pop": [Function],
                    "push": [Function],
                    "remove": [Function],
                    "removeAll": [Function],
                    "shift": [Function],
                    "splice": [Function],
                    "swap": [Function],
                    "unshift": [Function],
                  }
                }
                asyncValidate={[Function]}
                asyncValidating={false}
                autofill={[Function]}
                blur={[Function]}
                change={[Function]}
                clearAsyncError={[Function]}
                clearFields={[Function]}
                clearSubmit={[Function]}
                clearSubmitErrors={[Function]}
                destroy={[Function]}
                dirty={false}
                dispatch={[Function]}
                form="form-example"
                handleSubmit={[Function]}
                initialValues={
                  Object {
                    "firstName": "Sprucebot",
                  }
                }
                initialize={[Function]}
                initialized={true}
                invalid={true}
                onSubmit={[MockFunction]}
                pristine={true}
                pure={true}
                reset={[Function]}
                resetSection={[Function]}
                submit={[Function]}
                submitFailed={false}
                submitSucceeded={false}
                submitting={false}
                touch={[Function]}
                untouch={[Function]}
                valid={false}
              >
                <Form
                  onSubmit={[Function]}
                >
                  <form
                    className="Form-vekaea-0 Form gDnxcG"
                    onSubmit={[Function]}
                  >
                    <BotText>
                      <div
                        className="BotText-udhfms-0 bot__text eRhwgR"
                      >
                        Using
                         
                        <a
                          href="https://redux-form.com"
                          target="_blank"
                        >
                          redux-form
                        </a>
                         
                        makes it easy to validate form state and handle server side errors on form submission. Go ahead, try out the example:
                      </div>
                    </BotText>
                    <Typography__SectionHeading>
                      <h2
                        className="Typography__SectionHeading-s1hqg0x7-8 profile__subtitle ZFZpB"
                      >
                        Example Heading
                      </h2>
                    </Typography__SectionHeading>
                    <Field
                      component={[Function]}
                      label="First Name"
                      name="firstName"
                    >
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearFields": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "form-example",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": Object {
                              "firstName": "Sprucebot",
                            },
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "onSubmit": [MockFunction],
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "resetSection": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldError": [Function],
                            "shouldValidate": [Function],
                            "shouldWarn": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "updateUnregisteredFields": false,
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {
                              "firstName": "Sprucebot",
                            },
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        label="First Name"
                        name="firstName"
                        normalize={[Function]}
                      >
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearFields": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "form-example",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": Object {
                                "firstName": "Sprucebot",
                              },
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "onSubmit": [MockFunction],
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "resetSection": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldError": [Function],
                              "shouldValidate": [Function],
                              "shouldWarn": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "updateUnregisteredFields": false,
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {
                                "firstName": "Sprucebot",
                              },
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          initial="Sprucebot"
                          label="First Name"
                          name="firstName"
                          normalize={[Function]}
                          pristine={true}
                          value="Sprucebot"
                        >
                          <InputField
                            input={
                              Object {
                                "name": "firstName",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "Sprucebot",
                              }
                            }
                            label="First Name"
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": undefined,
                                "form": "form-example",
                                "initial": "Sprucebot",
                                "invalid": false,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                                "warning": undefined,
                              }
                            }
                          >
                            <Field
                              input={
                                Object {
                                  "name": "firstName",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onDragStart": [Function],
                                  "onDrop": [Function],
                                  "onFocus": [Function],
                                  "value": "Sprucebot",
                                }
                              }
                              label="First Name"
                              meta={
                                Object {
                                  "active": false,
                                  "asyncValidating": false,
                                  "autofilled": false,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "error": undefined,
                                  "form": "form-example",
                                  "initial": "Sprucebot",
                                  "invalid": false,
                                  "pristine": true,
                                  "submitFailed": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": true,
                                  "visited": false,
                                  "warning": undefined,
                                }
                              }
                            >
                              <FormField__FieldWrapper>
                                <div
                                  className="FormField__FieldWrapper-q2a077-0 InputField input__wrapper cawlXb"
                                >
                                  <FormField__FieldLabel>
                                    <span
                                      className="FormField__FieldLabel-q2a077-2 FieldLabel input__mini__label js-show-label bAGKQA"
                                    >
                                      First Name
                                    </span>
                                  </FormField__FieldLabel>
                                  <input
                                    className="with_label"
                                    name="firstName"
                                    onChange={[Function]}
                                    placeholder="First Name"
                                    value="Sprucebot"
                                  />
                                </div>
                              </FormField__FieldWrapper>
                            </Field>
                          </InputField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                    <Field
                      component={[Function]}
                      label="Email"
                      name="email"
                    >
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearFields": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "form-example",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": Object {
                              "firstName": "Sprucebot",
                            },
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "onSubmit": [MockFunction],
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "resetSection": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldError": [Function],
                            "shouldValidate": [Function],
                            "shouldWarn": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "updateUnregisteredFields": false,
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {
                              "firstName": "Sprucebot",
                            },
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        label="Email"
                        name="email"
                        normalize={[Function]}
                      >
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearFields": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "form-example",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": Object {
                                "firstName": "Sprucebot",
                              },
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "onSubmit": [MockFunction],
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "resetSection": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldError": [Function],
                              "shouldValidate": [Function],
                              "shouldWarn": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "updateUnregisteredFields": false,
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {
                                "firstName": "Sprucebot",
                              },
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          label="Email"
                          name="email"
                          normalize={[Function]}
                          pristine={true}
                        >
                          <InputField
                            input={
                              Object {
                                "name": "email",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            label="Email"
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": undefined,
                                "form": "form-example",
                                "initial": undefined,
                                "invalid": false,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                                "warning": undefined,
                              }
                            }
                          >
                            <Field
                              input={
                                Object {
                                  "name": "email",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onDragStart": [Function],
                                  "onDrop": [Function],
                                  "onFocus": [Function],
                                  "value": "",
                                }
                              }
                              label="Email"
                              meta={
                                Object {
                                  "active": false,
                                  "asyncValidating": false,
                                  "autofilled": false,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "error": undefined,
                                  "form": "form-example",
                                  "initial": undefined,
                                  "invalid": false,
                                  "pristine": true,
                                  "submitFailed": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": true,
                                  "visited": false,
                                  "warning": undefined,
                                }
                              }
                            >
                              <FormField__FieldWrapper>
                                <div
                                  className="FormField__FieldWrapper-q2a077-0 InputField input__wrapper cawlXb"
                                >
                                  <input
                                    className="with_label"
                                    name="email"
                                    onChange={[Function]}
                                    placeholder="Email"
                                    value=""
                                  />
                                </div>
                              </FormField__FieldWrapper>
                            </Field>
                          </InputField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                    <Field
                      component={[Function]}
                      label="Password"
                      name="password"
                      type="password"
                      validate={
                        Array [
                          [Function],
                          [Function],
                        ]
                      }
                    >
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearFields": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "form-example",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": Object {
                              "firstName": "Sprucebot",
                            },
                            "initialize": [Function],
                            "initialized": true,
                            "invalid": true,
                            "keepDirtyOnReinitialize": false,
                            "onSubmit": [MockFunction],
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": Object {
                              "description": Object {
                                "count": 1,
                                "name": "description",
                                "type": "Field",
                              },
                              "dropdown": Object {
                                "count": 1,
                                "name": "dropdown",
                                "type": "Field",
                              },
                              "email": Object {
                                "count": 1,
                                "name": "email",
                                "type": "Field",
                              },
                              "firstName": Object {
                                "count": 1,
                                "name": "firstName",
                                "type": "Field",
                              },
                              "password": Object {
                                "count": 1,
                                "name": "password",
                                "type": "Field",
                              },
                            },
                            "reset": [Function],
                            "resetSection": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldError": [Function],
                            "shouldValidate": [Function],
                            "shouldWarn": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {
                              "dropdown": "Required",
                              "password": "Required",
                            },
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "updateUnregisteredFields": false,
                            "valid": false,
                            "validExceptSubmit": false,
                            "values": Object {
                              "firstName": "Sprucebot",
                            },
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        label="Password"
                        name="password"
                        normalize={[Function]}
                        type="password"
                        validate={
                          Array [
                            [Function],
                            [Function],
                          ]
                        }
                      >
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearFields": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "form-example",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": Object {
                                "firstName": "Sprucebot",
                              },
                              "initialize": [Function],
                              "initialized": true,
                              "invalid": true,
                              "keepDirtyOnReinitialize": false,
                              "onSubmit": [MockFunction],
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": Object {
                                "description": Object {
                                  "count": 1,
                                  "name": "description",
                                  "type": "Field",
                                },
                                "dropdown": Object {
                                  "count": 1,
                                  "name": "dropdown",
                                  "type": "Field",
                                },
                                "email": Object {
                                  "count": 1,
                                  "name": "email",
                                  "type": "Field",
                                },
                                "firstName": Object {
                                  "count": 1,
                                  "name": "firstName",
                                  "type": "Field",
                                },
                                "password": Object {
                                  "count": 1,
                                  "name": "password",
                                  "type": "Field",
                                },
                              },
                              "reset": [Function],
                              "resetSection": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldError": [Function],
                              "shouldValidate": [Function],
                              "shouldWarn": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {
                                "dropdown": "Required",
                                "password": "Required",
                              },
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "updateUnregisteredFields": false,
                              "valid": false,
                              "validExceptSubmit": false,
                              "values": Object {
                                "firstName": "Sprucebot",
                              },
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          label="Password"
                          name="password"
                          normalize={[Function]}
                          pristine={true}
                          syncError="Required"
                          type="password"
                          validate={
                            Array [
                              [Function],
                              [Function],
                            ]
                          }
                        >
                          <InputField
                            input={
                              Object {
                                "name": "password",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            label="Password"
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": "Required",
                                "form": "form-example",
                                "initial": undefined,
                                "invalid": true,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": false,
                                "visited": false,
                                "warning": undefined,
                              }
                            }
                            type="password"
                          >
                            <Field
                              input={
                                Object {
                                  "name": "password",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onDragStart": [Function],
                                  "onDrop": [Function],
                                  "onFocus": [Function],
                                  "value": "",
                                }
                              }
                              label="Password"
                              meta={
                                Object {
                                  "active": false,
                                  "asyncValidating": false,
                                  "autofilled": false,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "error": "Required",
                                  "form": "form-example",
                                  "initial": undefined,
                                  "invalid": true,
                                  "pristine": true,
                                  "submitFailed": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": false,
                                  "visited": false,
                                  "warning": undefined,
                                }
                              }
                              type="password"
                            >
                              <FormField__FieldWrapper>
                                <div
                                  className="FormField__FieldWrapper-q2a077-0 InputField input__wrapper cawlXb"
                                >
                                  <input
                                    className="with_label"
                                    name="password"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    type="password"
                                    value=""
                                  />
                                </div>
                              </FormField__FieldWrapper>
                            </Field>
                          </InputField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                    <Field
                      component={[Function]}
                      finePrint="This is helpful fine print."
                      label="Growing multiline input"
                      name="description"
                      type="textarea"
                    >
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearFields": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "form-example",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": Object {
                              "firstName": "Sprucebot",
                            },
                            "initialize": [Function],
                            "initialized": false,
                            "invalid": false,
                            "keepDirtyOnReinitialize": false,
                            "onSubmit": [MockFunction],
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": undefined,
                            "reset": [Function],
                            "resetSection": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldError": [Function],
                            "shouldValidate": [Function],
                            "shouldWarn": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {},
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "updateUnregisteredFields": false,
                            "valid": true,
                            "validExceptSubmit": true,
                            "values": Object {
                              "firstName": "Sprucebot",
                            },
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        finePrint="This is helpful fine print."
                        label="Growing multiline input"
                        name="description"
                        normalize={[Function]}
                        type="textarea"
                      >
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearFields": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "form-example",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": Object {
                                "firstName": "Sprucebot",
                              },
                              "initialize": [Function],
                              "initialized": false,
                              "invalid": false,
                              "keepDirtyOnReinitialize": false,
                              "onSubmit": [MockFunction],
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": undefined,
                              "reset": [Function],
                              "resetSection": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldError": [Function],
                              "shouldValidate": [Function],
                              "shouldWarn": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {},
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "updateUnregisteredFields": false,
                              "valid": true,
                              "validExceptSubmit": true,
                              "values": Object {
                                "firstName": "Sprucebot",
                              },
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          finePrint="This is helpful fine print."
                          label="Growing multiline input"
                          name="description"
                          normalize={[Function]}
                          pristine={true}
                          type="textarea"
                        >
                          <TextAreaField
                            finePrint="This is helpful fine print."
                            input={
                              Object {
                                "name": "description",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            label="Growing multiline input"
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": undefined,
                                "form": "form-example",
                                "initial": undefined,
                                "invalid": false,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                                "warning": undefined,
                              }
                            }
                            type="textarea"
                          >
                            <Field
                              finePrint="This is helpful fine print."
                              input={
                                Object {
                                  "name": "description",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onDragStart": [Function],
                                  "onDrop": [Function],
                                  "onFocus": [Function],
                                  "value": "",
                                }
                              }
                              label="Growing multiline input"
                              meta={
                                Object {
                                  "active": false,
                                  "asyncValidating": false,
                                  "autofilled": false,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "error": undefined,
                                  "form": "form-example",
                                  "initial": undefined,
                                  "invalid": false,
                                  "pristine": true,
                                  "submitFailed": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": true,
                                  "visited": false,
                                  "warning": undefined,
                                }
                              }
                              type="textarea"
                            >
                              <FormField__FieldWrapper>
                                <div
                                  className="FormField__FieldWrapper-q2a077-0 InputField input__wrapper cawlXb"
                                >
                                  <TextArea__StyledTextArea
                                    className="with_label"
                                    name="description"
                                    onChange={[Function]}
                                    placeholder="Growing multiline input"
                                    type="textarea"
                                    value=""
                                  >
                                    <TextareaAutosize
                                      className="with_label TextArea__StyledTextArea-s1260lgw-0 TextArea jBCoqu"
                                      inputRef={[Function]}
                                      name="description"
                                      onChange={[Function]}
                                      onHeightChange={[Function]}
                                      placeholder="Growing multiline input"
                                      type="textarea"
                                      useCacheForDOMMeasurements={false}
                                      value=""
                                    >
                                      <textarea
                                        className="with_label TextArea__StyledTextArea-s1260lgw-0 TextArea jBCoqu"
                                        name="description"
                                        onChange={[Function]}
                                        placeholder="Growing multiline input"
                                        style={
                                          Object {
                                            "height": 0,
                                          }
                                        }
                                        type="textarea"
                                        value=""
                                      />
                                    </TextareaAutosize>
                                  </TextArea__StyledTextArea>
                                  <Typography__Paragraph
                                    fine={true}
                                  >
                                    <p
                                      className="Typography__Paragraph-s1hqg0x7-0 fine__print dglOlS"
                                    >
                                      This is helpful fine print.
                                    </p>
                                  </Typography__Paragraph>
                                </div>
                              </FormField__FieldWrapper>
                            </Field>
                          </TextAreaField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                    <Field
                      component={[Function]}
                      label="Dropdowns Rock!"
                      name="dropdown"
                      validate={[Function]}
                    >
                      <Connect(ConnectedField)
                        _reduxForm={
                          Object {
                            "anyTouched": false,
                            "array": Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            },
                            "arrayInsert": [Function],
                            "arrayMove": [Function],
                            "arrayPop": [Function],
                            "arrayPush": [Function],
                            "arrayRemove": [Function],
                            "arrayRemoveAll": [Function],
                            "arrayShift": [Function],
                            "arraySplice": [Function],
                            "arraySwap": [Function],
                            "arrayUnshift": [Function],
                            "asyncErrors": undefined,
                            "asyncValidate": [Function],
                            "asyncValidating": false,
                            "autofill": [Function],
                            "blur": [Function],
                            "change": [Function],
                            "clearAsyncError": [Function],
                            "clearFields": [Function],
                            "clearSubmit": [Function],
                            "clearSubmitErrors": [Function],
                            "destroy": [Function],
                            "destroyOnUnmount": true,
                            "dirty": false,
                            "dispatch": [Function],
                            "enableReinitialize": false,
                            "error": undefined,
                            "focus": [Function],
                            "forceUnregisterOnUnmount": false,
                            "form": "form-example",
                            "getFormState": [Function],
                            "getValues": [Function],
                            "initialValues": Object {
                              "firstName": "Sprucebot",
                            },
                            "initialize": [Function],
                            "initialized": true,
                            "invalid": true,
                            "keepDirtyOnReinitialize": false,
                            "onSubmit": [MockFunction],
                            "persistentSubmitErrors": false,
                            "pristine": true,
                            "pure": true,
                            "register": [Function],
                            "registerField": [Function],
                            "registerInnerOnSubmit": [Function],
                            "registeredFields": Object {
                              "description": Object {
                                "count": 1,
                                "name": "description",
                                "type": "Field",
                              },
                              "dropdown": Object {
                                "count": 1,
                                "name": "dropdown",
                                "type": "Field",
                              },
                              "email": Object {
                                "count": 1,
                                "name": "email",
                                "type": "Field",
                              },
                              "firstName": Object {
                                "count": 1,
                                "name": "firstName",
                                "type": "Field",
                              },
                              "password": Object {
                                "count": 1,
                                "name": "password",
                                "type": "Field",
                              },
                            },
                            "reset": [Function],
                            "resetSection": [Function],
                            "sectionPrefix": undefined,
                            "setSubmitFailed": [Function],
                            "setSubmitSucceeded": [Function],
                            "shouldAsyncValidate": [Function],
                            "shouldError": [Function],
                            "shouldValidate": [Function],
                            "shouldWarn": [Function],
                            "startAsyncValidation": [Function],
                            "startSubmit": [Function],
                            "stopAsyncValidation": [Function],
                            "stopSubmit": [Function],
                            "submit": [Function],
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "submitting": false,
                            "syncErrors": Object {
                              "dropdown": "Required",
                              "password": "Required",
                            },
                            "syncWarnings": Object {},
                            "touch": [Function],
                            "touchOnBlur": true,
                            "touchOnChange": false,
                            "triggerSubmit": undefined,
                            "unregister": [Function],
                            "unregisterField": [Function],
                            "untouch": [Function],
                            "updateSyncErrors": [Function],
                            "updateSyncWarnings": [Function],
                            "updateUnregisteredFields": false,
                            "valid": false,
                            "validExceptSubmit": false,
                            "values": Object {
                              "firstName": "Sprucebot",
                            },
                            "warning": undefined,
                          }
                        }
                        component={[Function]}
                        label="Dropdowns Rock!"
                        name="dropdown"
                        normalize={[Function]}
                        validate={[Function]}
                      >
                        <ConnectedField
                          _reduxForm={
                            Object {
                              "anyTouched": false,
                              "array": Object {
                                "insert": [Function],
                                "move": [Function],
                                "pop": [Function],
                                "push": [Function],
                                "remove": [Function],
                                "removeAll": [Function],
                                "shift": [Function],
                                "splice": [Function],
                                "swap": [Function],
                                "unshift": [Function],
                              },
                              "arrayInsert": [Function],
                              "arrayMove": [Function],
                              "arrayPop": [Function],
                              "arrayPush": [Function],
                              "arrayRemove": [Function],
                              "arrayRemoveAll": [Function],
                              "arrayShift": [Function],
                              "arraySplice": [Function],
                              "arraySwap": [Function],
                              "arrayUnshift": [Function],
                              "asyncErrors": undefined,
                              "asyncValidate": [Function],
                              "asyncValidating": false,
                              "autofill": [Function],
                              "blur": [Function],
                              "change": [Function],
                              "clearAsyncError": [Function],
                              "clearFields": [Function],
                              "clearSubmit": [Function],
                              "clearSubmitErrors": [Function],
                              "destroy": [Function],
                              "destroyOnUnmount": true,
                              "dirty": false,
                              "dispatch": [Function],
                              "enableReinitialize": false,
                              "error": undefined,
                              "focus": [Function],
                              "forceUnregisterOnUnmount": false,
                              "form": "form-example",
                              "getFormState": [Function],
                              "getValues": [Function],
                              "initialValues": Object {
                                "firstName": "Sprucebot",
                              },
                              "initialize": [Function],
                              "initialized": true,
                              "invalid": true,
                              "keepDirtyOnReinitialize": false,
                              "onSubmit": [MockFunction],
                              "persistentSubmitErrors": false,
                              "pristine": true,
                              "pure": true,
                              "register": [Function],
                              "registerField": [Function],
                              "registerInnerOnSubmit": [Function],
                              "registeredFields": Object {
                                "description": Object {
                                  "count": 1,
                                  "name": "description",
                                  "type": "Field",
                                },
                                "dropdown": Object {
                                  "count": 1,
                                  "name": "dropdown",
                                  "type": "Field",
                                },
                                "email": Object {
                                  "count": 1,
                                  "name": "email",
                                  "type": "Field",
                                },
                                "firstName": Object {
                                  "count": 1,
                                  "name": "firstName",
                                  "type": "Field",
                                },
                                "password": Object {
                                  "count": 1,
                                  "name": "password",
                                  "type": "Field",
                                },
                              },
                              "reset": [Function],
                              "resetSection": [Function],
                              "sectionPrefix": undefined,
                              "setSubmitFailed": [Function],
                              "setSubmitSucceeded": [Function],
                              "shouldAsyncValidate": [Function],
                              "shouldError": [Function],
                              "shouldValidate": [Function],
                              "shouldWarn": [Function],
                              "startAsyncValidation": [Function],
                              "startSubmit": [Function],
                              "stopAsyncValidation": [Function],
                              "stopSubmit": [Function],
                              "submit": [Function],
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "submitting": false,
                              "syncErrors": Object {
                                "dropdown": "Required",
                                "password": "Required",
                              },
                              "syncWarnings": Object {},
                              "touch": [Function],
                              "touchOnBlur": true,
                              "touchOnChange": false,
                              "triggerSubmit": undefined,
                              "unregister": [Function],
                              "unregisterField": [Function],
                              "untouch": [Function],
                              "updateSyncErrors": [Function],
                              "updateSyncWarnings": [Function],
                              "updateUnregisteredFields": false,
                              "valid": false,
                              "validExceptSubmit": false,
                              "values": Object {
                                "firstName": "Sprucebot",
                              },
                              "warning": undefined,
                            }
                          }
                          asyncValidating={false}
                          component={[Function]}
                          dirty={false}
                          dispatch={[Function]}
                          label="Dropdowns Rock!"
                          name="dropdown"
                          normalize={[Function]}
                          pristine={true}
                          syncError="Required"
                          validate={[Function]}
                        >
                          <TextAreaField
                            input={
                              Object {
                                "name": "dropdown",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onDragStart": [Function],
                                "onDrop": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            label="Dropdowns Rock!"
                            meta={
                              Object {
                                "active": false,
                                "asyncValidating": false,
                                "autofilled": false,
                                "dirty": false,
                                "dispatch": [Function],
                                "error": "Required",
                                "form": "form-example",
                                "initial": undefined,
                                "invalid": true,
                                "pristine": true,
                                "submitFailed": false,
                                "submitting": false,
                                "touched": false,
                                "valid": false,
                                "visited": false,
                                "warning": undefined,
                              }
                            }
                          >
                            <Field
                              input={
                                Object {
                                  "name": "dropdown",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onDragStart": [Function],
                                  "onDrop": [Function],
                                  "onFocus": [Function],
                                  "value": "",
                                }
                              }
                              label="Dropdowns Rock!"
                              meta={
                                Object {
                                  "active": false,
                                  "asyncValidating": false,
                                  "autofilled": false,
                                  "dirty": false,
                                  "dispatch": [Function],
                                  "error": "Required",
                                  "form": "form-example",
                                  "initial": undefined,
                                  "invalid": true,
                                  "pristine": true,
                                  "submitFailed": false,
                                  "submitting": false,
                                  "touched": false,
                                  "valid": false,
                                  "visited": false,
                                  "warning": undefined,
                                }
                              }
                            >
                              <FormField__FieldWrapper>
                                <div
                                  className="FormField__FieldWrapper-q2a077-0 InputField input__wrapper cawlXb"
                                >
                                  <SelectField__StyledSelect
                                    className="with_label"
                                    name="dropdown"
                                    onChange={[Function]}
                                    placeholder="Dropdowns Rock!"
                                    value=""
                                  >
                                    <select
                                      className="with_label SelectField__StyledSelect-ldqaxx-0 SelectField custom_dropdown gpUeaT"
                                      name="dropdown"
                                      onChange={[Function]}
                                      placeholder="Dropdowns Rock!"
                                      value=""
                                    >
                                      <option
                                        value={null}
                                      >
                                        Select a value
                                      </option>
                                      <option
                                        value="value1"
                                      >
                                        Value 1
                                      </option>
                                      <option
                                        value="value2"
                                      >
                                        Value 2
                                      </option>
                                    </select>
                                  </SelectField__StyledSelect>
                                </div>
                              </FormField__FieldWrapper>
                            </Field>
                          </TextAreaField>
                        </ConnectedField>
                      </Connect(ConnectedField)>
                    </Field>
                    <LinkPile>
                      <div
                        className="LinkPile-s17zs3j6-0 link__pile bmtVCy"
                      >
                        <Button
                          alt={true}
                          busy={false}
                          disabled={true}
                          onClick={[Function]}
                          primary={false}
                          remove={false}
                          secondary={false}
                          tag="button"
                          toggle={false}
                          type="button"
                        >
                          <button
                            className="btn__alt btn__disabled "
                            onClick={[Function]}
                            type="button"
                          >
                            Reset Form
                          </button>
                        </Button>
                        <Button
                          alt={false}
                          busy={false}
                          disabled={false}
                          primary={true}
                          remove={false}
                          secondary={false}
                          tag="button"
                          toggle={false}
                          type="submit"
                        >
                          <button
                            className="btn__primary "
                            type="submit"
                          >
                            Submit
                          </button>
                        </Button>
                      </div>
                    </LinkPile>
                    <Typography__SectionHeading>
                      <h2
                        className="Typography__SectionHeading-s1hqg0x7-8 profile__subtitle ZFZpB"
                      >
                        Basic Form Submission
                      </h2>
                    </Typography__SectionHeading>
                    <BotText>
                      <div
                        className="BotText-udhfms-0 bot__text eRhwgR"
                      >
                        Notice you pass the form an \`initialValues\` which sets default values for the form. When a user submits the form is your chance to persist those values to your server and other reducers. When the \`onSubmit\` is executed, you can expect that client side validations have ran.
                      </div>
                    </BotText>
                    <Pre>
                      <pre
                        className="Pre-s15rlm7k-0 dXAjMP"
                      >
                        
import { reduxForm, Field, propTypes, SubmissionError } from 'redux-form'

const required = value =&gt; (value ? undefined : 'Required') // Validator

function FormExample({ handleSubmit, reset, pristine, submitting, error }) {
	const onSubmit = (values) =&gt; console.log('Your async submit function. Submitted values: ', values)
	return (
		&lt;Form onSubmit={handleSubmit(onSubmit)}&gt;
			&lt;SectionHeading&gt;Example Heading&lt;/SectionHeading&gt;
			&lt;Field name="firstName" label="First Name" component={InputField} /&gt;
			{error && &lt;P&gt;{error}&lt;/P&gt;}
			&lt;LinkPile&gt;
				&lt;Button alt disabled={pristine || submitting} onClick={reset}&gt;
					Reset Form
				&lt;/Button&gt;
				&lt;Button primary type="submit" disabled={submitting} busy={submitting}&gt;
					Submit
				&lt;/Button&gt;
			&lt;/LinkPile&gt;
		&lt;/Form&gt;
	)}
export default reduxForm({
	form: 'form-example',
	initialValues: {
		firstName: 'Sprucebot'
	}
})(FormExample)
                      </pre>
                    </Pre>
                    <Pre>
                      <pre
                        className="Pre-s15rlm7k-0 dXAjMP"
                      >
                        &lt;Field name="firstName" label="First Name" component={InputField} /&gt;
                      </pre>
                    </Pre>
                    <Pre>
                      <pre
                        className="Pre-s15rlm7k-0 dXAjMP"
                      >
                        &lt;Field name="email" label="Email" component={InputField} /&gt;
                      </pre>
                    </Pre>
                    <Pre>
                      <pre
                        className="Pre-s15rlm7k-0 dXAjMP"
                      >
                        &lt;Field
	name="password"
	type="password"
	label="Password"
	validate={[required, minLength8]}
	component={InputField}
/&gt;
                      </pre>
                    </Pre>
                    <Pre>
                      <pre
                        className="Pre-s15rlm7k-0 dXAjMP"
                      >
                        &lt;Field
	name="description"
	type="textarea"
	label="Growing multiline input"
	finePrint="This is helpful fine print."
	component={TextArea}
/&gt;
                      </pre>
                    </Pre>
                    <Pre>
                      <pre
                        className="Pre-s15rlm7k-0 dXAjMP"
                      >
                        &lt;Field
	name="dropdown"
	label="Dropdowns Rock!"
	validate={required}
	component={SelectField}
&gt;
	&lt;option value={null}&gt;Select a value&lt;/option&gt;
	&lt;option value="value1"&gt;Value 1&lt;/option&gt;
	&lt;option value="value2"&gt;Value 2&lt;/option&gt;
&lt;/Field&gt;
                      </pre>
                    </Pre>
                  </form>
                </Form>
              </FormExample>
            </Form(FormExample)>
          </Connect(Form(FormExample))>
        </ReduxForm>
      </Component>
    </Connect(Component)>
  </Provider>
</WrappedCmp>
`;
