$breakpoints-map: (
	'small': 500px,
	'medium': 750px,
	'large': 1000px,
	'x-large': 1200px
);

@mixin gt($size) {
	@if map-has-key($breakpoints-map, $size) {
		@media screen and (min-width: map-get($breakpoints-map, $size)) {
			@content;
		}
	} @else {
		@media screen and (min-width: $size) {
			@content;
		}
	}
}

/**
Spacing Scale
*/
$spacingscale-map: (
	'3xs': 0.125rem,
	'2xs': 0.25rem,
	'xs': 0.5rem,
	'sm': 0.75rem,
	'md': 1rem,
	'lg': 1.5rem,
	'xl': 2rem,
	'2xl': 2.5rem,
	'3xl': 3rem
);

@function spacing($scale) {
	@if map-has-key($spacingscale-map, $scale) {
		@return map-get($spacingscale-map, $scale);
	} @else {
		@warn 'This is not a step of the Heartwood Spacing Scale!';
	}
}

/**
Layout Width
*/
$layout-width-map: (
	'primary': (
		min: rem(480),
		max: rem(640)
	),
	'secondary': (
		min: rem(240),
		max: rem(320)
	)
);

@function layout-width($name, $value: null) {
	@if map-has-key(map-get($layout-width-map, $name), $value) {
		@return map-get(map-get($layout-width-map, $name), $value);
	} @else {
		@warn 'This is not a valid Heartwood Layout Width!';
	}
}
