{
  "config": {
    "title": "React Heartwood Components",
    "description": "React components for your Sprucebot Skill üí™üèº",
    "menu": [
      "Heartwood",
      {
        "name": "Avatars",
        "menu": [
          "Avatar",
          "UserAvatar"
        ]
      },
      {
        "name": "Buttons",
        "menu": [
          "Button",
          "ButtonGroup",
          "ContextMenu"
        ]
      },
      {
        "name": "Cards",
        "menu": [
          "Card",
          "CardHeader",
          "CardBody",
          "CardFooter",
          "CardSection",
          "CardBuilder",
          "OnboardingCard",
          "Scores"
        ]
      },
      {
        "name": "Communication",
        "menu": [
          "Message",
          "MessageBuilder"
        ]
      },
      {
        "name": "Core",
        "menu": [
          "HeaderPrimary",
          "DefaultLockup",
          "Hamburger",
          "LocationMenu",
          "UserMenu",
          "SaveBar",
          "Sidebar",
          "SidebarSection",
          "SidebarItem",
          "SidebarFooter",
          "SidebarExpander",
          "HelpButton",
          "Legal",
          "FooterPrimary",
          "ProfileSummary",
          "FeedBuilder"
        ]
      },
      {
        "name": "Feedback",
        "menu": [
          "BotText",
          "CircleLoader",
          "EmptyState",
          "Loader",
          "Toast",
          "ToastHeader",
          "ToastWrapper"
        ]
      },
      {
        "name": "Forms",
        "menu": [
          "Autosuggest",
          "Checkbox",
          "DatePicker",
          "DomainInput",
          "Dropzone",
          "DurationInput",
          "FormBuilder",
          "FormInner",
          "FormLayout",
          "FormLayoutGroup",
          "FormLayoutItem",
          "ImageCropper",
          "InputHelper",
          "InputInner",
          "InputPre",
          "PhoneInput",
          "Radio",
          "Search",
          "Select",
          "Slider",
          "Stars",
          "Tag",
          "TextArea",
          "TextInput",
          "Toggle"
        ]
      },
      {
        "name": "Icons",
        "menu": [
          "Icon"
        ]
      },
      {
        "name": "Images",
        "menu": [
          "Image",
          "ImageSSR"
        ]
      },
      {
        "name": "Lists",
        "menu": [
          "List",
          "ListHeader",
          "ListItem",
          "RecordSelectionList",
          "RecordSelectionListItem",
          "SortableList"
        ]
      },
      {
        "name": "Modals",
        "menu": [
          "Modal",
          "ModalHeader",
          "ModalBody",
          "ModalFooter",
          "PagedModal"
        ]
      },
      {
        "name": "Navigation",
        "menu": [
          "Pagination",
          "Tabs",
          "Tab"
        ]
      },
      {
        "name": "Structure",
        "menu": [
          "Layout",
          "LayoutSection",
          "Page",
          "PageContent",
          "PageHeader",
          "View"
        ]
      },
      {
        "name": "Tables",
        "menu": [
          "Table",
          "TableFilters",
          "TableSearch",
          "RecordTable"
        ]
      },
      {
        "name": "Text",
        "menu": [
          "Heading",
          "Subheading",
          "Text",
          "Span",
          "TextContainer",
          "TextStyle"
        ]
      },
      {
        "name": "Utilities",
        "menu": [
          "Anchor",
          "FontLoader"
        ]
      }
    ],
    "version": "8.15.2",
    "repository": null,
    "native": false,
    "codeSandbox": true,
    "themeConfig": {
      "colors": {
        "primary": "#1953cb",
        "blockquoteBg": "#fff",
        "blockquoteBorder": "#fff",
        "blockquoteColor": "#525966"
      },
      "styles": {
        "h3": [
          "\n\t\t\t\tmargin: 25px 0 10px;\n\t\t\t\tfont-size: 20px;\n\t\t\t\tfont-weight: 600;\n\t\t\t"
        ],
        "blockquote": [
          "\n\t\t\t\tmargin: 25px 0;\n\t\t\t\tfont-size: 32px;\n\t\t\t"
        ]
      }
    },
    "separator": "-",
    "wrapper": "docz/DoczWrapper",
    "plugins": [
      {}
    ]
  },
  "props": [
    {
      "key": "docz/DoczWrapper.js",
      "value": [
        {
          "description": "",
          "displayName": "DoczWrapper",
          "methods": [],
          "actualName": "DoczWrapper"
        }
      ]
    },
    {
      "key": "docz/components/H1.js",
      "value": [
        {
          "description": "",
          "displayName": "H1",
          "methods": [],
          "actualName": "H1"
        }
      ]
    },
    {
      "key": "docz/components/Label.js",
      "value": [
        {
          "description": "",
          "displayName": "Label",
          "methods": [],
          "actualName": "Label"
        }
      ]
    },
    {
      "key": "docz/components/Menu.js",
      "value": [
        {
          "description": "",
          "displayName": "Menu",
          "methods": [],
          "actualName": "Menu"
        }
      ]
    },
    {
      "key": "docz/components/Page.js",
      "value": [
        {
          "description": "",
          "displayName": "Page",
          "methods": [],
          "actualName": "Page"
        }
      ]
    },
    {
      "key": "docz/components/Sidebar.js",
      "value": [
        {
          "description": "",
          "displayName": "Sidebar",
          "methods": [],
          "actualName": "Sidebar"
        }
      ]
    },
    {
      "key": "src/components/Avatar/UserAvatar.js",
      "value": [
        {
          "description": "",
          "displayName": "UserAvatar",
          "methods": [],
          "actualName": "UserAvatar",
          "props": {
            "user": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            }
          },
          "composes": [
            "AvatarProps"
          ]
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/BigCalendar.js",
      "value": [
        {
          "description": "",
          "displayName": "BigCalendar",
          "methods": [
            {
              "name": "componentDidMount",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "componentWillUnmount",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getDefaultStartDate",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": {
                "type": {
                  "name": "moment"
                }
              }
            },
            {
              "name": "getDateRange",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleSizing",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleChangeView",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleBackDate",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleNextDate",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "_setStartDate",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "date",
                  "type": {
                    "name": "moment",
                    "alias": "moment"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleDateToToday",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [],
              "returns": null
            },
            {
              "name": "getViewDetails",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "view",
                  "optional": true,
                  "type": {
                    "name": "String",
                    "alias": "String"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "getViewProps",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": {
                "type": {
                  "name": "signature",
                  "type": "object",
                  "raw": "{\n\t[name: string]: any\n}",
                  "signature": {
                    "properties": [
                      {
                        "key": {
                          "name": "string"
                        },
                        "value": {
                          "name": "any",
                          "required": true
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "name": "handleUpdateHorizontalPagerDetails",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{\n    currentPage,\n    totalPages\n}: {\n    currentPage: number,\n    totalPages: number\n}",
                  "type": {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n    currentPage: number,\n    totalPages: number\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "currentPage",
                          "value": {
                            "name": "number",
                            "required": true
                          }
                        },
                        {
                          "key": "totalPages",
                          "value": {
                            "name": "number",
                            "required": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleHorizontalPageNext",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleHorizontalPageBack",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getStartTimeForUser",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "user",
                  "type": {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n\tid: string,\n\tname: string\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "id",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "name",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        }
                      ]
                    },
                    "alias": "User"
                  }
                },
                {
                  "name": "date",
                  "type": {
                    "name": "moment",
                    "alias": "moment"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "getEndTimeForUser",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "user",
                  "type": {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n\tid: string,\n\tname: string\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "id",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "name",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        }
                      ]
                    },
                    "alias": "User"
                  }
                },
                {
                  "name": "date",
                  "type": {
                    "name": "moment",
                    "alias": "moment"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleChangeUserMode",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "mode",
                  "type": {
                    "name": "union",
                    "raw": "'day' | 'week' | 'month'",
                    "elements": [
                      {
                        "name": "literal",
                        "value": "'day'"
                      },
                      {
                        "name": "literal",
                        "value": "'week'"
                      },
                      {
                        "name": "literal",
                        "value": "'month'"
                      }
                    ]
                  }
                }
              ],
              "returns": null
            }
          ],
          "actualName": "BigCalendar",
          "props": {
            "defaultView": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'day' | 'week' | 'month'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'day'"
                  },
                  {
                    "name": "literal",
                    "value": "'week'"
                  },
                  {
                    "name": "literal",
                    "value": "'month'"
                  }
                ]
              },
              "description": "",
              "defaultValue": {
                "value": "'day'",
                "computed": false
              }
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "defaultStartDate": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "onChangeStartDate": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "moment => void",
                "signature": {
                  "arguments": [
                    {
                      "name": "",
                      "type": {
                        "name": "moment"
                      }
                    }
                  ],
                  "return": {
                    "name": "void"
                  }
                }
              },
              "description": ""
            },
            "slotsPerHour": {
              "required": false,
              "flowType": {
                "name": "number"
              },
              "description": "",
              "defaultValue": {
                "value": "4",
                "computed": false
              }
            },
            "defaultMinTime": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'00:00'",
                "computed": false
              }
            },
            "defaultMaxTime": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'23:59'",
                "computed": false
              }
            },
            "defaultStartTime": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'07:00'",
                "computed": false
              }
            },
            "defaultEndTime": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'20:00'",
                "computed": false
              }
            },
            "headerDateFormat": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'MMMM YYYY'",
                "computed": false
              }
            },
            "mobileHeaderDateFormat": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'MMMM Do, YYYY'",
                "computed": false
              }
            },
            "users": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": ""
            },
            "timezone": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "allEvents": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": "",
              "defaultValue": {
                "value": "[]",
                "computed": false
              }
            },
            "onDropEvent": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "viewProps": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "object",
                "raw": "{\n\t[name: string]: any\n}",
                "signature": {
                  "properties": [
                    {
                      "key": {
                        "name": "string"
                      },
                      "value": {
                        "name": "any",
                        "required": true
                      }
                    }
                  ]
                }
              },
              "description": "",
              "defaultValue": {
                "value": "{}",
                "computed": false
              }
            },
            "longPressDelay": {
              "required": false,
              "flowType": {
                "name": "number"
              },
              "description": "",
              "defaultValue": {
                "value": "500",
                "computed": false
              }
            },
            "userModeOptions": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": ""
            },
            "onChangeUserMode": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "string => void",
                "signature": {
                  "arguments": [
                    {
                      "name": "",
                      "type": {
                        "name": "string"
                      }
                    }
                  ],
                  "return": {
                    "name": "void"
                  }
                }
              },
              "description": ""
            },
            "userMode": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "doubleClickTime": {
              "required": false,
              "flowType": {
                "name": "number"
              },
              "description": "",
              "defaultValue": {
                "value": "250",
                "computed": false
              }
            },
            "onDoubleClickView": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onClickView": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "doubleClickToCreate": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "userSchedules": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "eventTimeFormat": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'h:mma'",
                "computed": false
              }
            },
            "headerCellDowFormat": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'ddd'",
                "computed": false
              }
            },
            "headerCellDayFormat": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'D'",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BotText/BotText.js",
      "value": [
        {
          "description": "",
          "displayName": "BotText",
          "methods": [],
          "actualName": "BotText",
          "props": {
            "text": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Use for simple text."
            },
            "children": {
              "required": false,
              "flowType": {
                "name": "Node"
              },
              "description": "May be used instead of text, i.e. if the Bot Text needs to include a link."
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional class to add."
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Button/Button.js",
      "value": [
        {
          "description": "",
          "displayName": "Button",
          "methods": [],
          "actualName": "Button",
          "props": {
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional class to add to the button.",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "children": {
              "required": false,
              "flowType": {
                "name": "Node"
              },
              "description": "Optional children passed into button"
            },
            "kind": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Sets the visual appearance of the button. May be primary, secondary, simple, or caution.",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "isSmall": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the button less tall.",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isFullWidth": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the button fill its parent's width.",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isLoading": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to hide any text or icon in the button and show a loader instead.",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isIconOnly": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to hide any text in the button. Text should still be provided for accessibility.",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "text": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Text for the button.",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "href": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Will render a link. May be relative or absolute.",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "icon": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "Node | IconProps",
                "elements": [
                  {
                    "name": "Node"
                  },
                  {
                    "name": "IconProps"
                  }
                ]
              },
              "description": "Icon for the button.",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "type": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Type attribute for HTML button element. Defaults to 'button'.",
              "defaultValue": {
                "value": "'button'",
                "computed": false
              }
            },
            "onClick": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Click handler.",
              "defaultValue": {
                "value": "() => null",
                "computed": false
              }
            },
            "payload": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "Will be passed back with the on click."
            },
            "AnchorComponent": {
              "required": false,
              "flowType": {
                "name": "Node"
              },
              "description": "Component used to render anchor"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/ButtonGroup/ButtonGroup.js",
      "value": [
        {
          "description": "",
          "displayName": "ButtonGroup",
          "methods": [],
          "actualName": "ButtonGroup",
          "props": {
            "actions": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "ButtonProps"
                  }
                ],
                "raw": "Array<ButtonProps>"
              },
              "description": "Array of actions to render the group's buttons."
            },
            "kind": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'default' | 'segmented' | 'floating'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'default'"
                  },
                  {
                    "name": "literal",
                    "value": "'segmented'"
                  },
                  {
                    "name": "literal",
                    "value": "'floating'"
                  }
                ]
              },
              "description": "Visual appearance of the group.",
              "defaultValue": {
                "value": "'default'",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Card/Card.js",
      "value": [
        {
          "description": "",
          "displayName": "Card",
          "methods": [],
          "actualName": "Card",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Should be Card Header, Card Body, and Card Footer, unless using the card background for styling only."
            },
            "isCentered": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make all content center aligned.",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isCritical": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true if this card is mission-critical for the person who sees it."
            },
            "isSmall": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to render a smaller card variation"
            },
            "isFullSize": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to fill space of parent"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional classname"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/ContextMenu/ContextMenu.js",
      "value": [
        {
          "description": "",
          "displayName": "ContextMenu",
          "methods": [
            {
              "name": "componentDidMount",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "componentWillUnmount",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleWindowResize",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getTriggerPlacement",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getMenuPlacement",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "updateMenuPlacement",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleClickOutside",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleEscape",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleToggle",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "manageListeners",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleClickAction",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "payload",
                  "type": null
                },
                {
                  "name": "callback",
                  "type": null
                }
              ],
              "returns": null
            }
          ],
          "actualName": "ContextMenu",
          "props": {
            "actions": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "ButtonProps"
                  }
                ],
                "raw": "Array<ButtonProps>"
              },
              "description": "The actions to be shown on tap/click"
            },
            "isLeftAligned": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "DEPRECATED Set true to left align the menu"
            },
            "isRightAligned": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "DEPRECATED Set true to right align the menu",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isBottomAligned": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "DEPRECATED Set true to align menu above button",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "size": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'medium' | 'large'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'medium'"
                  },
                  {
                    "name": "literal",
                    "value": "'large'"
                  }
                ]
              },
              "description": "Set the width of the menu. Helpful for longer text in buttons"
            },
            "text": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Adds text to the collapsed menu"
            },
            "icon": {
              "required": false,
              "flowType": {
                "name": "any"
              },
              "description": "Overrides the default icon"
            },
            "isSimple": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the button blue"
            },
            "isSmall": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the button smaller",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "closeOnSelectAction": {
              "required": true,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set tot true makes the menu close when any action is selected"
            },
            "isTextOnly": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Hide the icon entirely",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional classname that applies to the button",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "onToggleContextMenuVisible": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Dropzone/Dropzone.js",
      "value": [
        {
          "description": "",
          "displayName": "Dropzone",
          "methods": [
            {
              "name": "onDragEnter",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "onDragLeave",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "...args",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "onDragOver",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "...args",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "onDragStart",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "...args",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "onDrop",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "...args",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "onDropAccepted",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "...args",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "onDropRejected",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "...args",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "onFileDialogCancel",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "...args",
                  "type": null
                }
              ],
              "returns": null
            }
          ],
          "actualName": "Dropzone",
          "props": {
            "id": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Unique identifier for the dropzone"
            },
            "onDrop": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Callback when file(s) are dropped"
            },
            "buttonText": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Text for the button"
            },
            "error": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Text shown when file(s) are dropped that aren't accepted"
            },
            "uploadProgress": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": "Displays progress while uploading"
            },
            "onDragEnter": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "onDragEnter callback"
            },
            "onDragLeave": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "onDragLeave callback"
            },
            "onDragOver": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "onDragOver callback"
            },
            "onDropAccepted": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "onDropAccepted callback"
            },
            "onDropRejected": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "onDropRejected callback"
            },
            "onFileDialogCancel": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "onFileDialogCancel callback"
            },
            "onDragStart": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "onDragStart callback"
            },
            "label": {
              "required": true,
              "flowType": {
                "name": "string",
                "nullable": true
              },
              "description": "Optional label for the Dropzone"
            },
            "postLabel": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional text to show after the label"
            },
            "isSmall": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to use a smaller Dropzone",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isCircular": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the Dropzone circular. Should only be used when isSmall is set to true",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "fileWasUploaded": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true when a file has been successfully uploaded",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "defaultIcon": {
              "required": false,
              "flowType": {
                "name": "Node"
              },
              "description": "The icon to display before an upload has happened"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/EmptyState/EmptyState.js",
      "value": [
        {
          "description": "",
          "displayName": "EmptyState",
          "methods": [],
          "actualName": "EmptyState",
          "props": {
            "headline": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Headline text to be displayed",
              "defaultValue": {
                "value": "'Nothing to see here'",
                "computed": false
              }
            },
            "subheadline": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Subheadline text to be displayed (optional)"
            },
            "icon": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Primary icon to be displayed above the headline (optional)",
              "defaultValue": {
                "value": "'empty_box'",
                "computed": false
              }
            },
            "isLineIcon": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Primary icon as line art (optional)",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "primaryAction": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "object",
                "raw": "{ ...ButtonProps }",
                "signature": {
                  "properties": []
                }
              },
              "description": "Primary action in the footer (optional)"
            },
            "primaryActionButtonKind": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Primary action in the footer (optional)",
              "defaultValue": {
                "value": "'simple'",
                "computed": false
              }
            },
            "primaryActionButtonIcon": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Primary action in the footer (optional)"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/FontLoader/FontLoader.js",
      "value": [
        {
          "description": "",
          "displayName": "FontLoader",
          "methods": [],
          "actualName": "FontLoader",
          "props": {
            "fonts": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "string"
                  }
                ],
                "raw": "Array<string>"
              },
              "description": "Fonts that need to be loaded"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/FormPartials.js",
      "value": [
        {
          "description": "",
          "displayName": "InputPre",
          "methods": [],
          "actualName": "InputPre",
          "props": {
            "id": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "label": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "postLabel": {
              "required": true,
              "flowType": {
                "name": "string",
                "nullable": true
              },
              "description": ""
            }
          }
        },
        {
          "description": "",
          "displayName": "InputInner",
          "methods": [],
          "actualName": "InputInner",
          "props": {
            "kind": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "iconBefore": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "iconAfter": {
              "required": false,
              "flowType": {
                "name": "any"
              },
              "description": ""
            },
            "appendix": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "handleClear": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            }
          }
        },
        {
          "description": "",
          "displayName": "InputHelper",
          "methods": [],
          "actualName": "InputHelper",
          "props": {
            "error": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "helper": {
              "required": false,
              "flowType": {
                "name": "any"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Heading/Heading.js",
      "value": [
        {
          "description": "",
          "displayName": "Heading",
          "methods": [],
          "actualName": "Heading",
          "props": {
            "element": {
              "defaultValue": {
                "value": "'h2'",
                "computed": false
              },
              "required": false
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Icon/Icon.js",
      "value": [
        {
          "description": "",
          "displayName": "Icon",
          "methods": [],
          "actualName": "Icon",
          "props": {
            "icon": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "The name of the icon to render. If not found, this will return null."
            },
            "isLineIcon": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to render an icon with a stroke, but no fill"
            },
            "customIcon": {
              "required": false,
              "flowType": {
                "name": "any"
              },
              "description": ""
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Image/Image.js",
      "value": [
        {
          "description": "",
          "displayName": "Image",
          "methods": [],
          "actualName": "Image"
        }
      ]
    },
    {
      "key": "src/components/ImageCropper/ImageCropper.js",
      "value": [
        {
          "description": "",
          "displayName": "ImageCropper",
          "methods": [
            {
              "name": "handleScale",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleRotate",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "dir",
                  "type": {
                    "name": "union",
                    "raw": "'left' | 'right'",
                    "elements": [
                      {
                        "name": "literal",
                        "value": "'left'"
                      },
                      {
                        "name": "literal",
                        "value": "'right'"
                      }
                    ]
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleSubmit",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [],
              "returns": null
            }
          ],
          "actualName": "ImageCropper",
          "props": {
            "image": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "The image. If null, this will render a Dropzone."
            },
            "width": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": "Width of the image"
            },
            "height": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": "Height of the image"
            },
            "dropzoneProps": {
              "required": true,
              "flowType": {
                "name": "DropzoneProps"
              },
              "description": "Properties for the Dropzone"
            },
            "isCircular": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true for ciruclar image"
            },
            "onSubmit": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Callback when save button is clicked"
            },
            "onUploadNewImage": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Callback when upload new button is clicked"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/ImageSSR/ImageSSR.js",
      "value": [
        {
          "description": "",
          "displayName": "ImageSSR",
          "methods": [],
          "actualName": "ImageSSR",
          "props": {
            "src": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "alt": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "className": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "width": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "height": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Layout/Layout.js",
      "value": [
        {
          "description": "",
          "displayName": "Layout",
          "methods": [],
          "actualName": "Layout",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Contents of the Layout. Should be LayoutSection components"
            },
            "isCentered": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to center align layout content.",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isFullBleed": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to remove horizontal padding from layout.",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "width": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'base' | 'tight' | 'wide' | 'full-width'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'base'"
                  },
                  {
                    "name": "literal",
                    "value": "'tight'"
                  },
                  {
                    "name": "literal",
                    "value": "'wide'"
                  },
                  {
                    "name": "literal",
                    "value": "'full-width'"
                  }
                ]
              },
              "description": "Sets the width of the layout",
              "defaultValue": {
                "value": "'base'",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/List/List.js",
      "value": [
        {
          "description": "",
          "displayName": "ListWrapper",
          "methods": [],
          "actualName": "ListWrapper",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": ""
            }
          }
        },
        {
          "description": "",
          "displayName": "List",
          "methods": [],
          "actualName": "List",
          "props": {
            "header": {
              "required": false,
              "flowType": {
                "name": "ListHeaderProps"
              },
              "description": "List Header",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "items": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "ListItemProps"
                  }
                ],
                "raw": "Array<ListItemProps>"
              },
              "description": "List items"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Class for the list",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "isSmall": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the list smaller",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "children": {
              "required": false,
              "flowType": {
                "name": "any"
              },
              "description": "any passthrough to render in the body of the list"
            },
            "areSeparatorsVisible": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set to true to show separators between list items",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "selectableType": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'checkbox' | 'radio'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'checkbox'"
                  },
                  {
                    "name": "literal",
                    "value": "'radio'"
                  }
                ]
              },
              "description": "Optional: set whether to use checkbox or radio for selectable list items"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Loader/Loader.js",
      "value": [
        {
          "description": "",
          "displayName": "Loader",
          "methods": [],
          "actualName": "Loader",
          "props": {
            "isLight": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isCentered": {
              "required": true,
              "flowType": {
                "name": "boolean"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Message/Message.js",
      "value": [
        {
          "description": "",
          "displayName": "Message",
          "methods": [],
          "actualName": "Message",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Message children."
            },
            "from": {
              "required": true,
              "flowType": {
                "name": "signature",
                "type": "object",
                "raw": "{\n\t/** Unique id of the sender */\n\tid: string,\n\n\t/** Image associated with message sender */\n\timage?: string,\n\n\t/** Name associated with message sender */\n\tname?: string,\n\n\t/** Alt description with message sender */\n\talt?: string\n}",
                "signature": {
                  "properties": [
                    {
                      "key": "id",
                      "value": {
                        "name": "string",
                        "required": true
                      }
                    },
                    {
                      "key": "image",
                      "value": {
                        "name": "string",
                        "required": false
                      }
                    },
                    {
                      "key": "name",
                      "value": {
                        "name": "string",
                        "required": false
                      }
                    },
                    {
                      "key": "alt",
                      "value": {
                        "name": "string",
                        "required": false
                      }
                    }
                  ]
                }
              },
              "description": "Information about the sender"
            },
            "dateSent": {
              "required": false,
              "flowType": {
                "name": "moment"
              },
              "description": "Date the message was sent"
            },
            "replies": {
              "required": false,
              "flowType": {
                "name": "Array"
              },
              "description": "Informative replies to the message"
            },
            "attachments": {
              "required": false,
              "flowType": {
                "name": "Array"
              },
              "description": "Additional content related to the message"
            },
            "detail": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Gives additional context for the message"
            },
            "primaryAction": {
              "required": false,
              "flowType": {
                "name": "ButtonProps"
              },
              "description": "An action related to this message"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional classname"
            },
            "isFromSprucebot": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true if the message is from Sprucebot",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Modal/Modal.js",
      "value": [
        {
          "description": "",
          "displayName": "Modal",
          "methods": [
            {
              "name": "setAppElement",
              "docblock": null,
              "modifiers": [
                "static"
              ],
              "params": [
                {
                  "name": "selector",
                  "type": {
                    "name": "string"
                  }
                }
              ],
              "returns": null
            }
          ],
          "actualName": "Modal",
          "props": {
            "isOpen": {
              "required": true,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to show the modal"
            },
            "isFullHeight": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Should the modal stretch to its maximum height whatever the content?",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "size": {
              "required": true,
              "flowType": {
                "name": "union",
                "raw": "'small' | 'medium' | 'full-width'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'small'"
                  },
                  {
                    "name": "literal",
                    "value": "'medium'"
                  },
                  {
                    "name": "literal",
                    "value": "'full-width'"
                  }
                ]
              },
              "description": "Size of the modal"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional class name"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Page/Page.js",
      "value": [
        {
          "description": "",
          "displayName": "Page",
          "methods": [],
          "actualName": "Page",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Should be Card Header, Card Body, and Card Footer, unless using the card background for styling only."
            },
            "isCentered": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make page content center aligned.",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "hasHeader": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set false to add extra spacing to top of page when there is no PageHeader.",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional classname"
            },
            "header": {
              "required": false,
              "flowType": {
                "name": "PageHeaderProps"
              },
              "description": "Page header props",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "sidebarIsCollapsed": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true if the page has a sidebar that is collapsed. Defaults to false.",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/PagedModal/PagedModal.js",
      "value": [
        {
          "description": "",
          "displayName": "PagedModal",
          "methods": [],
          "actualName": "PagedModal",
          "props": {
            "onRequestClose": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Callback to close the modal"
            },
            "canGoBack": {
              "required": true,
              "flowType": {
                "name": "boolean"
              },
              "description": "Whether the back button should be displayed"
            },
            "onClickBack": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Function to handle navigating backwards in the modal"
            },
            "pages": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n\t/** The title for this page */\n\ttitle: string,\n\n\t/** The modal body for this page */\n\tbody: React.Node,\n\n\t/** The modal footer primary action for this page */\n\tfooterPrimaryAction?: ButtonProps,\n\n\t/** The modal footer secondary action for this page */\n\tfooterSecondaryAction?: ButtonProps,\n\n\t/** Whether this page is currently visible */\n\tisCurrent: boolean\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "title",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "body",
                          "value": {
                            "name": "ReactNode",
                            "raw": "React.Node",
                            "required": true
                          }
                        },
                        {
                          "key": "footerPrimaryAction",
                          "value": {
                            "name": "ButtonProps",
                            "required": false
                          }
                        },
                        {
                          "key": "footerSecondaryAction",
                          "value": {
                            "name": "ButtonProps",
                            "required": false
                          }
                        },
                        {
                          "key": "isCurrent",
                          "value": {
                            "name": "boolean",
                            "required": true
                          }
                        }
                      ]
                    }
                  }
                ],
                "raw": "Array<ModalPageProps>"
              },
              "description": "Set true to show the modal"
            },
            "size": {
              "defaultValue": {
                "value": "'medium'",
                "computed": false
              },
              "required": false
            }
          },
          "composes": [
            "ModalProps"
          ]
        }
      ]
    },
    {
      "key": "src/components/Pagination/Pagination.js",
      "value": [
        {
          "description": "",
          "displayName": "Pagination",
          "methods": [],
          "actualName": "Pagination",
          "props": {
            "currentPage": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": "The current page"
            },
            "totalPages": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": "Total pages"
            },
            "onClickNext": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Go forward one page"
            },
            "onClickBack": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Go back one page"
            },
            "onPageButtonClick": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Navigate to the clicked/tapped page"
            },
            "onJump": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Navigate throught the jump input"
            },
            "showPages": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to display pages between arrows"
            },
            "showJump": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to show the jump input"
            },
            "isSimple": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to use simple buttons"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/RecordSelectionList/RecordSelectionList.js",
      "value": [
        {
          "description": "",
          "displayName": "RecordSelectionList",
          "methods": [
            {
              "name": "reset",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [],
              "returns": null
            },
            {
              "name": "getVisibleRecordHeight",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "renderRow",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{\n    index,\n    key,\n    parent,\n    style\n}: {\n    index: number,\n    key: string,\n    parent: any,\n    style: Object\n}",
                  "type": {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n    index: number,\n    key: string,\n    parent: any,\n    style: Object\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "index",
                          "value": {
                            "name": "number",
                            "required": true
                          }
                        },
                        {
                          "key": "key",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "parent",
                          "value": {
                            "name": "any",
                            "required": true
                          }
                        },
                        {
                          "key": "style",
                          "value": {
                            "name": "Object",
                            "required": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "renderInnerRow",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{\n    index,\n    key,\n    style\n}: {\n    index: number,\n    key: string,\n    style: Object\n}",
                  "type": {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n    index: number,\n    key: string,\n    style: Object\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "index",
                          "value": {
                            "name": "number",
                            "required": true
                          }
                        },
                        {
                          "key": "key",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "style",
                          "value": {
                            "name": "Object",
                            "required": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleInfiniteLoad",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [],
              "returns": null
            },
            {
              "name": "handleSearchUpdate",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "SyntheticInputEvent",
                    "elements": [
                      {
                        "name": "HTMLInputElement"
                      }
                    ],
                    "raw": "SyntheticInputEvent<HTMLInputElement>",
                    "alias": "SyntheticInputEvent"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleRemoveSelection",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            }
          ],
          "actualName": "RecordSelectionList",
          "props": {
            "renderRecord": {
              "required": true,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "any => Node",
                "signature": {
                  "arguments": [
                    {
                      "name": "",
                      "type": {
                        "name": "any"
                      }
                    }
                  ],
                  "return": {
                    "name": "Node"
                  }
                }
              },
              "description": "Required method to render a record into a node"
            },
            "getRecordId": {
              "required": true,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "Record => string",
                "signature": {
                  "arguments": [
                    {
                      "name": "",
                      "type": {
                        "name": "any"
                      }
                    }
                  ],
                  "return": {
                    "name": "string"
                  }
                }
              },
              "description": "Get a unique ID for a record; given that data may be shaped in an unpredictable manner,\nyou must implement this at each usage."
            },
            "loadRecords": {
              "required": true,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "({|\n    offset: number,\n    limit: number,\n    search?: string\n|}) => Promise<Array<Record>>",
                "signature": {
                  "arguments": [
                    {
                      "name": "",
                      "type": {
                        "name": "signature",
                        "type": "object",
                        "raw": "{|\n    offset: number,\n    limit: number,\n    search?: string\n|}",
                        "signature": {
                          "properties": [
                            {
                              "key": "offset",
                              "value": {
                                "name": "number",
                                "required": true
                              }
                            },
                            {
                              "key": "limit",
                              "value": {
                                "name": "number",
                                "required": true
                              }
                            },
                            {
                              "key": "search",
                              "value": {
                                "name": "string",
                                "required": false
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "return": {
                    "name": "Promise",
                    "elements": [
                      {
                        "name": "Array",
                        "elements": [
                          {
                            "name": "any"
                          }
                        ],
                        "raw": "Array<Record>"
                      }
                    ],
                    "raw": "Promise<Array<Record>>"
                  }
                }
              },
              "description": "Load records for the offset/limit provided"
            },
            "totalRecordCount": {
              "required": false,
              "flowType": {
                "name": "number"
              },
              "description": "Total number of records that could be in this list.\nOptional, but optimizes infinite load and adds supplementary UI"
            },
            "selectedIds": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "string"
                  }
                ],
                "raw": "Array<RecordId>"
              },
              "description": "Array of IDs in this collection of records that should be marked as selected"
            },
            "canSearch": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Can the search the records in the list?"
            },
            "unselectableIds": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "string"
                  }
                ],
                "raw": "Array<RecordId>"
              },
              "description": "Array of IDs that should not be selectable"
            },
            "canSelect": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'many' | 'one'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'many'"
                  },
                  {
                    "name": "literal",
                    "value": "'one'"
                  }
                ]
              },
              "description": "Can the user select many or one records in this list?"
            },
            "canRemove": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Can the user remove records from this list?"
            },
            "searchPlaceholder": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optionally provide a placeholder to the search input"
            },
            "showSelectedCount": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set to false to hide \"# selected\" text - defaults to true",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "onSelect": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "(RecordId, Record) => void",
                "signature": {
                  "arguments": [
                    {
                      "name": "",
                      "type": {
                        "name": "string"
                      }
                    },
                    {
                      "name": "",
                      "type": {
                        "name": "any"
                      }
                    }
                  ],
                  "return": {
                    "name": "void"
                  }
                }
              },
              "description": "Callback for selection of a record"
            },
            "onRemove": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "(RecordId, Record) => void",
                "signature": {
                  "arguments": [
                    {
                      "name": "",
                      "type": {
                        "name": "string"
                      }
                    },
                    {
                      "name": "",
                      "type": {
                        "name": "any"
                      }
                    }
                  ],
                  "return": {
                    "name": "void"
                  }
                }
              },
              "description": "Callback for when user requests to remove a record from the list."
            },
            "maxRowsVisible": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "number | 'auto'",
                "elements": [
                  {
                    "name": "number"
                  },
                  {
                    "name": "literal",
                    "value": "'auto'"
                  }
                ]
              },
              "description": "When set, list will become infinitely scrollable\n    /*  A number value will set the max height of the list to the number of rows specified\n    /*  A value of 'auto' will allow the list to fill the height of the parent container"
            },
            "recordsPerRequest": {
              "defaultValue": {
                "value": "10",
                "computed": false
              },
              "required": false
            }
          }
        }
      ]
    },
    {
      "key": "src/components/RecordSelectionList/RecordSelectionListItem.js",
      "value": [
        {
          "description": "",
          "displayName": "RecordSelectionListItem",
          "methods": [],
          "actualName": "RecordSelectionListItem",
          "props": {
            "title": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Title text"
            },
            "subtitle": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional subtitle text"
            },
            "avatar": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "URL to show a user avatar"
            },
            "icon": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "Inline svg icon"
            },
            "id": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/RecordTable/RecordTable.js",
      "value": [
        {
          "description": "",
          "displayName": "RecordTable",
          "methods": [
            {
              "name": "handleClickTab",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "MouseEvent",
                    "alias": "MouseEvent"
                  }
                },
                {
                  "name": "tab",
                  "type": {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n\t...TabProps,\n\tkey: string,\n\tpayload?: Object\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "key",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "payload",
                          "value": {
                            "name": "Object",
                            "required": false
                          }
                        }
                      ]
                    },
                    "alias": "Tab"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "refresh",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [],
              "returns": null
            },
            {
              "name": "navigateToPage",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "{\n    search,\n    page\n}: { search?: string, page: number }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "fetchRecords",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "{\n    search,\n    page\n}: {|\n    search?: string,\n    page: number\n|}",
                  "type": {
                    "name": "signature",
                    "type": "object",
                    "raw": "{|\n    search?: string,\n    page: number\n|}",
                    "signature": {
                      "properties": [
                        {
                          "key": "search",
                          "value": {
                            "name": "string",
                            "required": false
                          }
                        },
                        {
                          "key": "page",
                          "value": {
                            "name": "number",
                            "required": true
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleSortChanged",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "sorted",
                  "type": {
                    "name": "Array",
                    "elements": [
                      {
                        "name": "signature",
                        "type": "object",
                        "raw": "{ id: string, desc: boolean }",
                        "signature": {
                          "properties": [
                            {
                              "key": "id",
                              "value": {
                                "name": "string",
                                "required": true
                              }
                            },
                            {
                              "key": "desc",
                              "value": {
                                "name": "boolean",
                                "required": true
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "raw": "Array<{ id: string, desc: boolean }>",
                    "alias": "Array"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleSearchSuggestions",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "value",
                  "type": {
                    "name": "string"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "renderSuggestion",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "suggestion",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "componentDidMount",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleSuggestionSelected",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "MouseEvent",
                    "alias": "MouseEvent"
                  }
                },
                {
                  "name": "suggestion",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "updateFilter",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "filter",
                  "type": {
                    "name": "string"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "isFiltered",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getNoDataIcon",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getNoDataHeadline",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getNoDataSubheadline",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getNoDataPrimaryAction",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            }
          ],
          "actualName": "RecordTable",
          "props": {
            "kind": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Singular noun describing the contents of this table"
            },
            "pluralKind": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Plural noun describing the contents of this table"
            },
            "onClickTab": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "(\n    e: MouseEvent,\n    { idx: number, key: string, payload?: Object }\n) => boolean",
                "signature": {
                  "arguments": [
                    {
                      "name": "e",
                      "type": {
                        "name": "MouseEvent"
                      }
                    },
                    {
                      "name": "",
                      "type": {
                        "name": "signature",
                        "type": "object",
                        "raw": "{ idx: number, key: string, payload?: Object }",
                        "signature": {
                          "properties": [
                            {
                              "key": "idx",
                              "value": {
                                "name": "number",
                                "required": true
                              }
                            },
                            {
                              "key": "key",
                              "value": {
                                "name": "string",
                                "required": true
                              }
                            },
                            {
                              "key": "payload",
                              "value": {
                                "name": "Object",
                                "required": false
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "return": {
                    "name": "boolean"
                  }
                }
              },
              "description": "for handling when a tab is selected, return false to stop tab form being set"
            },
            "tabs": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n\t...TabProps,\n\tkey: string,\n\tpayload?: Object\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "key",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "payload",
                          "value": {
                            "name": "Object",
                            "required": false
                          }
                        }
                      ]
                    }
                  }
                ],
                "raw": "Array<Tab>"
              },
              "description": "the tabs to render, passed to Tabs component. onClick is ignored"
            },
            "isSelectable": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Should rows be selectable?"
            },
            "initialSelectedTab": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "which tab to select at first"
            },
            "initialSortColumn": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "how to sort to start"
            },
            "initialSortDirection": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "direction to start (defaults to desc)"
            },
            "initialLimit": {
              "required": false,
              "flowType": {
                "name": "number"
              },
              "description": "starting limit, defaults to RECORD_TABLE_INITIAL_LIMIT",
              "defaultValue": {
                "value": "10",
                "computed": false
              }
            },
            "initialVisibleRows": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": "The rows that should be visible when the table mounts"
            },
            "totalRows": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": "The total possible number of rows this table may contain"
            },
            "enableSearch": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "should we enable searching?",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "enableFilter": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "should we enable filtering?",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "searchPlaceholder": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "placeholder to show for search",
              "defaultValue": {
                "value": "'Filter table...'",
                "computed": false
              }
            },
            "tableSearchProps": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "props to pass through to the table search component"
            },
            "searchSuggestionAccessor": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "(suggestion: Object) => any",
                "signature": {
                  "arguments": [
                    {
                      "name": "suggestion",
                      "type": {
                        "name": "Object"
                      }
                    }
                  ],
                  "return": {
                    "name": "any"
                  }
                }
              },
              "description": "when rendering search results, this is how i'll know what to output"
            },
            "fetchRecords": {
              "required": true,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "(\n    options: RecordTableFetchOptions\n) => Promise<RecordTableFetchResults>",
                "signature": {
                  "arguments": [
                    {
                      "name": "options",
                      "type": {
                        "name": "signature",
                        "type": "object",
                        "raw": "{\n\tsortColumn: string,\n\tsortDirection: string,\n\toffset: number,\n\tlimit: number,\n\tsearch?: string,\n\tselectedTab?: string\n}",
                        "signature": {
                          "properties": [
                            {
                              "key": "sortColumn",
                              "value": {
                                "name": "string",
                                "required": true
                              }
                            },
                            {
                              "key": "sortDirection",
                              "value": {
                                "name": "string",
                                "required": true
                              }
                            },
                            {
                              "key": "offset",
                              "value": {
                                "name": "number",
                                "required": true
                              }
                            },
                            {
                              "key": "limit",
                              "value": {
                                "name": "number",
                                "required": true
                              }
                            },
                            {
                              "key": "search",
                              "value": {
                                "name": "string",
                                "required": false
                              }
                            },
                            {
                              "key": "selectedTab",
                              "value": {
                                "name": "string",
                                "required": false
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "return": {
                    "name": "Promise",
                    "elements": [
                      {
                        "name": "signature",
                        "type": "object",
                        "raw": "{|\n\tvisibleRows: Array<Object>,\n\ttotalRows: number\n|}",
                        "signature": {
                          "properties": [
                            {
                              "key": "visibleRows",
                              "value": {
                                "name": "Array",
                                "elements": [
                                  {
                                    "name": "Object"
                                  }
                                ],
                                "raw": "Array<Object>",
                                "required": true
                              }
                            },
                            {
                              "key": "totalRows",
                              "value": {
                                "name": "number",
                                "required": true
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "raw": "Promise<RecordTableFetchResults>"
                  }
                }
              },
              "description": "called anytime records need to be fetched"
            },
            "columns": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": "table columns to be rendered TODO(TR) import Column interfaces"
            },
            "fetchOnMount": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "should I fetch all my data on mount?"
            },
            "fetchError": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Flag for error on fetching data"
            },
            "handleClickRow": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "passthrough to Table component"
            },
            "onSelection": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "called when search suggestion is selected"
            },
            "noDataIcon": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "No data available"
            },
            "noDataHeadline": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "noDataSubheadline": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "noDataPrimaryAction": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "object",
                "raw": "{\n\ttext: string,\n\tonClick: (e: MouseEvent) => void,\n\ttype: string\n}",
                "signature": {
                  "properties": [
                    {
                      "key": "text",
                      "value": {
                        "name": "string",
                        "required": true
                      }
                    },
                    {
                      "key": "onClick",
                      "value": {
                        "name": "signature",
                        "type": "function",
                        "raw": "(e: MouseEvent) => void",
                        "signature": {
                          "arguments": [
                            {
                              "name": "e",
                              "type": {
                                "name": "MouseEvent"
                              }
                            }
                          ],
                          "return": {
                            "name": "void"
                          }
                        },
                        "required": true
                      }
                    },
                    {
                      "key": "type",
                      "value": {
                        "name": "string",
                        "required": true
                      }
                    }
                  ]
                }
              },
              "description": ""
            },
            "noDataPrimaryActionButtonKind": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "noDataPrimaryActionButtonIcon": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Subheading/Subheading.js",
      "value": [
        {
          "description": "",
          "displayName": "Subheading",
          "methods": [],
          "actualName": "Subheading",
          "props": {
            "element": {
              "defaultValue": {
                "value": "'h2'",
                "computed": false
              },
              "required": false
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Table/Table.js",
      "value": [
        {
          "description": "",
          "displayName": "Table",
          "methods": [
            {
              "name": "handleChange",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ id }: any",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleSelectAll",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleClickRow",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "MouseEvent",
                    "alias": "MouseEvent"
                  }
                },
                {
                  "name": "handleOriginal",
                  "type": null
                }
              ],
              "returns": null
            }
          ],
          "actualName": "Table",
          "props": {
            "data": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": "Table data"
            },
            "totalRows": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": "The total number of rows which this table can access"
            },
            "columns": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": "Columns of the table"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional classname to add to the table. Useful for grid styling",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "isSelectable": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true if the table rows can be selected",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "initialSelectedIds": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "union",
                    "raw": "string | number",
                    "elements": [
                      {
                        "name": "string"
                      },
                      {
                        "name": "number"
                      }
                    ]
                  }
                ],
                "raw": "Array<string | number>"
              },
              "description": "any Id's that are selected by default when the page loads"
            },
            "kind": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "The kind of data this table displays. This will affect the text shown when at least one row is selected."
            },
            "pluralKind": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional text for pluralization when multiple rows are selected"
            },
            "paginationProps": {
              "required": false,
              "flowType": {
                "name": "PaginationProps"
              },
              "description": "Pagination component props",
              "defaultValue": {
                "value": "{}",
                "computed": false
              }
            },
            "bulkActions": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "ButtonProps"
                  }
                ],
                "raw": "Array<ButtonProps>"
              },
              "description": "Enable bulk actions for selectable tables"
            },
            "sortable": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Makes the table sortable"
            },
            "onClickRow": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "(e: MouseEvent, meta: { idx: number, item: Object }) => void",
                "signature": {
                  "arguments": [
                    {
                      "name": "e",
                      "type": {
                        "name": "MouseEvent"
                      }
                    },
                    {
                      "name": "meta",
                      "type": {
                        "name": "signature",
                        "type": "object",
                        "raw": "{ idx: number, item: Object }",
                        "signature": {
                          "properties": [
                            {
                              "key": "idx",
                              "value": {
                                "name": "number",
                                "required": true
                              }
                            },
                            {
                              "key": "item",
                              "value": {
                                "name": "Object",
                                "required": true
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "return": {
                    "name": "void"
                  }
                }
              },
              "description": "Handle clicking on a row"
            },
            "onSelection": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "({ selectedIds: Array<string | number> }) => void",
                "signature": {
                  "arguments": [
                    {
                      "name": "",
                      "type": {
                        "name": "signature",
                        "type": "object",
                        "raw": "{ selectedIds: Array<string | number> }",
                        "signature": {
                          "properties": [
                            {
                              "key": "selectedIds",
                              "value": {
                                "name": "Array",
                                "elements": [
                                  {
                                    "name": "union",
                                    "raw": "string | number",
                                    "elements": [
                                      {
                                        "name": "string"
                                      },
                                      {
                                        "name": "number"
                                      }
                                    ]
                                  }
                                ],
                                "raw": "Array<string | number>",
                                "required": true
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "return": {
                    "name": "void"
                  }
                }
              },
              "description": "Callback when selection changes"
            },
            "noDataIcon": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "No data available",
              "defaultValue": {
                "value": "'empty_box'",
                "computed": false
              }
            },
            "noDataHeadline": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'Nothing to see here'",
                "computed": false
              }
            },
            "noDataSubheadline": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "noDataPrimaryAction": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "object",
                "raw": "{\n\ttext: string,\n\tonClick: (e: MouseEvent) => void,\n\ttype: string\n}",
                "signature": {
                  "properties": [
                    {
                      "key": "text",
                      "value": {
                        "name": "string",
                        "required": true
                      }
                    },
                    {
                      "key": "onClick",
                      "value": {
                        "name": "signature",
                        "type": "function",
                        "raw": "(e: MouseEvent) => void",
                        "signature": {
                          "arguments": [
                            {
                              "name": "e",
                              "type": {
                                "name": "MouseEvent"
                              }
                            }
                          ],
                          "return": {
                            "name": "void"
                          }
                        },
                        "required": true
                      }
                    },
                    {
                      "key": "type",
                      "value": {
                        "name": "string",
                        "required": true
                      }
                    }
                  ]
                }
              },
              "description": "",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "noDataPrimaryActionButtonKind": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'simple'",
                "computed": false
              }
            },
            "noDataPrimaryActionButtonIcon": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "subComponentForRow": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "(row: Object) => any",
                "signature": {
                  "arguments": [
                    {
                      "name": "row",
                      "type": {
                        "name": "Object"
                      }
                    }
                  ],
                  "return": {
                    "name": "any"
                  }
                }
              },
              "description": "Return a nested sub-component to be added as an expansion level for designated row."
            },
            "rowIsDirty": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "(row: Object) => boolean",
                "signature": {
                  "arguments": [
                    {
                      "name": "row",
                      "type": {
                        "name": "Object"
                      }
                    }
                  ],
                  "return": {
                    "name": "boolean"
                  }
                }
              },
              "description": "Called any time row props are updated. Return true if the given row should appear dirty."
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Tabs/Tabs.js",
      "value": [
        {
          "description": "",
          "displayName": "Tabs",
          "methods": [
            {
              "name": "handleWindowResize",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleInitialMeasurement",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleMeasurement",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            }
          ],
          "actualName": "Tabs",
          "props": {
            "tabs": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "TabProps"
                  }
                ],
                "raw": "Array<TabProps>"
              },
              "description": "The tabs for this group"
            },
            "isPadded": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Adds horizontal Padding",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "isTruncatable": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set false to prevent truncation behavior",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional class to add to the tab group",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Text/Text.js",
      "value": [
        {
          "description": "",
          "displayName": "Span",
          "methods": [],
          "actualName": "Span",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Contents of the component."
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Class name for the component"
            },
            "context": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "Context allows basic templatizing of text strings for formatting/rich interaction purposes"
            },
            "element": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "| 'a'\n| 'abbr'\n| 'blockquote'\n| 'br'\n| 'cite'\n| 'code'\n| 'data'\n| 'dd'\n| 'dl'\n| 'dt'\n| 'figcaption'\n| 'figure'\n| 'kbd'\n| 'li'\n| 'mark'\n| 'ol'\n| 'p'\n| 'pre'\n| 'q'\n| 's'\n| 'span'\n| 'sub'\n| 'sup'\n| 'time'\n| 'ul'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'a'"
                  },
                  {
                    "name": "literal",
                    "value": "'abbr'"
                  },
                  {
                    "name": "literal",
                    "value": "'blockquote'"
                  },
                  {
                    "name": "literal",
                    "value": "'br'"
                  },
                  {
                    "name": "literal",
                    "value": "'cite'"
                  },
                  {
                    "name": "literal",
                    "value": "'code'"
                  },
                  {
                    "name": "literal",
                    "value": "'data'"
                  },
                  {
                    "name": "literal",
                    "value": "'dd'"
                  },
                  {
                    "name": "literal",
                    "value": "'dl'"
                  },
                  {
                    "name": "literal",
                    "value": "'dt'"
                  },
                  {
                    "name": "literal",
                    "value": "'figcaption'"
                  },
                  {
                    "name": "literal",
                    "value": "'figure'"
                  },
                  {
                    "name": "literal",
                    "value": "'kbd'"
                  },
                  {
                    "name": "literal",
                    "value": "'li'"
                  },
                  {
                    "name": "literal",
                    "value": "'mark'"
                  },
                  {
                    "name": "literal",
                    "value": "'ol'"
                  },
                  {
                    "name": "literal",
                    "value": "'p'"
                  },
                  {
                    "name": "literal",
                    "value": "'pre'"
                  },
                  {
                    "name": "literal",
                    "value": "'q'"
                  },
                  {
                    "name": "literal",
                    "value": "'s'"
                  },
                  {
                    "name": "literal",
                    "value": "'span'"
                  },
                  {
                    "name": "literal",
                    "value": "'sub'"
                  },
                  {
                    "name": "literal",
                    "value": "'sup'"
                  },
                  {
                    "name": "literal",
                    "value": "'time'"
                  },
                  {
                    "name": "literal",
                    "value": "'ul'"
                  }
                ]
              },
              "description": "The element to render. Defaults to p for Text and span for Span"
            }
          }
        },
        {
          "description": "",
          "displayName": "Text",
          "methods": [],
          "actualName": "Text",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Contents of the component."
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Class name for the component"
            },
            "context": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "Context allows basic templatizing of text strings for formatting/rich interaction purposes"
            },
            "element": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "| 'a'\n| 'abbr'\n| 'blockquote'\n| 'br'\n| 'cite'\n| 'code'\n| 'data'\n| 'dd'\n| 'dl'\n| 'dt'\n| 'figcaption'\n| 'figure'\n| 'kbd'\n| 'li'\n| 'mark'\n| 'ol'\n| 'p'\n| 'pre'\n| 'q'\n| 's'\n| 'span'\n| 'sub'\n| 'sup'\n| 'time'\n| 'ul'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'a'"
                  },
                  {
                    "name": "literal",
                    "value": "'abbr'"
                  },
                  {
                    "name": "literal",
                    "value": "'blockquote'"
                  },
                  {
                    "name": "literal",
                    "value": "'br'"
                  },
                  {
                    "name": "literal",
                    "value": "'cite'"
                  },
                  {
                    "name": "literal",
                    "value": "'code'"
                  },
                  {
                    "name": "literal",
                    "value": "'data'"
                  },
                  {
                    "name": "literal",
                    "value": "'dd'"
                  },
                  {
                    "name": "literal",
                    "value": "'dl'"
                  },
                  {
                    "name": "literal",
                    "value": "'dt'"
                  },
                  {
                    "name": "literal",
                    "value": "'figcaption'"
                  },
                  {
                    "name": "literal",
                    "value": "'figure'"
                  },
                  {
                    "name": "literal",
                    "value": "'kbd'"
                  },
                  {
                    "name": "literal",
                    "value": "'li'"
                  },
                  {
                    "name": "literal",
                    "value": "'mark'"
                  },
                  {
                    "name": "literal",
                    "value": "'ol'"
                  },
                  {
                    "name": "literal",
                    "value": "'p'"
                  },
                  {
                    "name": "literal",
                    "value": "'pre'"
                  },
                  {
                    "name": "literal",
                    "value": "'q'"
                  },
                  {
                    "name": "literal",
                    "value": "'s'"
                  },
                  {
                    "name": "literal",
                    "value": "'span'"
                  },
                  {
                    "name": "literal",
                    "value": "'sub'"
                  },
                  {
                    "name": "literal",
                    "value": "'sup'"
                  },
                  {
                    "name": "literal",
                    "value": "'time'"
                  },
                  {
                    "name": "literal",
                    "value": "'ul'"
                  }
                ]
              },
              "description": "The element to render. Defaults to p for Text and span for Span"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/TextContainer/TextContainer.js",
      "value": [
        {
          "description": "",
          "displayName": "TextContainer",
          "methods": [],
          "actualName": "TextContainer",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Contents of the component."
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Class name for the component"
            },
            "spacing": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'tight' | 'loose'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'tight'"
                  },
                  {
                    "name": "literal",
                    "value": "'loose'"
                  }
                ]
              },
              "description": "Vertical spacing of the child components"
            },
            "isCentered": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Whether the children of the text container are centered",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/TextStyle/TextStyle.js",
      "value": [
        {
          "description": "",
          "displayName": "TextStyle",
          "methods": [],
          "actualName": "TextStyle",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Contents of the component."
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Class name for the component"
            },
            "type": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'strong' | 'emphasis' | 'subdued'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'strong'"
                  },
                  {
                    "name": "literal",
                    "value": "'emphasis'"
                  },
                  {
                    "name": "literal",
                    "value": "'subdued'"
                  }
                ]
              },
              "description": "Style type"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Toast/Toast.js",
      "value": [
        {
          "description": "",
          "displayName": "Toast",
          "methods": [],
          "actualName": "Toast",
          "props": {
            "id": {
              "required": true,
              "flowType": {
                "name": "union",
                "raw": "string | number",
                "elements": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "number"
                  }
                ]
              },
              "description": "Unique ID for the toast"
            },
            "headline": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Headline text"
            },
            "text": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Text after the headline"
            },
            "onRemove": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Handle toast removal"
            },
            "kind": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'neutral' | 'positive' | 'negative'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'neutral'"
                  },
                  {
                    "name": "literal",
                    "value": "'positive'"
                  },
                  {
                    "name": "literal",
                    "value": "'negative'"
                  }
                ]
              },
              "description": "Sets the variation of toast",
              "defaultValue": {
                "value": "'neutral'",
                "computed": false
              }
            },
            "followupAction": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Handle a followup action",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "followupText": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Text for the followup action",
              "defaultValue": {
                "value": "'Undo'",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/View/View.js",
      "value": [
        {
          "description": "",
          "displayName": "View",
          "methods": [],
          "actualName": "View",
          "props": {
            "sidebarItems": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": ""
            },
            "sidebarBackLink": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "user": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "organization": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "location": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": ""
            },
            "toggleSidebarVisibility": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "toggleSidebarExpanded": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "forceCloseSidebar": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "isSidebarVisible": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": ""
            },
            "isSidebarExpanded": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": ""
            },
            "isSidebarMobileExpanded": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": ""
            },
            "onClickSearch": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "searchPlaceholder": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "userMenuItems": {
              "required": true,
              "flowType": {
                "name": "ReactNode"
              },
              "description": "Menu children (<ListItem> or <li>)"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/_utilities/Anchor.js",
      "value": [
        {
          "description": "",
          "displayName": "BasicAnchor",
          "methods": [],
          "actualName": "BasicAnchor"
        }
      ]
    },
    {
      "key": "src/components/Card/components/CardBody.js",
      "value": [
        {
          "description": "",
          "displayName": "CardBody",
          "methods": [],
          "actualName": "CardBody",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Children to show in the Card"
            },
            "isSectioned": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Whether to wrap children in CardSection",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "areSectionSeparatorsVisible": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to display line separators between CardSection components",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "hasTopPadding": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Does card include top padding",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "hasBottomPadding": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Does card include bottom padding",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Card/components/CardBuilder.js",
      "value": [
        {
          "description": "",
          "displayName": "CardBuilder",
          "methods": [],
          "actualName": "CardBuilder",
          "props": {
            "header": {
              "required": false,
              "flowType": {
                "name": "CardHeaderProps"
              },
              "description": "Card Header props"
            },
            "headerImage": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "optionally pass props to an image tag to be rendered in the header"
            },
            "onboarding": {
              "required": false,
              "flowType": {
                "name": "OnboardingProps"
              },
              "description": "all onboarding props"
            },
            "body": {
              "required": false,
              "flowType": {
                "name": "CardBodyProps"
              },
              "description": "Card Body props"
            },
            "footer": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "object",
                "raw": "{\n    /** Render buttons in the Card Footer */\n    actions: Array<ButtonProps>\n}",
                "signature": {
                  "properties": [
                    {
                      "key": "actions",
                      "value": {
                        "name": "Array",
                        "elements": [
                          {
                            "name": "ButtonProps"
                          }
                        ],
                        "raw": "Array<ButtonProps>",
                        "required": true
                      }
                    }
                  ]
                }
              },
              "description": "Card Footer props",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Card/components/CardFooter.js",
      "value": [
        {
          "description": "",
          "displayName": "CardFooter",
          "methods": [],
          "actualName": "CardFooter",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Children to show in the Card Footer"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Card/components/CardHeader.js",
      "value": [
        {
          "description": "",
          "displayName": "CardHeader",
          "methods": [],
          "actualName": "CardHeader",
          "props": {
            "title": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Title for the card"
            },
            "labelText": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional label to show above title"
            },
            "labelIcon": {
              "required": false,
              "flowType": {
                "name": "any"
              },
              "description": "Optional icon to show above the title and before the label"
            },
            "actions": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "ButtonProps"
                  }
                ],
                "raw": "Array<ButtonProps>"
              },
              "description": "Render buttons in the Card Header"
            },
            "contextMenu": {
              "required": false,
              "flowType": {
                "name": "ContextMenuProps"
              },
              "description": "Renders a Context Menu in the Card Header"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Card/components/CardSection.js",
      "value": [
        {
          "description": "",
          "displayName": "CardSection",
          "methods": [],
          "actualName": "CardSection",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Children to show in the Card"
            },
            "isFullBleed": {
              "required": true,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set to true to remove horizontal padding"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Card/components/OnboardingCard.js",
      "value": [
        {
          "description": "",
          "displayName": "OnboardingCard",
          "methods": [
            {
              "name": "handleClick",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "idx",
                  "type": {
                    "name": "number"
                  }
                }
              ],
              "returns": null
            }
          ],
          "actualName": "OnboardingCard",
          "props": {
            "title": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Title of the entire card"
            },
            "steps": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n\t/** Unique identifier */\n\tid: string,\n\n\t/** Title that shows in the tab */\n\ttabTitle: string,\n\n\t/** Title that shows in the panel */\n\tpanelTitle: string,\n\n\t/** Copy describing the step in the card's body */\n\tpanelCopy: string,\n\n\t/** Primary CTA of this step */\n\tpanelCTA: ButtonProps\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "id",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "tabTitle",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "panelTitle",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "panelCopy",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "panelCTA",
                          "value": {
                            "name": "ButtonProps",
                            "required": true
                          }
                        }
                      ]
                    }
                  }
                ],
                "raw": "Array<Step>"
              },
              "description": "Steps for onboarding"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional class to add"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Card/components/Scores.js",
      "value": [
        {
          "description": "",
          "displayName": "Scores",
          "methods": [],
          "actualName": "Scores",
          "props": {
            "scores": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n\t/** Unique id for looping. */\n\tid: string,\n\n\t/** Description of the corresponding value. */\n\tlabel: string,\n\n\t/** The value to display. */\n\tvalue: string\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "id",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "label",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "value",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        }
                      ]
                    }
                  }
                ],
                "raw": "Array<PanelProps>"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Message/components/MessageBuilder.js",
      "value": [
        {
          "description": "",
          "displayName": "MessageBuilder",
          "methods": [],
          "actualName": "MessageBuilder",
          "props": {
            "from": {
              "required": true,
              "flowType": {
                "name": "signature",
                "type": "object",
                "raw": "{\n\t/** Unique id of the sender */\n\tid: string,\n\n\t/** Image associated with message sender */\n\timage?: string,\n\n\t/** Name associated with message sender */\n\tname?: string,\n\n\t/** Alt description with message sender */\n\talt?: string\n}",
                "signature": {
                  "properties": [
                    {
                      "key": "id",
                      "value": {
                        "name": "string",
                        "required": true
                      }
                    },
                    {
                      "key": "image",
                      "value": {
                        "name": "string",
                        "required": false
                      }
                    },
                    {
                      "key": "name",
                      "value": {
                        "name": "string",
                        "required": false
                      }
                    },
                    {
                      "key": "alt",
                      "value": {
                        "name": "string",
                        "required": false
                      }
                    }
                  ]
                }
              },
              "description": "Information about the sender"
            },
            "dateSent": {
              "required": false,
              "flowType": {
                "name": "Date"
              },
              "description": "Message body"
            },
            "message": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "Message body"
            },
            "detail": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Detail string gives additional context about this message"
            },
            "primaryAction": {
              "required": false,
              "flowType": {
                "name": "ButtonProps"
              },
              "description": "An action related to this message"
            },
            "replies": {
              "required": false,
              "flowType": {
                "name": "Array"
              },
              "description": "Contextual information and additional actions associated to the message"
            },
            "attachments": {
              "required": false,
              "flowType": {
                "name": "Array"
              },
              "description": "Attachment content associated to the message"
            },
            "isFromSprucebot": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true if the message is from Sprucebot"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/DragGrid/DragGrid.js",
      "value": [
        {
          "description": "",
          "displayName": "DragGrid",
          "methods": [
            {
              "name": "getEventNode",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "event",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "getBlockNode",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "event",
                  "type": null
                },
                {
                  "name": "blockIdx",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "eventById",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "id",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "getScrollLeft",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getScrollTop",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "setScrollTop",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "top",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "setScrollLeft",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "left",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "getWidth",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getHeight",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getScrollWidth",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getScrollHeight",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getLeft",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getTop",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "isScrolledAllTheWayRight",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "isScrolledAllTheWayLeft",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "animateHorizontalTo",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "left",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleScroll",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "globalToLocal",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ clientX, clientY }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleMouseDownOnView",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleMouseDragOfView",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleTouchStartOnView",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleTouchEndOnView",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "getEventsAtLocation",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ x, y }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleMouseDownOnEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{\n    e,\n    event,\n    block,\n    blockIdx,\n    stopEvent = true,\n    setListeners = true\n}",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleTouchStartOnEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ e, event, block, blockIdx }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleTouchStartOnDragEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ e, event, block, blockIdx }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleTouchEndOnEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleLongPressOnEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ e, event, block, blockIdx }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleLongPressOnView",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ e, clientX, clientY }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "beginScrollHorizontally",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "speed",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "stopScrollingHorizontally",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "beginScrollingVertically",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "speed",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "stopScrollingVertically",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleTouchDragOfEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleDragOfEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                },
                {
                  "name": "autoScroll",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleMouseUpFromView",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleCancelMouseUpFromEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleMouseUpFromEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                },
                {
                  "name": "{ overrideValid }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "cancelDrag",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleDropEvent",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "{ overrideValid }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "isMouseDownOnEvent",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "isDraggingEvent",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "isDraggingView",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getDragNode",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getDragBlockNode",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "dropNewEventAndDrag",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "{ event, e, left, top }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "startDragOfEvent",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "{\n    e,\n    event,\n    block,\n    blockIdx = 0,\n    dragEvent: overrideDragEvent,\n    clientX: overrideClientX,\n    clientY: overrideClientY,\n    overrideTop,\n    overrideLeft\n}",
                  "type": null
                }
              ],
              "returns": null
            }
          ],
          "actualName": "DragGrid",
          "props": {
            "snapEventToNearestValidX": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "snapEventToNearestValidY": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onMouseDownOnEvent": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onMouseDownOnView": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onDoubleClick": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onClick": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "dragThreshold": {
              "required": false,
              "flowType": {
                "name": "Number"
              },
              "description": "",
              "defaultValue": {
                "value": "10",
                "computed": false
              }
            },
            "onDropEvent": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onDragEvent": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "scrollDuringDragMargin": {
              "required": false,
              "flowType": {
                "name": "Number"
              },
              "description": "",
              "defaultValue": {
                "value": "50",
                "computed": false
              }
            },
            "dragScrollSpeed": {
              "required": false,
              "flowType": {
                "name": "Number"
              },
              "description": "",
              "defaultValue": {
                "value": "5",
                "computed": false
              }
            },
            "events": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": ""
            },
            "timezone": {
              "required": true,
              "flowType": {
                "name": "String"
              },
              "description": ""
            },
            "getDragNode": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "highlightedEvent": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "onUnHighlightEvent": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onSelectEvent": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "selectedEvent": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "longPressDelay": {
              "required": true,
              "flowType": {
                "name": "Number"
              },
              "description": ""
            },
            "onHighlightEvent": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "sizeEvent": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onDeselectEvent": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onLongPressView": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "doubleClickTime": {
              "required": true,
              "flowType": {
                "name": "Number"
              },
              "description": ""
            },
            "timeFormat": {
              "required": true,
              "flowType": {
                "name": "String"
              },
              "description": ""
            },
            "enableAutoScrollX": {
              "required": false,
              "flowType": {
                "name": "Boolean"
              },
              "description": "",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "enableAutoScrollY": {
              "required": false,
              "flowType": {
                "name": "Boolean"
              },
              "description": "",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/Event/Event.js",
      "value": [
        {
          "description": "",
          "displayName": "Event",
          "methods": [],
          "actualName": "Event",
          "props": {
            "event": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "timezone": {
              "required": true,
              "flowType": {
                "name": "String"
              },
              "description": ""
            },
            "timeFormat": {
              "required": true,
              "flowType": {
                "name": "String"
              },
              "description": ""
            },
            "kind": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "| 'default'\n| 'tentative'\n| 'active'\n| 'unavailable'\n| 'blocked'\n| 'past'\n| 'warn'\n| 'critical'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'default'"
                  },
                  {
                    "name": "literal",
                    "value": "'tentative'"
                  },
                  {
                    "name": "literal",
                    "value": "'active'"
                  },
                  {
                    "name": "literal",
                    "value": "'unavailable'"
                  },
                  {
                    "name": "literal",
                    "value": "'blocked'"
                  },
                  {
                    "name": "literal",
                    "value": "'past'"
                  },
                  {
                    "name": "literal",
                    "value": "'warn'"
                  },
                  {
                    "name": "literal",
                    "value": "'critical'"
                  }
                ]
              },
              "description": "",
              "defaultValue": {
                "value": "'default'",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/EventBlock/EventBlock.js",
      "value": [
        {
          "description": "",
          "displayName": "EventBlock",
          "methods": [],
          "actualName": "EventBlock",
          "props": {
            "block": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "text": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "children": {
              "required": false,
              "flowType": {
                "name": "Node"
              },
              "description": ""
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "startAt": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "resizable": {
              "required": true,
              "flowType": {
                "name": "Boolean"
              },
              "description": ""
            },
            "timeFormat": {
              "required": true,
              "flowType": {
                "name": "String"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/EventDetails/EventDetails.js",
      "value": [
        {
          "description": "",
          "displayName": "EventDetails",
          "methods": [],
          "actualName": "EventDetails",
          "props": {
            "header": {
              "required": true,
              "flowType": {
                "name": "HeaderProps"
              },
              "description": ""
            },
            "kind": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "| 'default'\n| 'tentative'\n| 'active'\n| 'unavailable'\n| 'blocked'\n| 'past'\n| 'warn'\n| 'critical'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'default'"
                  },
                  {
                    "name": "literal",
                    "value": "'tentative'"
                  },
                  {
                    "name": "literal",
                    "value": "'active'"
                  },
                  {
                    "name": "literal",
                    "value": "'unavailable'"
                  },
                  {
                    "name": "literal",
                    "value": "'blocked'"
                  },
                  {
                    "name": "literal",
                    "value": "'past'"
                  },
                  {
                    "name": "literal",
                    "value": "'warn'"
                  },
                  {
                    "name": "literal",
                    "value": "'critical'"
                  }
                ]
              },
              "description": "",
              "defaultValue": {
                "value": "'default'",
                "computed": false
              }
            },
            "list": {
              "required": true,
              "flowType": {
                "name": "ListProps"
              },
              "description": ""
            },
            "footer": {
              "required": true,
              "flowType": {
                "name": "FooterProps"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/Header/Header.js",
      "value": [
        {
          "description": "",
          "displayName": "Header",
          "methods": [
            {
              "name": "handleShowSubMenu",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleHideSubMenu",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            }
          ],
          "actualName": "Header",
          "props": {
            "selectedView": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "onChangeView": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onBackDate": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onNextDate": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "selectedDate": {
              "required": true,
              "flowType": {
                "name": "moment"
              },
              "description": ""
            },
            "dateFormat": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "mobileDateFormat": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "fullScreenNode": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "HTMLElement | HTMLBodyElement | null",
                "elements": [
                  {
                    "name": "HTMLElement"
                  },
                  {
                    "name": "HTMLBodyElement"
                  },
                  {
                    "name": "null"
                  }
                ]
              },
              "description": ""
            },
            "totalHorizontalPages": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": ""
            },
            "currentHorizontalPage": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": ""
            },
            "onHorizontalPageNext": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onHorizontalPageBack": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "userModeOptions": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": ""
            },
            "onChangeUserMode": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "userMode": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "onDateToToday": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onSelectDate": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onDoubleClick": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onClickMore": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "cellDowFormat": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'ddd'",
                "computed": false
              }
            },
            "cellDayFormat": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "",
              "defaultValue": {
                "value": "'D'",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/TeammateHeader/TeammateHeader.js",
      "value": [
        {
          "description": "",
          "displayName": "TeammateHeader",
          "methods": [
            {
              "name": "handleClick",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "Event",
                    "alias": "Event"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "setScrollLeft",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "left",
                  "type": {
                    "name": "number"
                  }
                }
              ],
              "returns": null
            }
          ],
          "actualName": "TeammateHeader",
          "props": {
            "users": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": ""
            },
            "doubleClickTime": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": ""
            },
            "onScroll": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onDoubleClick": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "(params: DoubleClickParams) => void",
                "signature": {
                  "arguments": [
                    {
                      "name": "params",
                      "type": {
                        "name": "signature",
                        "type": "object",
                        "raw": "{\n\tclientX: number,\n\tclientY: number,\n\te: Event\n}",
                        "signature": {
                          "properties": [
                            {
                              "key": "clientX",
                              "value": {
                                "name": "number",
                                "required": true
                              }
                            },
                            {
                              "key": "clientY",
                              "value": {
                                "name": "number",
                                "required": true
                              }
                            },
                            {
                              "key": "e",
                              "value": {
                                "name": "Event",
                                "required": true
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "return": {
                    "name": "void"
                  }
                }
              },
              "description": ""
            },
            "onClick": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "(e: Event) => void",
                "signature": {
                  "arguments": [
                    {
                      "name": "e",
                      "type": {
                        "name": "Event"
                      }
                    }
                  ],
                  "return": {
                    "name": "void"
                  }
                }
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/HeaderControls/HeaderControls.js",
      "value": [
        {
          "description": "",
          "displayName": "HeaderControls",
          "methods": [
            {
              "name": "toggleDatePicker",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "onSelectDate",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "date",
                  "type": {
                    "name": "moment",
                    "alias": "moment"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "toggleFullScreen",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "onSetDateToToday",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            }
          ],
          "actualName": "HeaderControls",
          "props": {
            "status": {
              "required": true,
              "flowType": {
                "name": "union",
                "raw": "'event-busy' | 'event-unconfirmed' | 'break' | 'block'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'event-busy'"
                  },
                  {
                    "name": "literal",
                    "value": "'event-unconfirmed'"
                  },
                  {
                    "name": "literal",
                    "value": "'break'"
                  },
                  {
                    "name": "literal",
                    "value": "'block'"
                  }
                ]
              },
              "description": ""
            },
            "onBackDate": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onNextDate": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onChangeView": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "fullScreenNode": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "userModeOptions": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": ""
            },
            "onChangeUserMode": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "userMode": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "onSelectDate": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onDateToToday": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "selectedDate": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "isDatePickerShown": {
              "required": true,
              "flowType": {
                "name": "boolean"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/TimeGutter/TimeGutter.js",
      "value": [
        {
          "description": "",
          "displayName": "TimeGutter",
          "methods": [
            {
              "name": "setScrollTop",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "top",
                  "type": null
                }
              ],
              "returns": null
            }
          ],
          "actualName": "TimeGutter",
          "props": {
            "hours": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": ""
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "calendarBodyHeight": {
              "required": true,
              "flowType": {
                "name": "Number"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/TimeLine/TimeLine.js",
      "value": [
        {
          "description": "",
          "displayName": "TimeLine",
          "methods": [],
          "actualName": "TimeLine"
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/Views/Day.js",
      "value": [
        {
          "description": "",
          "displayName": "Day",
          "methods": [
            {
              "name": "componentDidMount",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "componentWillUnmount",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleResize",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleScroll",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "getTimeRangeDetails",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "min",
                  "type": null
                },
                {
                  "name": "max",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "updateHorizontalPagerDetails",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleHorizontalPageNext",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleHorizontalPageBack",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleTeammateScroll",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "snapEventToNearestValidX",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ mouseX }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "snapEventToNearestValidY",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{\n    dragNodeTop,\n    dragNodeHeight = 0,\n    round = Math.round\n}",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "yToTime",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "y",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "heightToSeconds",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "height",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "secondsToHeight",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "seconds",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "timeToY",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "date",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "xToUser",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "x",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "getDragNode",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ blockIdx, dragEventNode, dragBlockNode }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleMouseDownOnView",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "Event",
                    "alias": "Event"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "getMinBlockResizeHeight",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "event",
                  "type": null
                },
                {
                  "name": "blockIdx",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleMouseDownOnEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ e, event, block, blockIdx }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleDropEvent",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "{ event, dragEvent, newX, newY }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleDragOfEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "event",
                  "type": null
                },
                {
                  "name": "dragDetails",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "deselectAllTextSelections",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleSelectEvent",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "{ event }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleDeselectEvent",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [],
              "returns": null
            },
            {
              "name": "handleHighlightEvent",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "{ event }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleUnHighlightEvent",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleCloseEventDetails",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "placeAndSize",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "dayColWidth",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "dayColHeight",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "slotHeight",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "isToday",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "date",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "getColumnMap",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "placeEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "event",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "sizeEvent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "event",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "sizeTimeLine",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "placeTimeLine",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleMouseMove",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "Event",
                    "alias": "Event"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "hideMouseTimeIndicator",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "updateTimeIndicator",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleClick",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ e }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleDoubleClick",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ e }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleLongPressView",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "{ e }",
                  "type": null
                }
              ],
              "returns": null
            }
          ],
          "actualName": "Day",
          "props": {
            "showRightProps": {
              "required": true,
              "flowType": {
                "name": "boolean"
              },
              "description": ""
            },
            "users": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": ""
            },
            "timezone": {
              "required": true,
              "flowType": {
                "name": "String"
              },
              "description": ""
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "String"
              },
              "description": ""
            },
            "minTime": {
              "required": true,
              "flowType": {
                "name": "String"
              },
              "description": ""
            },
            "maxTime": {
              "required": true,
              "flowType": {
                "name": "String"
              },
              "description": ""
            },
            "startTime": {
              "required": true,
              "flowType": {
                "name": "String"
              },
              "description": ""
            },
            "endTime": {
              "required": true,
              "flowType": {
                "name": "String"
              },
              "description": ""
            },
            "calendarBodyHeight": {
              "required": true,
              "flowType": {
                "name": "Number"
              },
              "description": ""
            },
            "onScroll": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "slotsPerHour": {
              "required": true,
              "flowType": {
                "name": "Number"
              },
              "description": ""
            },
            "onUpdateHorizontalPagerDetails": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "events": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": ""
            },
            "startDate": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "dragThreshold": {
              "required": false,
              "flowType": {
                "name": "Number"
              },
              "description": "",
              "defaultValue": {
                "value": "10",
                "computed": false
              }
            },
            "onDropEvent": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onDragEvent": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "scrollDuringDragMargin": {
              "required": false,
              "flowType": {
                "name": "Number"
              },
              "description": "",
              "defaultValue": {
                "value": "50",
                "computed": false
              }
            },
            "dragScrollSpeed": {
              "required": false,
              "flowType": {
                "name": "Number"
              },
              "description": "",
              "defaultValue": {
                "value": "5",
                "computed": false
              }
            },
            "eventRightMargin": {
              "required": false,
              "flowType": {
                "name": "Number"
              },
              "description": "",
              "defaultValue": {
                "value": "10",
                "computed": false
              }
            },
            "longPressDelay": {
              "required": true,
              "flowType": {
                "name": "Number"
              },
              "description": ""
            },
            "allowResizeToZeroDurationBlocks": {
              "required": false,
              "flowType": {
                "name": "Boolean"
              },
              "description": "",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "allowResizeFirstBlockToZeroDuration": {
              "required": false,
              "flowType": {
                "name": "Boolean"
              },
              "description": "",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "getStartTimeForUser": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "getEndTimeForUser": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "doubleClickTime": {
              "required": true,
              "flowType": {
                "name": "Number"
              },
              "description": ""
            },
            "onDoubleClick": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "newEventDefaultDurationSec": {
              "required": false,
              "flowType": {
                "name": "Number"
              },
              "description": "",
              "defaultValue": {
                "value": "900 * 4",
                "computed": false
              }
            },
            "doubleClickToCreate": {
              "required": true,
              "flowType": {
                "name": "Boolean"
              },
              "description": ""
            },
            "eventTimeFormat": {
              "required": true,
              "flowType": {
                "name": "String"
              },
              "description": ""
            },
            "timeGutterFormat": {
              "required": false,
              "flowType": {
                "name": "String"
              },
              "description": "",
              "defaultValue": {
                "value": "'ha'",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/Views/DayCol.js",
      "value": [
        {
          "description": "",
          "displayName": "DayCol",
          "methods": [
            {
              "name": "handleHover",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            }
          ],
          "actualName": "DayCol",
          "props": {
            "user": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "minTime": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "maxTime": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "startTime": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "endTime": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "hours": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": ""
            },
            "slotsPerHour": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": ""
            },
            "timezone": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "date": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/Views/Month.js",
      "value": [
        {
          "description": "",
          "displayName": "Month",
          "methods": [],
          "actualName": "Month"
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/Views/Week.js",
      "value": [
        {
          "description": "",
          "displayName": "Week",
          "methods": [],
          "actualName": "Week"
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/Views/WeekRow.js",
      "value": [
        {
          "description": "",
          "displayName": "WeekRow",
          "methods": [],
          "actualName": "WeekRow"
        }
      ]
    },
    {
      "key": "src/components/Core/components/FeedBuilder/FeedBuilder.js",
      "value": [
        {
          "description": "",
          "displayName": "FeedBuilder",
          "methods": [
            {
              "name": "onResize",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "isRowLoaded",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ index }",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "loadMoreRows",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "renderRow",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ index, key, parent, style, isScrolling }",
                  "type": null
                }
              ],
              "returns": null
            }
          ],
          "actualName": "FeedBuilder",
          "props": {
            "messages": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n\t/** Unique id for the message */\n\tid: string,\n\t...MessageBuilderProps\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "id",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        }
                      ]
                    }
                  }
                ],
                "raw": "Array<MessageProps>"
              },
              "description": "Messages for the feed",
              "defaultValue": {
                "value": "[]",
                "computed": false
              }
            },
            "emptyText": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Text for the empty state of this feed",
              "defaultValue": {
                "value": "'No messages'",
                "computed": false
              }
            },
            "onRowsRequested": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Callback to load rows"
            },
            "pageSize": {
              "required": false,
              "flowType": {
                "name": "number"
              },
              "description": "Number of messages to load at a time",
              "defaultValue": {
                "value": "50",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Core/components/FooterPrimary/FooterPrimary.js",
      "value": [
        {
          "description": "",
          "displayName": "FooterPrimary",
          "methods": [],
          "actualName": "FooterPrimary"
        }
      ]
    },
    {
      "key": "src/components/Core/components/HeaderPrimary/HeaderPrimary.js",
      "value": [
        {
          "description": "",
          "displayName": "HeaderPrimary",
          "methods": [
            {
              "name": "hideUserMenu",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "Event",
                    "alias": "Event"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "hideLocationMenu",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "Event",
                    "alias": "Event"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleSearchClick",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "toggleUserMenuVisibility",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "toggleLocationMenuVisibility",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "manageListeners",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "renderHeader",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "organization",
                  "type": {
                    "name": "Object",
                    "alias": "Object"
                  }
                },
                {
                  "name": "location",
                  "type": {
                    "name": "Object",
                    "alias": "Object"
                  }
                }
              ],
              "returns": null
            }
          ],
          "actualName": "HeaderPrimary",
          "props": {
            "user": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "The logged-in user"
            },
            "organization": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "The current organization"
            },
            "location": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "The current location"
            },
            "toggleSidebarVisibility": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Handler to set sidebar visibility to true or false"
            },
            "isSidebarVisible": {
              "required": true,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to show the sidebar (small screens only)"
            },
            "enableHamburgerMenu": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Whether or not we will need to handle hamburger functionality",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "searchPlaceholder": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Placeholder text for the search field",
              "defaultValue": {
                "value": "'Search‚Ä¶'",
                "computed": false
              }
            },
            "onClickSearch": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Handle search click"
            },
            "isLocationManagmentButtonVisible": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to show location management shortcut",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isSkillManagementButtonVisible": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to show skill management shortcut",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "skillsHref": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Destination for the skills link",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "locationManagementHref": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Destination for the location management link",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "userMenuItems": {
              "required": true,
              "flowType": {
                "name": "ReactNode"
              },
              "description": "Menu children (<ListItem> or <li>)"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Core/components/ProfileSummary/ProfileSummary.js",
      "value": [
        {
          "description": "",
          "displayName": "ProfileSummary",
          "methods": [],
          "actualName": "ProfileSummary",
          "props": {
            "image": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "User profile image"
            },
            "name": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Use name"
            },
            "onButtonClick": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Function for the button"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Core/components/SaveBar/SaveBar.js",
      "value": [
        {
          "description": "",
          "displayName": "SaveBar",
          "methods": [],
          "actualName": "SaveBar",
          "props": {
            "location": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "The current location"
            },
            "message": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "The message to display in the Save Bar",
              "defaultValue": {
                "value": "'Unsaved changes'",
                "computed": false
              }
            },
            "isVisible": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set to true to show the save bar",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isDiscardDisabled": {
              "required": false,
              "flowType": {
                "name": "Boolean"
              },
              "description": "Set to true to disable the discard button",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isSaveDisabled": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set to true to disable the save button",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isDiscarding": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set to true while the discard action is being executed",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isSaving": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set to true while the save action is being executed",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "onDiscard": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "The function to execute when user selects discard"
            },
            "onSave": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "The function to execute when user selects save"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Core/components/Sidebar/Sidebar.js",
      "value": [
        {
          "description": "",
          "displayName": "Sidebar",
          "methods": [],
          "actualName": "Sidebar",
          "props": {
            "mobileHeader": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "object",
                "raw": "{\n\ttitle: string,\n\taction: ButtonProps\n}",
                "signature": {
                  "properties": [
                    {
                      "key": "title",
                      "value": {
                        "name": "string",
                        "required": true
                      }
                    },
                    {
                      "key": "action",
                      "value": {
                        "name": "ButtonProps",
                        "required": true
                      }
                    }
                  ]
                }
              },
              "description": "Optional header that will only appear on mobile",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "items": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "ItemProps"
                  }
                ],
                "raw": "Array<ItemProps>"
              },
              "description": "Items to display in the sidebar",
              "defaultValue": {
                "value": "[]",
                "computed": false
              }
            },
            "backLink": {
              "required": false,
              "flowType": {
                "name": "ItemProps"
              },
              "description": "Back link item to handle navigation back to previous location"
            },
            "children": {
              "required": false,
              "flowType": {
                "name": "Node"
              },
              "description": "Children to add to the sidebar",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "footer": {
              "required": false,
              "flowType": {
                "name": "Node"
              },
              "description": "Include a footer in the sidebar",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "side": {
              "required": true,
              "flowType": {
                "name": "union",
                "raw": "'left' | 'right'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'left'"
                  },
                  {
                    "name": "literal",
                    "value": "'right'"
                  }
                ]
              },
              "description": "Set which side the sidebar is on. Must be either 'left' or 'right"
            },
            "isLarge": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the sidebar larger. Defaults to false.",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isCollapsible": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Enables the user to collapse the sidebar on desktop. Defaults to true.",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "isExpanded": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to expand the sidebar (large screens only)",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "isMobileExpanded": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to expand the sidebar on small screens",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "forceCloseSidebar": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Handler to force the sidebar to collapse"
            },
            "toggleExpanded": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Handler to toggle the visibility of the sidebar"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/Autosuggest/Autosuggest.js",
      "value": [
        {
          "description": "",
          "displayName": "Autosuggest",
          "methods": [
            {
              "name": "componentDidMount",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "componentWillUnmount",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "getContainerPlacement",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleWindowResize",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "onChange",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "event",
                  "type": {
                    "name": "any"
                  }
                },
                {
                  "name": "{ newValue }: any",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "onBlur",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "onSuggestionsFetchRequested",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "{ value }: any",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "onSuggestionsClearRequested",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "scrollParentIfNeeded",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "findOverflowParent",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "node",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleClearInput",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            }
          ],
          "actualName": "Autosuggest",
          "props": {
            "id": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Unique identifier"
            },
            "getSuggestions": {
              "required": true,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "(value: string) => Promise<Array<Object>> | null",
                "signature": {
                  "arguments": [
                    {
                      "name": "value",
                      "type": {
                        "name": "string"
                      }
                    }
                  ],
                  "return": {
                    "name": "union",
                    "raw": "Promise<Array<Object>> | null",
                    "elements": [
                      {
                        "name": "Promise",
                        "elements": [
                          {
                            "name": "Array",
                            "elements": [
                              {
                                "name": "Object"
                              }
                            ],
                            "raw": "Array<Object>"
                          }
                        ],
                        "raw": "Promise<Array<Object>>"
                      },
                      {
                        "name": "null"
                      }
                    ]
                  }
                }
              },
              "description": "Teach Autosuggest how to calculate suggestions for any given input value."
            },
            "getSuggestionValue": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Implement it to teach Autosuggest what should be the input value when suggestion is clicked."
            },
            "renderSuggestion": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Defines how suggestions will be rendered"
            },
            "onSuggestionSelected": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Will be called every time suggestion is selected via mouse or keyboard."
            },
            "defaultSuggestions": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "any"
                  }
                ],
                "raw": "Array<any>"
              },
              "description": "Supply default suggestions that can be shown without input",
              "defaultValue": {
                "value": "[]",
                "computed": false
              }
            },
            "placeholder": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Placeholder for the input"
            },
            "defaultValue": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "optionally pass a default value for this input"
            },
            "label": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "optional label"
            },
            "postLabel": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "string | Node",
                "elements": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "Node"
                  }
                ]
              },
              "description": "Text after label"
            },
            "error": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Error text"
            },
            "helper": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "string | Node",
                "elements": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "Node"
                  }
                ]
              },
              "description": "Helper text"
            },
            "isSmall": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the input less tall"
            },
            "wrapperClassName": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Adds a class to the Autosuggest's wrapper"
            },
            "inputProps": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "passed through to react autosuggest"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "optional class name for wrapper"
            },
            "disabled": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "disable this input"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/Checkbox/Checkbox.js",
      "value": [
        {
          "description": "",
          "displayName": "Checkbox",
          "methods": [
            {
              "name": "handleChange",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            }
          ],
          "actualName": "Checkbox",
          "props": {
            "id": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Unique identifier"
            },
            "label": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Input label and text after checkbox icon"
            },
            "postText": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Optional text to show below the label"
            },
            "className": {
              "required": true,
              "flowType": {
                "name": "string",
                "nullable": true
              },
              "description": "Class for the checkbox wrapper"
            },
            "isIndeterminate": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true if the checkbox is indeterminate",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "onChange": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Optional onChange callback"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/DatePicker/DatePicker.js",
      "value": [
        {
          "description": "",
          "displayName": "DatePicker",
          "methods": [
            {
              "name": "toggleFocus",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "handleFocusChange",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "focusedInput",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleDateChange",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "date",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleDatesChange",
              "docblock": null,
              "modifiers": [
                "async"
              ],
              "params": [
                {
                  "name": "{ startDate, endDate }",
                  "type": null
                }
              ],
              "returns": null
            }
          ],
          "actualName": "DatePicker",
          "props": {
            "kind": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'singleDate' | 'dateRange'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'singleDate'"
                  },
                  {
                    "name": "literal",
                    "value": "'dateRange'"
                  }
                ]
              },
              "description": "",
              "defaultValue": {
                "value": "'singleDate'",
                "computed": false
              }
            },
            "onSelectDate": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onSelectDateRange": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "date": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": ""
            },
            "initialStartDate": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "initialEndDate": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "daySize": {
              "required": false,
              "flowType": {
                "name": "number"
              },
              "description": "",
              "defaultValue": {
                "value": "40",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/DomainInput/DomainInput.js",
      "value": [
        {
          "description": "",
          "displayName": "DomainInput",
          "methods": [],
          "actualName": "DomainInput",
          "props": {
            "id": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Unique identifier"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/DurationInput/DurationInput.js",
      "value": [
        {
          "description": "",
          "displayName": "DurationInput",
          "methods": [
            {
              "name": "minutesToStr",
              "docblock": null,
              "modifiers": [
                "static"
              ],
              "params": [
                {
                  "name": "num",
                  "type": {
                    "name": "number"
                  }
                }
              ],
              "returns": {
                "type": {
                  "name": "string"
                }
              }
            },
            {
              "name": "renderSuggestion",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "suggestion",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "strToMinutes",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "str",
                  "type": {
                    "name": "string"
                  }
                }
              ],
              "returns": {
                "type": {
                  "name": "number"
                }
              }
            },
            {
              "name": "handleChange",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleBlur",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": null
                }
              ],
              "returns": null
            },
            {
              "name": "handleSelectSuggestion",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "KeyboardEvent",
                    "alias": "KeyboardEvent"
                  }
                },
                {
                  "name": "suggestion",
                  "type": {
                    "name": "Object",
                    "alias": "Object"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleGetSuggestions",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "value",
                  "type": null
                }
              ],
              "returns": null
            }
          ],
          "actualName": "DurationInput",
          "props": {
            "minMinutes": {
              "required": false,
              "flowType": {
                "name": "number"
              },
              "description": "minimum time someone can select",
              "defaultValue": {
                "value": "5",
                "computed": false
              }
            },
            "maxMinutes": {
              "required": false,
              "flowType": {
                "name": "number"
              },
              "description": "maximum time someone can select",
              "defaultValue": {
                "value": "180",
                "computed": false
              }
            },
            "skipMinutes": {
              "required": false,
              "flowType": {
                "name": "number"
              },
              "description": "when generating suggestions, how much much time is there between suggestions",
              "defaultValue": {
                "value": "5",
                "computed": false
              }
            },
            "defaultValue": {
              "required": false,
              "flowType": {
                "name": "number"
              },
              "description": "Default value (in minutes)"
            },
            "placeholder": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "placeholder to be formatted nicely (expects minutes)"
            },
            "noResultsTitle": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "title rendered when no results are found",
              "defaultValue": {
                "value": "'Invalid duration.'",
                "computed": false
              }
            },
            "noResultsSubtitle": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "subtitle rendered when no results are found",
              "defaultValue": {
                "value": "'Please adjust your search and try again.'",
                "computed": false
              }
            },
            "error": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "pass an error message to the input, this is show only after a valid duration is selected"
            },
            "required": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "is this field required?"
            },
            "onChange": {
              "required": false,
              "flowType": {
                "name": "signature",
                "type": "function",
                "raw": "(durationInMinutes: number | null, e: KeyboardEvent) => {}",
                "signature": {
                  "arguments": [
                    {
                      "name": "durationInMinutes",
                      "type": {
                        "name": "union",
                        "raw": "number | null",
                        "elements": [
                          {
                            "name": "number"
                          },
                          {
                            "name": "null"
                          }
                        ]
                      }
                    },
                    {
                      "name": "e",
                      "type": {
                        "name": "KeyboardEvent"
                      }
                    }
                  ],
                  "return": {
                    "name": "signature",
                    "type": "object",
                    "raw": "{}",
                    "signature": {
                      "properties": []
                    }
                  }
                }
              },
              "description": "a slighly different onChange"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/FormBuilder/FormBuilder.js",
      "value": [
        {
          "description": "",
          "displayName": "FormBuilder",
          "methods": [],
          "actualName": "FormBuilder",
          "props": {
            "kind": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'default' | 'page' | 'modal'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'default'"
                  },
                  {
                    "name": "literal",
                    "value": "'page'"
                  },
                  {
                    "name": "literal",
                    "value": "'modal'"
                  }
                ]
              },
              "description": "Determines how the form should be build. Default builds a simple form",
              "defaultValue": {
                "value": "'default'",
                "computed": false
              }
            },
            "initialValues": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": "Initial values to be passed into the form"
            },
            "onSubmit": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Submit handler"
            },
            "sections": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n\t/** Unique id for the section */\n\tid: string,\n\n\t/** Optional title to show at the top of the card */\n\ttitle?: string,\n\n\t/** Fields for this card */\n\tfields: Array<FormInnerFieldProps & { currentValue: any }>\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "id",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "title",
                          "value": {
                            "name": "string",
                            "required": false
                          }
                        },
                        {
                          "key": "fields",
                          "value": {
                            "name": "Array",
                            "elements": [
                              {
                                "name": "intersection",
                                "raw": "FormInnerFieldProps & { currentValue: any }",
                                "elements": [
                                  {
                                    "name": "FormInnerFieldProps"
                                  },
                                  {
                                    "name": "signature",
                                    "type": "object",
                                    "raw": "{ currentValue: any }",
                                    "signature": {
                                      "properties": [
                                        {
                                          "key": "currentValue",
                                          "value": {
                                            "name": "any",
                                            "required": true
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            ],
                            "raw": "Array<FormInnerFieldProps & { currentValue: any }>",
                            "required": true
                          }
                        }
                      ]
                    }
                  }
                ],
                "raw": "Array<SectionProps>"
              },
              "description": "Use sections when the form to be built is a full page"
            },
            "formLayout": {
              "required": true,
              "flowType": {
                "name": "FormLayoutProps"
              },
              "description": "Form layout props"
            },
            "validate": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Validation handler. This isn't needed when the form is made of toggles only.",
              "defaultValue": {
                "value": "() => null",
                "computed": false
              }
            },
            "primaryCTA": {
              "required": false,
              "flowType": {
                "name": "ButtonProps"
              },
              "description": "Optional when rendering a primary cta in the form",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "secondaryCTA": {
              "required": false,
              "flowType": {
                "name": "ButtonProps"
              },
              "description": "Optional when using a secondary cta in the form",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/FormLayout/FormLayout.js",
      "value": [
        {
          "description": "",
          "displayName": "FormLayout",
          "methods": [],
          "actualName": "FormLayout",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Contents of the Form Layout. Should be FormLayoutItem or FormLayoutGroup components"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Class name for the layout"
            },
            "spacing": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'base' | 'tight'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'base'"
                  },
                  {
                    "name": "literal",
                    "value": "'tight'"
                  }
                ]
              },
              "description": "Vertical spacing of the FormLayoutItem components",
              "defaultValue": {
                "value": "'base'",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/PhoneInput/PhoneInput.js",
      "value": [
        {
          "description": "",
          "displayName": "PhoneInput",
          "methods": [
            {
              "name": "handleChange",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "phoneNumber",
                  "type": {
                    "name": "string"
                  }
                }
              ],
              "returns": null
            }
          ],
          "actualName": "PhoneInput",
          "props": {
            "label": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Label text"
            },
            "isSmall": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the input less tall"
            },
            "helper": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Helper text"
            },
            "error": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Any error message to be rendered"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/Radio/Radio.js",
      "value": [
        {
          "description": "",
          "displayName": "Radio",
          "methods": [],
          "actualName": "Radio",
          "props": {
            "id": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Unique identifier"
            },
            "label": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Label and text for the radio"
            },
            "postText": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Optional text to show after the label"
            },
            "className": {
              "required": true,
              "flowType": {
                "name": "string",
                "nullable": true
              },
              "description": "Parent class"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/Search/Search.js",
      "value": [
        {
          "description": "",
          "displayName": "Search",
          "methods": [
            {
              "name": "handleChange",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "handleClear",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            }
          ],
          "actualName": "Search",
          "props": {
            "className": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Parent class"
            },
            "defaultValue": {
              "required": true,
              "flowType": {
                "name": "string",
                "nullable": true
              },
              "description": "Default input value"
            },
            "isSmall": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the input less tall"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/Slider/Slider.js",
      "value": [
        {
          "description": "",
          "displayName": "Slider",
          "methods": [
            {
              "name": "handleUncontrolledChange",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "e",
                  "type": {
                    "name": "any"
                  }
                }
              ],
              "returns": null
            }
          ],
          "actualName": "Slider",
          "props": {
            "label": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Label text"
            },
            "id": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Unique identifier"
            },
            "min": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": "Minimum value"
            },
            "max": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": "Maximum value"
            },
            "value": {
              "required": true,
              "flowType": {
                "name": "number"
              },
              "description": "Current value"
            },
            "postLabel": {
              "required": true,
              "flowType": {
                "name": "string",
                "nullable": true
              },
              "description": "Text to show after the label"
            },
            "onChange": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Callback after the slider updates its own value.\nUsing this property will place the slider in controlled mode."
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/Select/Select.js",
      "value": [
        {
          "description": "",
          "displayName": "Select",
          "methods": [],
          "actualName": "Select",
          "props": {
            "id": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Unique identifier"
            },
            "options": {
              "required": true,
              "flowType": {
                "name": "Object"
              },
              "description": "Options for the select"
            },
            "isSimple": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to use the simple variation"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Parent class"
            },
            "label": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Label text"
            },
            "placeholder": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional text to be displayed as disabled placeholder option"
            },
            "postLabel": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Text after label"
            },
            "error": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Error text"
            },
            "helper": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Helper text"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/Stars/Stars.js",
      "value": [
        {
          "description": "",
          "displayName": "Stars",
          "methods": [],
          "actualName": "Stars"
        }
      ]
    },
    {
      "key": "src/components/Forms/components/TextArea/TextArea.js",
      "value": [
        {
          "description": "",
          "displayName": "TextArea",
          "methods": [],
          "actualName": "TextArea",
          "props": {
            "id": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Unique identifier"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Additional class"
            },
            "label": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Input label"
            },
            "postLabel": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Text after label"
            },
            "error": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Error text"
            },
            "helper": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Helper text"
            },
            "resizeable": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the text area resizeable",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/Tag/Tag.js",
      "value": [
        {
          "description": "",
          "displayName": "Tag",
          "methods": [],
          "actualName": "Tag",
          "props": {
            "text": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Tag text"
            },
            "className": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Additional parent class"
            },
            "kind": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'primary' | 'secondary'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'primary'"
                  },
                  {
                    "name": "literal",
                    "value": "'secondary'"
                  }
                ]
              },
              "description": "Sets the tag variation",
              "defaultValue": {
                "value": "'primary'",
                "computed": false
              }
            },
            "isSmall": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the tag smaller",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/TextInput/TextInput.js",
      "value": [
        {
          "description": "",
          "displayName": "TextInput",
          "methods": [],
          "actualName": "TextInput",
          "props": {
            "id": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Unique identifier"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional class"
            },
            "label": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Label text"
            },
            "postLabel": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Text after label"
            },
            "kind": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Useful for credit cards"
            },
            "iconBefore": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional icon to show in the input"
            },
            "iconAfter": {
              "required": false,
              "flowType": {
                "name": "any"
              },
              "description": "Optional icon to show at the end of the input"
            },
            "appendix": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional; helpful for subdomains"
            },
            "error": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Error text"
            },
            "helper": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "string | Node",
                "elements": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "Node"
                  }
                ]
              },
              "description": "Helper text"
            },
            "isSmall": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to make the input less tall"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/Toggle/Toggle.js",
      "value": [
        {
          "description": "",
          "displayName": "Toggle",
          "methods": [],
          "actualName": "Toggle",
          "props": {
            "id": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Unique identifier"
            },
            "className": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Optional class"
            },
            "postText": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Text after the toggle"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Layout/components/LayoutSection/LayoutSection.js",
      "value": [
        {
          "description": "",
          "displayName": "LayoutSection",
          "methods": [],
          "actualName": "LayoutSection",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Contents of the Layout Section"
            },
            "className": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Class name for the section"
            },
            "isSecondary": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Whether this is a secondary Layout Section",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/List/components/ListHeader/ListHeader.js",
      "value": [
        {
          "description": "",
          "displayName": "ListHeader",
          "methods": [],
          "actualName": "ListHeader",
          "props": {
            "title": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Title text"
            },
            "subtitle": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional subtitle text",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "isSmall": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true for small lists",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "actions": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "ButtonProps"
                  }
                ],
                "raw": "Array<ButtonProps>"
              },
              "description": "Actions to associate with the list header",
              "defaultValue": {
                "value": "[]",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/List/components/ListItem/ListItem.js",
      "value": [
        {
          "description": "",
          "displayName": "ListItem",
          "methods": [],
          "actualName": "ListItem",
          "props": {
            "title": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Title text"
            },
            "subtitle": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional subtitle text",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "note": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional note text"
            },
            "avatar": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "URL to show a user avatar",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "image": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "URL to show an image",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "icon": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "Inline svg icon",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "isLeftIndented": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to add left spacing. useful in aligning with other list items that have icons or images"
            },
            "isDraggable": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true when the list can be reordered",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "isDisabled": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true when the list can be reordered"
            },
            "toggleId": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Makes the list item a setting",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "primaryAction": {
              "required": false,
              "flowType": {
                "name": "ButtonProps"
              },
              "description": "A primary action that turns the entire list item into a clickable button"
            },
            "actions": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "ButtonProps"
                  }
                ],
                "raw": "Array<ButtonProps>"
              },
              "description": "Actions associated with the list item",
              "defaultValue": {
                "value": "[]",
                "computed": false
              }
            },
            "contextMenu": {
              "required": false,
              "flowType": {
                "name": "ContextMenuProps"
              },
              "description": "Context Menu associated with the list item"
            },
            "toggleProps": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "Props passed to the toggle when it is used",
              "defaultValue": {
                "value": "{}",
                "computed": false
              }
            },
            "isSeparatorVisible": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set to true to show separator for this list item if followed by another list item.",
              "defaultValue": {
                "value": "true",
                "computed": false
              }
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional class name for list item"
            },
            "selectableId": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional id prop for selectable list items"
            },
            "selectableProps": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "Optional props for selectable list items"
            },
            "selectableType": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'checkbox' | 'radio'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'checkbox'"
                  },
                  {
                    "name": "literal",
                    "value": "'radio'"
                  }
                ]
              },
              "description": "Optional: set whether to use checkbox or radio for selectable list items"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/List/components/SortableList/SortableList.js",
      "value": [
        {
          "description": "",
          "displayName": "SortableComponent",
          "methods": [
            {
              "name": "toggleSorting",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "onCancel",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "onConfirm",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "onSortStart",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "onSortEnd",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "{ oldIndex, newIndex }: Object",
                  "type": {
                    "name": "Object",
                    "alias": "Object"
                  }
                }
              ],
              "returns": null
            }
          ],
          "actualName": "SortableComponent",
          "props": {
            "onConfirm": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "onConfirm callback"
            }
          },
          "composes": [
            "ListProps"
          ]
        }
      ]
    },
    {
      "key": "src/components/Modal/components/ModalBody/ModalBody.js",
      "value": [
        {
          "description": "",
          "displayName": "ModalBody",
          "methods": [],
          "actualName": "ModalBody",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Modal children"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional class name"
            },
            "height": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional height of body"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Modal/components/ModalFooter/ModalFooter.js",
      "value": [
        {
          "description": "",
          "displayName": "ModalFooter",
          "methods": [],
          "actualName": "ModalFooter",
          "props": {
            "primaryAction": {
              "required": true,
              "flowType": {
                "name": "ButtonProps"
              },
              "description": "The primary action in the footer"
            },
            "secondaryAction": {
              "required": false,
              "flowType": {
                "name": "ButtonProps"
              },
              "description": "Optional secondary action"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Modal/components/ModalHeader/ModalHeader.js",
      "value": [
        {
          "description": "",
          "displayName": "ModalHeader",
          "methods": [],
          "actualName": "ModalHeader",
          "props": {
            "title": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Title text"
            },
            "isPaginated": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Whether this is a paged modal. Title will center on pages",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "onRequestClose": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Callback to close the modal"
            },
            "onClickBack": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Function to handle navigating backwards in a modal"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Page/components/PageContent/PageContent.js",
      "value": [
        {
          "description": "",
          "displayName": "PageContent",
          "methods": [],
          "actualName": "PageContent",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Contents of the Page"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Page/components/PageHeader/PageHeader.js",
      "value": [
        {
          "description": "",
          "displayName": "PageHeader",
          "methods": [],
          "actualName": "PageHeader",
          "props": {
            "title": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Title of the Page",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "backLinkHref": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional back link href. Outputs next Link if relative, otherwise outputs anchor",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "onClickBack": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "Optional function to handle back click"
            },
            "backLinkText": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Back link text",
              "defaultValue": {
                "value": "'Back'",
                "computed": false
              }
            },
            "linkProps": {
              "required": false,
              "flowType": {
                "name": "LinkProps"
              },
              "description": "Props for Next router link: https://nextjs.org/docs/#routing."
            },
            "collapsed": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Is the header collapsed?"
            },
            "primaryAction": {
              "required": false,
              "flowType": {
                "name": "ButtonProps"
              },
              "description": "Adds a button to the page header for its primary action.",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "tabs": {
              "required": false,
              "flowType": {
                "name": "TabsProps"
              },
              "description": "Adds tabbed navigation for subviews",
              "defaultValue": {
                "value": "[]",
                "computed": false
              }
            },
            "hasBottomBorder": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to add a border to the page header",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "sidebarExpander": {
              "required": true,
              "flowType": {
                "name": "ButtonProps"
              },
              "description": "Adds an element to expand the right sidebar"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Table/components/TableFilters/TableFilters.js",
      "value": [
        {
          "description": "",
          "displayName": "TableFilters",
          "methods": [],
          "actualName": "TableFilters",
          "props": {
            "filters": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "Object"
                  }
                ],
                "raw": "Array<Object>"
              },
              "description": "Filters applied to the table"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Table/components/TableSearch/TableSearch.js",
      "value": [
        {
          "description": "",
          "displayName": "TableSearch",
          "methods": [],
          "actualName": "TableSearch",
          "composes": [
            "AutosuggestProps"
          ]
        }
      ]
    },
    {
      "key": "src/components/Tabs/components/Tab/Tab.js",
      "value": [
        {
          "description": "",
          "displayName": "Tab",
          "methods": [],
          "actualName": "Tab",
          "props": {
            "text": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Tab text"
            },
            "icon": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Tab icon",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "AnchorComponent": {
              "required": false,
              "flowType": {
                "name": "Node"
              },
              "description": "Method used to render anchor, if isAnchor is true"
            },
            "isCurrent": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true if this is the current tab",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "panel": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "Panel to show when this tab is current",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional class"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Toast/components/ToastWrapper/ToastWrapper.js",
      "value": [
        {
          "description": "",
          "displayName": "ToastWrapper",
          "methods": [
            {
              "name": "onRemoveClick",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "id",
                  "type": {
                    "name": "string"
                  }
                }
              ],
              "returns": null
            }
          ],
          "actualName": "ToastWrapper",
          "props": {
            "toasts": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "ToastProps"
                  }
                ],
                "raw": "Array<ToastProps>"
              },
              "description": "The toasts"
            },
            "handleRemove": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Handle toast removal"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/EventDetails/components/EventDetailsFooter/EventDetailsFooter.js",
      "value": [
        {
          "description": "",
          "displayName": "EventDetailsFooter",
          "methods": [],
          "actualName": "EventDetailsFooter",
          "props": {
            "primaryCTA": {
              "required": true,
              "flowType": {
                "name": "ButtonProps"
              },
              "description": ""
            },
            "secondaryCTA": {
              "required": true,
              "flowType": {
                "name": "ButtonProps"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/BigCalendar/components/EventDetails/components/EventDetailsHeader/EventDetailsHeader.js",
      "value": [
        {
          "description": "",
          "displayName": "EventDetailsHeader",
          "methods": [],
          "actualName": "EventDetailsHeader",
          "props": {
            "label": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "title": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "onClickBack": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "onClickClose": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "contextMenu": {
              "required": false,
              "flowType": {
                "name": "ContextMenuProps"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Core/components/FooterPrimary/components/Legal/Legal.js",
      "value": [
        {
          "description": "",
          "displayName": "Legal",
          "methods": [],
          "actualName": "Legal",
          "props": {
            "className": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Class for the text"
            },
            "linkClassName": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Class for links"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Core/components/FooterPrimary/components/HelpButton/HelpButton.js",
      "value": [
        {
          "description": "",
          "displayName": "HelpButton",
          "methods": [],
          "actualName": "HelpButton",
          "props": {
            "className": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Class for the button"
            },
            "iconClassName": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Class for the icon"
            },
            "textClassName": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "Class for the text"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Core/components/HeaderPrimary/components/LocationMenu/LocationMenu.js",
      "value": [
        {
          "description": "",
          "displayName": "LocationMenu",
          "methods": [
            {
              "name": "componentDidMount",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "componentWillUnmount",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            },
            {
              "name": "updateMenuPosition",
              "docblock": null,
              "modifiers": [],
              "params": [],
              "returns": null
            }
          ],
          "actualName": "LocationMenu",
          "props": {
            "isMenuVisible": {
              "required": true,
              "flowType": {
                "name": "boolean"
              },
              "description": ""
            },
            "onClick": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": ""
            },
            "locationManagementHref": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "locationName": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "locationAddress": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Core/components/HeaderPrimary/components/DefaultLockup/DefaultLockup.js",
      "value": [
        {
          "description": "",
          "displayName": "DefaultLockup",
          "methods": [],
          "actualName": "DefaultLockup"
        }
      ]
    },
    {
      "key": "src/components/Core/components/HeaderPrimary/components/Hamburger/Hamburger.js",
      "value": [
        {
          "description": "",
          "displayName": "Hamburger",
          "methods": [],
          "actualName": "Hamburger",
          "props": {
            "isSidebarVisible": {
              "required": true,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true when the sidebar is visible"
            },
            "onClick": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Click handler to toggle sidebar visibility"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Core/components/Sidebar/components/SidebarExpander/SidebarExpander.js",
      "value": [
        {
          "description": "",
          "displayName": "SidebarExpander",
          "methods": [],
          "actualName": "SidebarExpander",
          "props": {
            "isExpanded": {
              "required": true,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to expand the sidebar"
            },
            "toggleExpanded": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Handler to toggle sidebar visibility (large screens only)"
            },
            "forceCloseSidebar": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Handler to force the sidebar closed"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Core/components/Sidebar/components/SidebarFooter/SidebarFooter.js",
      "value": [
        {
          "description": "",
          "displayName": "SidebarFooter",
          "methods": [],
          "actualName": "SidebarFooter"
        }
      ]
    },
    {
      "key": "src/components/Core/components/HeaderPrimary/components/UserMenu/UserMenu.js",
      "value": [
        {
          "description": "",
          "displayName": "UserMenu",
          "methods": [],
          "actualName": "UserMenu",
          "props": {
            "image": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "User image to show in the avatar"
            },
            "name": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": "User name"
            },
            "menuIsVisible": {
              "required": true,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to show the menu"
            },
            "toggleMenu": {
              "required": true,
              "flowType": {
                "name": "Function"
              },
              "description": "Handler to toggle menu visibility"
            },
            "userMenuItems": {
              "required": true,
              "flowType": {
                "name": "ReactNode"
              },
              "description": "Menu children (<ListItem> or <li>)"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Core/components/Sidebar/components/SidebarItem/SidebarItem.js",
      "value": [
        {
          "description": "",
          "displayName": "SidebarItem",
          "methods": [],
          "actualName": "SidebarItem",
          "props": {
            "items": {
              "required": false,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n\ttext: string,\n\thref: string,\n\tclassName?: string,\n\taction?: ButtonProps,\n\ticon?: Node,\n\tisCurrent?: boolean,\n\titems: Array<ItemProps>\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "text",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "href",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "className",
                          "value": {
                            "name": "string",
                            "required": false
                          }
                        },
                        {
                          "key": "action",
                          "value": {
                            "name": "ButtonProps",
                            "required": false
                          }
                        },
                        {
                          "key": "icon",
                          "value": {
                            "name": "Node",
                            "required": false
                          }
                        },
                        {
                          "key": "isCurrent",
                          "value": {
                            "name": "boolean",
                            "required": false
                          }
                        },
                        {
                          "key": "items",
                          "value": {
                            "name": "Array",
                            "elements": [
                              {
                                "name": "ItemProps"
                              }
                            ],
                            "raw": "Array<ItemProps>",
                            "required": true
                          }
                        }
                      ]
                    }
                  }
                ],
                "raw": "Array<ItemProps>"
              },
              "description": "",
              "defaultValue": {
                "value": "[]",
                "computed": false
              }
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "text": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "href": {
              "required": true,
              "flowType": {
                "name": "string"
              },
              "description": ""
            },
            "action": {
              "required": false,
              "flowType": {
                "name": "Object"
              },
              "description": "",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "icon": {
              "required": false,
              "flowType": {
                "name": "any"
              },
              "description": "",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "isCurrent": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/FormBuilder/components/FormInner/FormInner.js",
      "value": [
        {
          "description": "",
          "displayName": "FormInner",
          "methods": [
            {
              "name": "handleChange",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "name",
                  "type": {
                    "name": "string"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "name": "string"
                  }
                },
                {
                  "name": "eOrValue",
                  "type": {
                    "name": "union",
                    "raw": "KeyboardEvent | any",
                    "elements": [
                      {
                        "name": "KeyboardEvent"
                      },
                      {
                        "name": "any"
                      }
                    ]
                  }
                },
                {
                  "name": "eOrNull",
                  "type": {
                    "name": "union",
                    "raw": "KeyboardEvent | null",
                    "elements": [
                      {
                        "name": "KeyboardEvent"
                      },
                      {
                        "name": "null"
                      }
                    ]
                  }
                }
              ],
              "returns": null
            },
            {
              "name": "renderChild",
              "docblock": null,
              "modifiers": [],
              "params": [
                {
                  "name": "child",
                  "type": {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n\t/** Unique name/id for the field */\n\tname: string,\n\n\t/** The type of element to render */\n\ttype: string,\n\n\t/** Props to pass through to the field */\n\tprops?: Object\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "name",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "type",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "props",
                          "value": {
                            "name": "Object",
                            "required": false
                          }
                        }
                      ]
                    },
                    "alias": "FormInnerFieldProps"
                  }
                }
              ],
              "returns": null
            }
          ],
          "actualName": "FormInner",
          "props": {
            "fields": {
              "required": true,
              "flowType": {
                "name": "Array",
                "elements": [
                  {
                    "name": "signature",
                    "type": "object",
                    "raw": "{\n\t/** Unique name/id for the field */\n\tname: string,\n\n\t/** The type of element to render */\n\ttype: string,\n\n\t/** Props to pass through to the field */\n\tprops?: Object\n}",
                    "signature": {
                      "properties": [
                        {
                          "key": "name",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "type",
                          "value": {
                            "name": "string",
                            "required": true
                          }
                        },
                        {
                          "key": "props",
                          "value": {
                            "name": "Object",
                            "required": false
                          }
                        }
                      ]
                    }
                  }
                ],
                "raw": "Array<FormInnerFieldProps>"
              },
              "description": "Fields in this form"
            },
            "formLayout": {
              "required": true,
              "flowType": {
                "name": "FormLayoutProps"
              },
              "description": "Layout properties for the form layout"
            },
            "formikProps": {
              "required": true,
              "flowType": {
                "name": "FormikProps"
              },
              "description": "Props to pass through from Formik"
            },
            "primaryCTA": {
              "required": false,
              "flowType": {
                "name": "ButtonProps",
                "nullable": true
              },
              "description": "Optional when using a primary cta in the form",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "secondaryCTA": {
              "required": false,
              "flowType": {
                "name": "ButtonProps",
                "nullable": true
              },
              "description": "Optional when including a secondary cta in the form",
              "defaultValue": {
                "value": "null",
                "computed": false
              }
            },
            "onChange": {
              "required": false,
              "flowType": {
                "name": "Function"
              },
              "description": "handle some on change"
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Core/components/Sidebar/components/SidebarSection/SidebarSection.js",
      "value": [
        {
          "description": "",
          "displayName": "SidebarSection",
          "methods": [],
          "actualName": "SidebarSection",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Children to show in the sidebar section"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Optional classname to add to the section",
              "defaultValue": {
                "value": "''",
                "computed": false
              }
            },
            "isCentered": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set true to center align horizontally",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            },
            "horizontalSpacing": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'base' | 'loose'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'base'"
                  },
                  {
                    "name": "literal",
                    "value": "'loose'"
                  }
                ]
              },
              "description": "Horizontal Spacing options"
            },
            "verticalSpacing": {
              "required": false,
              "flowType": {
                "name": "union",
                "raw": "'base' | 'loose'",
                "elements": [
                  {
                    "name": "literal",
                    "value": "'base'"
                  },
                  {
                    "name": "literal",
                    "value": "'loose'"
                  }
                ]
              },
              "description": "Vertical Spacing options"
            },
            "spacing": {
              "defaultValue": {
                "value": "'base'",
                "computed": false
              },
              "required": false
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/FormLayout/components/FormLayoutGroup/FormLayoutGroup.js",
      "value": [
        {
          "description": "",
          "displayName": "FormLayoutGroup",
          "methods": [],
          "actualName": "FormLayoutGroup",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Contents of the FormLayoutGroup. Should be FormLayoutItem components"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Class name for the group"
            },
            "isCondensed": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Whether the group item widths can be condensed to fit more items in a row",
              "defaultValue": {
                "value": "false",
                "computed": false
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Forms/components/FormLayout/components/FormLayoutItem/FormLayoutItem.js",
      "value": [
        {
          "description": "",
          "displayName": "FormLayoutItem",
          "methods": [],
          "actualName": "FormLayoutItem",
          "props": {
            "children": {
              "required": true,
              "flowType": {
                "name": "Node"
              },
              "description": "Contents of the Form Layout Item"
            },
            "className": {
              "required": false,
              "flowType": {
                "name": "string"
              },
              "description": "Class name for the item"
            },
            "spacerTop": {
              "required": false,
              "flowType": {
                "name": "boolean"
              },
              "description": "Set to true to add spacer to top if this item doesn't have a label but will be inline with other items that do."
            }
          }
        }
      ]
    },
    {
      "key": "docz/components/IndexCard.js",
      "value": [
        {
          "description": "",
          "displayName": "IndexCard",
          "methods": [],
          "actualName": "IndexCard",
          "props": {
            "iconBg": {
              "defaultValue": {
                "value": "'#8388f0'",
                "computed": false
              },
              "required": false
            }
          }
        }
      ]
    },
    {
      "key": "docz/components/IndexComponents.js",
      "value": [
        {
          "description": "",
          "displayName": "IndexComponents",
          "methods": [],
          "actualName": "IndexComponents"
        }
      ]
    }
  ],
  "entries": [
    {
      "key": "docz/index.mdx",
      "value": {
        "name": "Heartwood",
        "route": "/",
        "id": "5c71d50ac38b5354bfb07ce1891c8e2b",
        "filepath": "docz/index.mdx",
        "link": "",
        "slug": "docz-index",
        "menu": "",
        "headings": [
          {
            "slug": "heartwood",
            "depth": 1,
            "value": "Heartwood"
          },
          {
            "slug": "components",
            "depth": 2,
            "value": "Components"
          },
          {
            "slug": "resources",
            "depth": 2,
            "value": "Resources"
          }
        ]
      }
    },
    {
      "key": "src/components/Avatar/Avatar.mdx",
      "value": {
        "name": "Avatar",
        "menu": "Avatars",
        "id": "9a79e9d26da01020ba207ec130a4a832",
        "filepath": "src/components/Avatar/Avatar.mdx",
        "link": "",
        "slug": "src-components-avatar-avatar",
        "route": "/src-components-avatar-avatar",
        "headings": [
          {
            "slug": "avatar",
            "depth": 1,
            "value": "Avatar"
          }
        ]
      }
    },
    {
      "key": "src/components/Avatar/UserAvatar.mdx",
      "value": {
        "name": "UserAvatar",
        "menu": "Avatars",
        "id": "b6c2381a3d214448b8f996ee93378d18",
        "filepath": "src/components/Avatar/UserAvatar.mdx",
        "link": "",
        "slug": "src-components-avatar-user-avatar",
        "route": "/src-components-avatar-user-avatar",
        "headings": [
          {
            "slug": "useravatar",
            "depth": 1,
            "value": "UserAvatar"
          }
        ]
      }
    },
    {
      "key": "src/components/Button/Button.mdx",
      "value": {
        "name": "Button",
        "menu": "Buttons",
        "id": "2b773349a016959194c905ce6ad9d2d4",
        "filepath": "src/components/Button/Button.mdx",
        "link": "",
        "slug": "src-components-button-button",
        "route": "/src-components-button-button",
        "headings": [
          {
            "slug": "button",
            "depth": 1,
            "value": "Button"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "kinds",
            "depth": 2,
            "value": "Kinds"
          },
          {
            "slug": "primary",
            "depth": 3,
            "value": "Primary"
          },
          {
            "slug": "secondary",
            "depth": 3,
            "value": "Secondary"
          },
          {
            "slug": "simple",
            "depth": 3,
            "value": "Simple"
          },
          {
            "slug": "destructive",
            "depth": 3,
            "value": "Destructive"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          },
          {
            "slug": "related-components",
            "depth": 2,
            "value": "Related components:"
          },
          {
            "slug": "composed-by",
            "depth": 3,
            "value": "Composed by:"
          },
          {
            "slug": "consumed-by",
            "depth": 3,
            "value": "Consumed by:"
          }
        ]
      }
    },
    {
      "key": "src/components/ButtonGroup/ButtonGroup.mdx",
      "value": {
        "name": "ButtonGroup",
        "menu": "Buttons",
        "id": "831bc1c0524d50c6d81c0bc058e1ced3",
        "filepath": "src/components/ButtonGroup/ButtonGroup.mdx",
        "link": "",
        "slug": "src-components-button-group-button-group",
        "route": "/src-components-button-group-button-group",
        "headings": [
          {
            "slug": "buttongroup",
            "depth": 1,
            "value": "ButtonGroup"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "kinds",
            "depth": 2,
            "value": "Kinds"
          },
          {
            "slug": "default",
            "depth": 3,
            "value": "Default"
          },
          {
            "slug": "segmented",
            "depth": 3,
            "value": "Segmented"
          },
          {
            "slug": "floating",
            "depth": 3,
            "value": "Floating"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          },
          {
            "slug": "related-components",
            "depth": 2,
            "value": "Related components:"
          },
          {
            "slug": "composed-by",
            "depth": 3,
            "value": "Composed by:"
          },
          {
            "slug": "consumed-by",
            "depth": 3,
            "value": "Consumed by:"
          }
        ]
      }
    },
    {
      "key": "src/components/Card/Card.mdx",
      "value": {
        "name": "Card",
        "menu": "Cards",
        "id": "04a69f849d589538eb24bdaff375b127",
        "filepath": "src/components/Card/Card.mdx",
        "link": "",
        "slug": "src-components-card-card",
        "route": "/src-components-card-card",
        "headings": [
          {
            "slug": "card",
            "depth": 1,
            "value": "Card"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/ContextMenu/ContextMenu.mdx",
      "value": {
        "name": "ContextMenu",
        "menu": "Buttons",
        "id": "15820429d7cb4c74f4156c75925cb204",
        "filepath": "src/components/ContextMenu/ContextMenu.mdx",
        "link": "",
        "slug": "src-components-context-menu-context-menu",
        "route": "/src-components-context-menu-context-menu",
        "headings": [
          {
            "slug": "contextmenu",
            "depth": 1,
            "value": "ContextMenu"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Message/Message.mdx",
      "value": {
        "name": "Message",
        "menu": "Communication",
        "id": "974b58a371d11a3955224fc7810dae39",
        "filepath": "src/components/Message/Message.mdx",
        "link": "",
        "slug": "src-components-message-message",
        "route": "/src-components-message-message",
        "headings": [
          {
            "slug": "message",
            "depth": 1,
            "value": "Message"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Card/components/CardBody.mdx",
      "value": {
        "name": "CardBody",
        "menu": "Cards",
        "id": "c4eefa20ef7e9645bdf50a7b51204aff",
        "filepath": "src/components/Card/components/CardBody.mdx",
        "link": "",
        "slug": "src-components-card-components-card-body",
        "route": "/src-components-card-components-card-body",
        "headings": [
          {
            "slug": "cardbody",
            "depth": 1,
            "value": "CardBody"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Card/components/CardBuilder.mdx",
      "value": {
        "name": "CardBuilder",
        "menu": "Cards",
        "id": "235103a784fe5e4895b625eb35d9dd99",
        "filepath": "src/components/Card/components/CardBuilder.mdx",
        "link": "",
        "slug": "src-components-card-components-card-builder",
        "route": "/src-components-card-components-card-builder",
        "headings": [
          {
            "slug": "cardbuilder",
            "depth": 1,
            "value": "CardBuilder"
          }
        ]
      }
    },
    {
      "key": "src/components/Card/components/CardFooter.mdx",
      "value": {
        "name": "CardFooter",
        "menu": "Cards",
        "id": "8457bcc2e59a9be70bc95f3d66c8be1c",
        "filepath": "src/components/Card/components/CardFooter.mdx",
        "link": "",
        "slug": "src-components-card-components-card-footer",
        "route": "/src-components-card-components-card-footer",
        "headings": [
          {
            "slug": "cardfooter",
            "depth": 1,
            "value": "CardFooter"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Card/components/CardHeader.mdx",
      "value": {
        "name": "CardHeader",
        "menu": "Cards",
        "id": "472df9ef56ec073427b3957fd0b9a186",
        "filepath": "src/components/Card/components/CardHeader.mdx",
        "link": "",
        "slug": "src-components-card-components-card-header",
        "route": "/src-components-card-components-card-header",
        "headings": [
          {
            "slug": "cardheader",
            "depth": 1,
            "value": "CardHeader"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Card/components/CardSection.mdx",
      "value": {
        "name": "CardSection",
        "menu": "Cards",
        "id": "efb3bb4f9240b6287f47fb2b966bd71d",
        "filepath": "src/components/Card/components/CardSection.mdx",
        "link": "",
        "slug": "src-components-card-components-card-section",
        "route": "/src-components-card-components-card-section",
        "headings": [
          {
            "slug": "cardsection",
            "depth": 1,
            "value": "CardSection"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Card/components/OnboardingCard.mdx",
      "value": {
        "name": "OnboardingCard",
        "menu": "Cards",
        "id": "caf7e31c171be37dc6b2582b7e7fcd9e",
        "filepath": "src/components/Card/components/OnboardingCard.mdx",
        "link": "",
        "slug": "src-components-card-components-onboarding-card",
        "route": "/src-components-card-components-onboarding-card",
        "headings": [
          {
            "slug": "onboardingcard",
            "depth": 1,
            "value": "OnboardingCard"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Card/components/Scores.mdx",
      "value": {
        "name": "Scores",
        "menu": "Cards",
        "id": "d53835ba8e66c0dc69dfe32687bf93ac",
        "filepath": "src/components/Card/components/Scores.mdx",
        "link": "",
        "slug": "src-components-card-components-scores",
        "route": "/src-components-card-components-scores",
        "headings": [
          {
            "slug": "scores",
            "depth": 1,
            "value": "Scores"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Message/components/MessageBuilder.mdx",
      "value": {
        "name": "MessageBuilder",
        "menu": "Communication",
        "id": "b2117392e70a2c3c9dbbd90ac9014f56",
        "filepath": "src/components/Message/components/MessageBuilder.mdx",
        "link": "",
        "slug": "src-components-message-components-message-builder",
        "route": "/src-components-message-components-message-builder",
        "headings": [
          {
            "slug": "messagebuilder",
            "depth": 1,
            "value": "MessageBuilder"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/FeedBuilder/FeedBuilder.mdx",
      "value": {
        "name": "FeedBuilder",
        "menu": "Core",
        "id": "23fa21e579bf6088166e44f71fac3d96",
        "filepath": "src/components/Core/components/FeedBuilder/FeedBuilder.mdx",
        "link": "",
        "slug": "src-components-core-components-feed-builder-feed-builder",
        "route": "/src-components-core-components-feed-builder-feed-builder",
        "headings": [
          {
            "slug": "feedbuilder",
            "depth": 1,
            "value": "FeedBuilder"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/FooterPrimary/FooterPrimary.mdx",
      "value": {
        "name": "FooterPrimary",
        "menu": "Core",
        "id": "1bc4b1c75c617eca974ba090c515e610",
        "filepath": "src/components/Core/components/FooterPrimary/FooterPrimary.mdx",
        "link": "",
        "slug": "src-components-core-components-footer-primary-footer-primary",
        "route": "/src-components-core-components-footer-primary-footer-primary",
        "headings": [
          {
            "slug": "footerprimary",
            "depth": 1,
            "value": "FooterPrimary"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/HeaderPrimary/HeaderPrimary.mdx",
      "value": {
        "name": "HeaderPrimary",
        "menu": "Core",
        "id": "43d9c856b5615a9fd83fe4787717db0c",
        "filepath": "src/components/Core/components/HeaderPrimary/HeaderPrimary.mdx",
        "link": "",
        "slug": "src-components-core-components-header-primary-header-primary",
        "route": "/src-components-core-components-header-primary-header-primary",
        "headings": [
          {
            "slug": "headerprimary",
            "depth": 1,
            "value": "HeaderPrimary"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/ProfileSummary/ProfileSummary.mdx",
      "value": {
        "name": "ProfileSummary",
        "menu": "Core",
        "id": "fae09812b6fd13e09f8582717b576bd4",
        "filepath": "src/components/Core/components/ProfileSummary/ProfileSummary.mdx",
        "link": "",
        "slug": "src-components-core-components-profile-summary-profile-summary",
        "route": "/src-components-core-components-profile-summary-profile-summary",
        "headings": [
          {
            "slug": "profilesummary",
            "depth": 1,
            "value": "ProfileSummary"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/SaveBar/SaveBar.mdx",
      "value": {
        "name": "SaveBar",
        "menu": "Core",
        "id": "ab8954548204f06b03ccd303b3fac3f3",
        "filepath": "src/components/Core/components/SaveBar/SaveBar.mdx",
        "link": "",
        "slug": "src-components-core-components-save-bar-save-bar",
        "route": "/src-components-core-components-save-bar-save-bar",
        "headings": [
          {
            "slug": "savebar",
            "depth": 1,
            "value": "SaveBar"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/Sidebar/Sidebar.mdx",
      "value": {
        "name": "Sidebar",
        "menu": "Core",
        "id": "de14c25044b1fad3bbb764e7b05cebed",
        "filepath": "src/components/Core/components/Sidebar/Sidebar.mdx",
        "link": "",
        "slug": "src-components-core-components-sidebar-sidebar",
        "route": "/src-components-core-components-sidebar-sidebar",
        "headings": [
          {
            "slug": "sidebar",
            "depth": 1,
            "value": "Sidebar"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/FooterPrimary/components/HelpButton/HelpButton.mdx",
      "value": {
        "name": "HelpButton",
        "menu": "Core",
        "id": "26f7c18e20d5c70cb96943afee9244d1",
        "filepath": "src/components/Core/components/FooterPrimary/components/HelpButton/HelpButton.mdx",
        "link": "",
        "slug": "src-components-core-components-footer-primary-components-help-button-help-button",
        "route": "/src-components-core-components-footer-primary-components-help-button-help-button",
        "headings": [
          {
            "slug": "helpbutton",
            "depth": 1,
            "value": "HelpButton"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/FooterPrimary/components/Legal/Legal.mdx",
      "value": {
        "name": "Legal",
        "menu": "Core",
        "id": "9a966aa45c3651eb60dca569a4cbfeed",
        "filepath": "src/components/Core/components/FooterPrimary/components/Legal/Legal.mdx",
        "link": "",
        "slug": "src-components-core-components-footer-primary-components-legal-legal",
        "route": "/src-components-core-components-footer-primary-components-legal-legal",
        "headings": [
          {
            "slug": "legal",
            "depth": 1,
            "value": "Legal"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/HeaderPrimary/components/DefaultLockup/DefaultLockup.mdx",
      "value": {
        "name": "DefaultLockup",
        "menu": "Core",
        "id": "c0b29b6bdcb2c1e98050c99b0a9f7b2b",
        "filepath": "src/components/Core/components/HeaderPrimary/components/DefaultLockup/DefaultLockup.mdx",
        "link": "",
        "slug": "src-components-core-components-header-primary-components-default-lockup-default-lockup",
        "route": "/src-components-core-components-header-primary-components-default-lockup-default-lockup",
        "headings": [
          {
            "slug": "defaultlockup",
            "depth": 1,
            "value": "DefaultLockup"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/HeaderPrimary/components/Hamburger/Hamburger.mdx",
      "value": {
        "name": "Hamburger",
        "menu": "Core",
        "id": "5ae95845d1c8520361ba61ee04761d1f",
        "filepath": "src/components/Core/components/HeaderPrimary/components/Hamburger/Hamburger.mdx",
        "link": "",
        "slug": "src-components-core-components-header-primary-components-hamburger-hamburger",
        "route": "/src-components-core-components-header-primary-components-hamburger-hamburger",
        "headings": [
          {
            "slug": "hamburger",
            "depth": 1,
            "value": "Hamburger"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/HeaderPrimary/components/LocationMenu/LocationMenu.mdx",
      "value": {
        "name": "LocationMenu",
        "menu": "Core",
        "id": "211d4f7d74020256ba0106d466129880",
        "filepath": "src/components/Core/components/HeaderPrimary/components/LocationMenu/LocationMenu.mdx",
        "link": "",
        "slug": "src-components-core-components-header-primary-components-location-menu-location-menu",
        "route": "/src-components-core-components-header-primary-components-location-menu-location-menu",
        "headings": [
          {
            "slug": "locationmenu",
            "depth": 1,
            "value": "LocationMenu"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/HeaderPrimary/components/UserMenu/UserMenu.mdx",
      "value": {
        "name": "UserMenu",
        "menu": "Core",
        "id": "27872559b75e32725211802558245fdc",
        "filepath": "src/components/Core/components/HeaderPrimary/components/UserMenu/UserMenu.mdx",
        "link": "",
        "slug": "src-components-core-components-header-primary-components-user-menu-user-menu",
        "route": "/src-components-core-components-header-primary-components-user-menu-user-menu",
        "headings": [
          {
            "slug": "usermenu",
            "depth": 1,
            "value": "UserMenu"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/Sidebar/components/SidebarExpander/SidebarExpander.mdx",
      "value": {
        "name": "SidebarExpander",
        "menu": "Core",
        "id": "571dc6c396aacbf3a70f7498311d00c9",
        "filepath": "src/components/Core/components/Sidebar/components/SidebarExpander/SidebarExpander.mdx",
        "link": "",
        "slug": "src-components-core-components-sidebar-components-sidebar-expander-sidebar-expander",
        "route": "/src-components-core-components-sidebar-components-sidebar-expander-sidebar-expander",
        "headings": [
          {
            "slug": "sidebarexpander",
            "depth": 1,
            "value": "SidebarExpander"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/Sidebar/components/SidebarFooter/SidebarFooter.mdx",
      "value": {
        "name": "SidebarFooter",
        "menu": "Core",
        "id": "f6688b34795a4ff46f5118619e12cd43",
        "filepath": "src/components/Core/components/Sidebar/components/SidebarFooter/SidebarFooter.mdx",
        "link": "",
        "slug": "src-components-core-components-sidebar-components-sidebar-footer-sidebar-footer",
        "route": "/src-components-core-components-sidebar-components-sidebar-footer-sidebar-footer",
        "headings": [
          {
            "slug": "sidebarfooter",
            "depth": 1,
            "value": "SidebarFooter"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/Sidebar/components/SidebarItem/SidebarItem.mdx",
      "value": {
        "name": "SidebarItem",
        "menu": "Core",
        "id": "4f594f416ce3245b7d17c3e5b3b0c4b5",
        "filepath": "src/components/Core/components/Sidebar/components/SidebarItem/SidebarItem.mdx",
        "link": "",
        "slug": "src-components-core-components-sidebar-components-sidebar-item-sidebar-item",
        "route": "/src-components-core-components-sidebar-components-sidebar-item-sidebar-item",
        "headings": [
          {
            "slug": "sidebaritem",
            "depth": 1,
            "value": "SidebarItem"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Core/components/Sidebar/components/SidebarSection/SidebarSection.mdx",
      "value": {
        "name": "SidebarSection",
        "menu": "Core",
        "id": "cb45feda9f63f1c01f6a7d7e66f8663b",
        "filepath": "src/components/Core/components/Sidebar/components/SidebarSection/SidebarSection.mdx",
        "link": "",
        "slug": "src-components-core-components-sidebar-components-sidebar-section-sidebar-section",
        "route": "/src-components-core-components-sidebar-components-sidebar-section-sidebar-section",
        "headings": [
          {
            "slug": "sidebarsection",
            "depth": 1,
            "value": "SidebarSection"
          },
          {
            "slug": "when-to-use",
            "depth": 2,
            "value": "When to use"
          },
          {
            "slug": "when-not-to-use",
            "depth": 2,
            "value": "When not to use"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    }
  ]
}
