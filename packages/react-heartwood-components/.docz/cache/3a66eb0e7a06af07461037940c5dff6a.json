{"remainingRequest":"/Users/jerms/Sites/workspace.sprucebot-skills-kit/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/jerms/Sites/workspace.sprucebot-skills-kit/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/jerms/Sites/workspace.sprucebot-skills-kit/node_modules/source-map-loader/index.js!/Users/jerms/Sites/workspace.sprucebot-skills-kit/packages/react-heartwood-components/src/components/ButtonGroup/ButtonGroup.mdx","dependencies":[{"path":"/Users/jerms/Sites/workspace.sprucebot-skills-kit/packages/react-heartwood-components/src/components/ButtonGroup/ButtonGroup.mdx","mtime":1561310441615},{"path":"/Users/jerms/Sites/workspace.sprucebot-skills-kit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jerms/Sites/workspace.sprucebot-skills-kit/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jerms/Sites/workspace.sprucebot-skills-kit/node_modules/@mdx-js/loader/index.js","mtime":499162500000},{"path":"/Users/jerms/Sites/workspace.sprucebot-skills-kit/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jerms/Sites/workspace.sprucebot-skills-kit/packages/react-heartwood-components/src/components/ButtonGroup/ButtonGroup.mdx"],"names":["React","mdx","Playground","Props","ButtonGroup","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","kind","text","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport ButtonGroup from './ButtonGroup'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"buttongroup\"\n    }}>{`ButtonGroup`}</h1>\n    <h3 {...{\n      \"id\": \"buttongroups-arrange-related-buttons-in-close-proximity-to-each-other\"\n    }}>{`ButtonGroups arrange related buttons in close proximity to each other.`}</h3>\n    <Playground __position={0} __code={'<ButtonGroup\\n  actions={[\\n    { kind: \\'secondary\\', text: \\'Cancel\\' },\\n    { kind: \\'primary\\', text: \\'Confirm\\' },\\n  ]}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ButtonGroup\n    }} __codesandbox={``} mdxType=\"Playground\">\n\t<ButtonGroup actions={[{\n        kind: 'secondary',\n        text: 'Cancel'\n      }, {\n        kind: 'primary',\n        text: 'Confirm'\n      }]} mdxType=\"ButtonGroup\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"when-to-use\"\n    }}>{`When to use`}</h2>\n    <p>{`Use a ButtonGroup when there are multiple related actions that a user may want to take.`}</p>\n    <h2 {...{\n      \"id\": \"when-not-to-use\"\n    }}>{`When not to use`}</h2>\n    <p>{`When actions are not related to each other, they should not be placed in a ButtonGroup.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ButtonGroup} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"related-components\"\n    }}>{`Related components:`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`ContextMenu`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"composed-by\"\n    }}>{`Composed by:`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Button`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"consumed-by\"\n    }}>{`Consumed by:`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`CardBuilder`}</li>\n      <li parentName=\"ul\">{`ContextMenu`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}