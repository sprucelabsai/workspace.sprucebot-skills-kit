{"remainingRequest":"/Users/jerms/.nvm/versions/node/v10.14.2/lib/node_modules/docz/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/jerms/.nvm/versions/node/v10.14.2/lib/node_modules/docz/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/jerms/.nvm/versions/node/v10.14.2/lib/node_modules/docz/node_modules/source-map-loader/index.js!/Users/jerms/Sites/workspace.sprucebot-skills-kit/packages/react-heartwood-components/src/components/Icon/Icon.js","dependencies":[{"path":"/Users/jerms/Sites/workspace.sprucebot-skills-kit/packages/react-heartwood-components/src/components/Icon/Icon.js","mtime":1561261878813},{"path":"/Users/jerms/.nvm/versions/node/v10.14.2/lib/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jerms/.nvm/versions/node/v10.14.2/lib/node_modules/docz/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jerms/.nvm/versions/node/v10.14.2/lib/node_modules/docz/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jerms/.nvm/versions/node/v10.14.2/lib/node_modules/docz/node_modules/source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20gIi9Vc2Vycy9qZXJtcy8ubnZtL3ZlcnNpb25zL25vZGUvdjEwLjE0LjIvbGliL25vZGVfbW9kdWxlcy9kb2N6L25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjsKaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvVXNlcnMvamVybXMvLm52bS92ZXJzaW9ucy9ub2RlL3YxMC4xNC4yL2xpYi9ub2RlX21vZHVsZXMvZG9jei9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOwp2YXIgX2pzeEZpbGVOYW1lID0gIi9Vc2Vycy9qZXJtcy9TaXRlcy93b3Jrc3BhY2Uuc3BydWNlYm90LXNraWxscy1raXQvcGFja2FnZXMvcmVhY3QtaGVhcnR3b29kLWNvbXBvbmVudHMvc3JjL2NvbXBvbmVudHMvSWNvbi9JY29uLmpzIjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsWyJkZWZhdWx0Il0uc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCi8vIFRPRE8oZ2VvcmdlKTogRmlndXJlIG91dCB3aHkgaWNvbnMgYnVzdHMgdGhpcyBydWxlLgoKLyogZXNsaW50IGltcG9ydC9uYW1lc3BhY2U6IG9mZiAqLwovLyBOT1RFOiBUaGlzIGNvbXBvbmVudCBzaG91bGQgb25seSBpbmNsdWRlIGEgZmV3IG9mIHRoZSBtb3N0IGNvbW1vbmx5Ci8vIHVzZWQgaWNvbnMgZm9yIGRldmVsb3BlciBjb252ZW5pZW5jZQppbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnOwppbXBvcnQgY3ggZnJvbSAnY2xhc3NuYW1lcyc7CmltcG9ydCAqIGFzIGljb25zIGZyb20gJy4uLy4uL2ljb25zLmpzJzsKCmlmICh0eXBlb2YgUHJvcHMgIT09ICd1bmRlZmluZWQnICYmIFByb3BzICYmIFByb3BzID09PSBPYmplY3QoUHJvcHMpICYmIE9iamVjdC5pc0V4dGVuc2libGUoUHJvcHMpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFByb3BzLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiUHJvcHMiLAogICAgICBmaWxlbmFtZTogInNyYy9jb21wb25lbnRzL0ljb24vSWNvbi5qcyIKICAgIH0KICB9KTsKfQoKdmFyIEljb24gPSBmdW5jdGlvbiBJY29uKHByb3BzKSB7CiAgdmFyIGljb24gPSBwcm9wcy5pY29uLAogICAgICBjdXN0b21JY29uID0gcHJvcHMuY3VzdG9tSWNvbiwKICAgICAgaXNMaW5lSWNvbiA9IHByb3BzLmlzTGluZUljb24sCiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSwKICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgWyJpY29uIiwgImN1c3RvbUljb24iLCAiaXNMaW5lSWNvbiIsICJjbGFzc05hbWUiXSk7CgogIHZhciBpY29uS2V5ID0gaWNvbiAmJiBpY29uLnRvTG93ZXJDYXNlKCk7CgogIGlmICghY3VzdG9tSWNvbiAmJiAoIWljb24gfHwgIWljb25zW2ljb25LZXldKSkgewogICAgY29uc29sZS53YXJuKCI8SWNvbiAvPiBjb3VsZCBub3QgZmluZCBhbiBpY29uIHdpdGgga2V5ICIsIGljb24pOwogICAgcmV0dXJuIG51bGw7CiAgfQoKICB2YXIgaXNGaWxsSWNvbiA9ICFjdXN0b21JY29uICYmIGljb25zW2ljb25LZXldICYmICFpY29uc1tpY29uS2V5XS5pc0xpbmVJY29uOwogIHZhciBIYW5kbGVyID0gY3VzdG9tSWNvbiB8fCBpY29uc1tpY29uS2V5XS5pY29uOwogIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEhhbmRsZXIsIF9leHRlbmRzKHsKICAgIGNsYXNzTmFtZTogY3goY2xhc3NOYW1lLCAnaWNvbicsIHsKICAgICAgJ2ljb24tLW5vLWZpbGwnOiB0eXBlb2YgaXNMaW5lSWNvbiAhPT0gJ3VuZGVmaW5lZCcgPyBpc0xpbmVJY29uIDogIWlzRmlsbEljb24sCiAgICAgICdpY29uLS1zdHJva2UnOiB0eXBlb2YgaXNMaW5lSWNvbiAhPT0gJ3VuZGVmaW5lZCcgPyBpc0xpbmVJY29uIDogIWlzRmlsbEljb24KICAgIH0pCiAgfSwgcmVzdCwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSk7Cn07Cgp2YXIgX2RlZmF1bHQgPSBJY29uOwpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKCmlmICh0eXBlb2YgSWNvbiAhPT0gJ3VuZGVmaW5lZCcgJiYgSWNvbiAmJiBJY29uID09PSBPYmplY3QoSWNvbikgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShJY29uKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShJY29uLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiSWNvbiIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvSWNvbi9JY29uLmpzIgogICAgfQogIH0pOwp9Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKEljb24sICJJY29uIiwgIi9Vc2Vycy9qZXJtcy9TaXRlcy93b3Jrc3BhY2Uuc3BydWNlYm90LXNraWxscy1raXQvcGFja2FnZXMvcmVhY3QtaGVhcnR3b29kLWNvbXBvbmVudHMvc3JjL2NvbXBvbmVudHMvSWNvbi9JY29uLmpzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoX2RlZmF1bHQsICJkZWZhdWx0IiwgIi9Vc2Vycy9qZXJtcy9TaXRlcy93b3Jrc3BhY2Uuc3BydWNlYm90LXNraWxscy1raXQvcGFja2FnZXMvcmVhY3QtaGVhcnR3b29kLWNvbXBvbmVudHMvc3JjL2NvbXBvbmVudHMvSWNvbi9JY29uLmpzIik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/Users/jerms/Sites/workspace.sprucebot-skills-kit/packages/react-heartwood-components/src/components/Icon/Icon.js"],"names":["React","cx","icons","Icon","props","icon","customIcon","isLineIcon","className","rest","iconKey","toLowerCase","console","warn","isFillIcon","Handler"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;AAGA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAO,KAAKC,KAAZ,MAAuB,gBAAvB;;;;;;;;;;;;;AAcA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAkB;AAAA,MACtBC,IADsB,GAC+BD,KAD/B,CACtBC,IADsB;AAAA,MAChBC,UADgB,GAC+BF,KAD/B,CAChBE,UADgB;AAAA,MACJC,UADI,GAC+BH,KAD/B,CACJG,UADI;AAAA,MACQC,SADR,GAC+BJ,KAD/B,CACQI,SADR;AAAA,MACsBC,IADtB,4BAC+BL,KAD/B;;AAG9B,MAAMM,OAAO,GAAGL,IAAI,IAAIA,IAAI,CAACM,WAAL,EAAxB;;AAEA,MAAI,CAACL,UAAD,KAAgB,CAACD,IAAD,IAAS,CAACH,KAAK,CAACQ,OAAD,CAA/B,CAAJ,EAA+C;AAC9CE,IAAAA,OAAO,CAACC,IAAR,8CAA0DR,IAA1D;AACA,WAAO,IAAP;AACA;;AAED,MAAIS,UAAU,GAAG,CAACR,UAAD,IAAeJ,KAAK,CAACQ,OAAD,CAApB,IAAiC,CAACR,KAAK,CAACQ,OAAD,CAAL,CAAeH,UAAlE;AAEA,MAAMQ,OAAO,GAAGT,UAAU,IAAIJ,KAAK,CAACQ,OAAD,CAAL,CAAeL,IAA7C;AAEA,SACC,oBAAC,OAAD;AACC,IAAA,SAAS,EAAEJ,EAAE,CAACO,SAAD,EAAY,MAAZ,EAAoB;AAChC,uBACC,OAAOD,UAAP,KAAsB,WAAtB,GAAoCA,UAApC,GAAiD,CAACO,UAFnB;AAGhC,sBACC,OAAOP,UAAP,KAAsB,WAAtB,GAAoCA,UAApC,GAAiD,CAACO;AAJnB,KAApB;AADd,KAOKL,IAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD;AAWA,CAzBD;;eA2BeN,I;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA3BMA,I","sourcesContent":["// TODO(george): Figure out why icons busts this rule.\n/* eslint import/namespace: off */\n\n// @flow\n// NOTE: This component should only include a few of the most commonly\n// used icons for developer convenience\nimport React from 'react'\nimport cx from 'classnames'\n\nimport * as icons from '../../icons.js'\n\nexport type Props = {\n\t/** The name of the icon to render. If not found, this will return null. */\n\ticon?: string,\n\n\t/** Set true to render an icon with a stroke, but no fill */\n\tisLineIcon?: boolean,\n\n\tcustomIcon?: any,\n\n\tclassName?: string\n}\n\nconst Icon = (props: Props) => {\n\tconst { icon, customIcon, isLineIcon, className, ...rest } = props\n\n\tconst iconKey = icon && icon.toLowerCase()\n\n\tif (!customIcon && (!icon || !icons[iconKey])) {\n\t\tconsole.warn(`<Icon /> could not find an icon with key `, icon)\n\t\treturn null\n\t}\n\n\tlet isFillIcon = !customIcon && icons[iconKey] && !icons[iconKey].isLineIcon\n\n\tconst Handler = customIcon || icons[iconKey].icon\n\n\treturn (\n\t\t<Handler\n\t\t\tclassName={cx(className, 'icon', {\n\t\t\t\t'icon--no-fill':\n\t\t\t\t\ttypeof isLineIcon !== 'undefined' ? isLineIcon : !isFillIcon,\n\t\t\t\t'icon--stroke':\n\t\t\t\t\ttypeof isLineIcon !== 'undefined' ? isLineIcon : !isFillIcon\n\t\t\t})}\n\t\t\t{...rest}\n\t\t/>\n\t)\n}\n\nexport default Icon\n"]}]}