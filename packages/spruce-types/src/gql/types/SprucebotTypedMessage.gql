enum SprucebotTypedMessageSize {
	"Inline with text"
	small
	"A subheading"
	medium
	"A heading"
	large
}

"A message (comprised of SprucebotTypedMessageSentences) that Sprucebot can type out "
type SprucebotTypedMessage {
	"Id for view caching"
	id: ID!
	"Sprucebot will type out these sentences one at a time preserving what is similar between each one (in bold)"
	sentences: [SprucebotTypedMessageSentence!]!
	"The default optional avatar state for all sentences being typed"
	defaultAvatar: SprucebotAvatar
	"How long should I wait before starting to type?"
	startDelayMs: Int
	"Should the message loop? Defaults to false"
	loop: Boolean
	"Size of the message"
	size: SprucebotTypedMessageSize
	"Is typing paused? Setting this to start will not start typing"
	paused: Boolean
}

"A single line Sprucebot will type out"
type SprucebotTypedMessageSentence {
	"Override the avatar for this specific sentence"
	avatar: SprucebotAvatar
	"What will Sprucebot type?"
	words: String!
	"How long should we hold before starting the next sentence (or we pause forever if it's the last sentence)"
	endDelayMs: Int
}
