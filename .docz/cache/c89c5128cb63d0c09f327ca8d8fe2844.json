{"remainingRequest":"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/source-map-loader/index.js!/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/docs/spruce-skill/interface.md","dependencies":[{"path":"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/docs/spruce-skill/interface.md","mtime":1554307369210},{"path":"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/cache-loader/dist/cjs.js","mtime":1554307451521},{"path":"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1554307451471},{"path":"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/@mdx-js/loader/index.js","mtime":1554307451561},{"path":"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/source-map-loader/index.js","mtime":1554307451815}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/docs/spruce-skill/interface.md\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nvar layoutProps = {};\n\nvar MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n      return React.createElement(MDXTag, {\n        name: \"wrapper\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"your-skills-interface\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Your skill's interface\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"The \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"interface\"), \", without a doubt, has the steepest learning curve for those who are unfamiliar with \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"https://reactjs.org\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"reactjs\"), \" and \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"https://redux.js.org/#the-gist\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"redux\"), \". Seriously, if you don't know these technologies, you are gonna wanna read up now.\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"We have done are best to abstract away most of the ceremony involved (such as routing, setup of redux store, etc), but it still, familiarity with React and Redux is going to be important.\"), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"routes\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Routes\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"So you wanna create a \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"/owner/settings\"), \" page? Easy, create a \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Component\"), \" at \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"interface/pages/owner/settings.js\"), \". So easy! This is thanks to the powerful \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"https://github.com/zeit/next.js/\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Nextjs\"), \".\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-js\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"// interface/owner/settings.js\\n\\nimport React from 'react'\\nimport PageWrapper from '../../containers/PageWrapper'\\nimport { Page, PageContent } from '@sprucelabs/react-heartwood-components'\\n\\nclass OwnerSettings extends React.Component {\\n    // this method can be run both server side and client side\\n    // so be aware of your environment (tips below)\\n    static getInitialProps({ props }) {\\n        return {}\\n    }\\n\\n    // always runs client side, so you can be certain you are\\n    // in a browser\\n    componentDidMount() {\\n        // always call skill.ready() to let Sprucebot know\\n        // your skill is ready to display\\n        this.props.skill.ready()\\n    }\\n\\n    // can run both server and client side, which should not\\n    // be a problem since you should only be accessing local\\n    // props and state\\n    render() {\\n        // you can always be certain auth exists and is an\\n        // owner because we are in the \\\"owner\\\" dir\\n        const { auth } = this.props\\n\\n        // Page should always be the outer most component\\n        return (\\n            <Page\\n                className=\\\"owner-settings\\\"\\n                header={{\\n                    title: this.props.lang.getText('ownerSettingsHeading', {\\n                        owner: auth\\n                    })\\n                }}\\n            >\\n                <PageContent>\\n                    <BotText>\\n                        {this.props.lang.getText('ownerSettingsBotTex', {\\n                            owner: auth\\n                        })}\\n                    </BotText>\\n                </PageContent>\\n            </Page>\\n        )\\n    }\\n}\\n\\n// Wrapping your component in Page is what make the whole thing work\\nexport default PageWrapper(OwnerSettings)\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"restricting-by-role\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Restricting by role\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"The \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"interface\"), \" restricts using the same rules as \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"server\"), \", but does it all automatically for you. Simply creating a page under \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"owner\"), \", \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"guest\"), \", or \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"teammate\"), \" will restrict based off the following:\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"/owner/*\"), \" - must be an \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"owner\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"/teammate/*\"), \" - must be an \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"owner\"), \" or \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"teammate\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"/guest/*\"), \" - must be an \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"owner\"), \" or \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"teammate\"), \" or \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"guest\"))), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"auth-object\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Auth\"), \" object\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"This mirrors exactly the functionality \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"server\"), \" side. But, in React tradition, the \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"auth\"), \" is attached to \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"this.props\"), \".\"), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"making-calls-to-server\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Making calls to \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"server\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"So you've got your \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"server\"), \" side \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"routes\"), \" setup and want to make some calls. You'd follow these steps.\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Create your \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"action\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Create your \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"reducer\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Dispatch the \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"action\"), \" in \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"componentDidMount\"))), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"actions\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Actions\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"This is how you change state in your app. They are stored in \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"interface/store/actions\"), \".In most cases, it means making an \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"https\"), \" request. We'll use the Shopify sync example from \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"server\"), \". All \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"https\"), \" requests are made using the \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"https://github.com/axios/axios\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"axios\"), \" library under the hood. Everything is a passthrough.\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"All actions need 3 states, \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"REQUEST\"), \", \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"SUCCESS\"), \", \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"ERROR\"), \". They are all used and the state being set is handled for you (though you'll still need to reduce the state changes).\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-js\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"// interface/store/actions/shopify.js\\nexport const GET_SHOPIFY_SETTINGS_REQUEST =\\n    'shopify/GET_SHOPIFY_SETTINGS_REQUEST'\\nexport const GET_SHOPIFY_SETTINGS_SUCCESS =\\n    'shopify/GET_SHOPIFY_SETTINGS_SUCCESS'\\nexport const GET_SHOPIFY_SETTINGS_ERROR = 'shopify/GET_SHOPIFY_SETTINGS_ERROR'\\n\\nexport const UPDATE_SHOPIFY_SETTINGS_REQUEST =\\n    'shopify/UPDATE_SHOPIFY_SETTINGS_REQUEST'\\nexport const UPDATE_SHOPIFY_SETTINGS_SUCCESS =\\n    'shopify/UPDATE_SHOPIFY_SETTINGS_SUCCESS'\\nexport const UPDATE_SHOPIFY_SETTINGS_ERROR =\\n    'shopify/UPDATE_SHOPIFY_SETTINGS_ERROR'\\n\\nexport function get() {\\n    return {\\n        types: [\\n            GET_SHOPIFY_SETTINGS_REQUEST,\\n            GET_SHOPIFY_SETTINGS_SUCCESS,\\n            GET_SHOPIFY_SETTINGS_ERROR\\n        ],\\n        promise: client => client.get(`/api/1.0/owner/shopify/settings.json`)\\n    }\\n}\\n\\nexport function update(settings) {\\n    return {\\n        types: [\\n            UPDATE_SHOPIFY_REQUEST,\\n            UPDATE_SHOPIFY_SUCCESS,\\n            UPDATE_SHOPIFY_ERROR\\n        ],\\n        promise: client =>\\n            client.post(`/api/1.0/owner/shopify/settings.json`, {\\n                body: settings\\n            })\\n    }\\n}\\n\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"After you create actions, you need to add them \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"interface/store/reducers/index.js\"), \" so the \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"interface\"), \" is aware of them.\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-js\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"// interface/store/actions/index.js\\nimport * as users from './users'\\nimport * as locations from './locations'\\nimport * as shopify from './shopify'\\n\\nmodule.exports = {\\n    users,\\n    locations,\\n    shopify\\n}\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"reducers\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Reducers\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Every time state changes, you need to take that new state and update the current state. Reducers are located in \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"interface/store/reducers\"), \".\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-js\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"// interface/store/reducers/shopify.js\\nimport {\\n    UPDATE_SHOPIFY_SETTINGS_REQUEST,\\n    UPDATE_SHOPIFY_SETTINGS_SUCCESS,\\n    UPDATE_SHOPIFY_SETTINGS_ERROR,\\n    GET_SHOPIFY_SETTINGS_REQUEST,\\n    GET_SHOPIFY_SETTINGS_SUCCESS,\\n    GET_SHOPIFY_SETTINGS_ERROR\\n} from '../actions/shopify'\\n\\nexport default function reducer(state = null, action) {\\n    switch (action.type) {\\n        case GET_SHOPIFY_SETTINGS_REQUEST:\\n            return {\\n                ...state,\\n                getting: true\\n            }\\n        case GET_SHOPIFY_SETTINGS_SUCCESS:\\n            return {\\n                ...state,\\n                settings: action.result,\\n                getError: false,\\n                getting: false\\n            }\\n        case GET_SHOPIFY_SETTINGS_ERROR:\\n            return {\\n                ...state,\\n                getError: action.error,\\n                getting: false\\n            }\\n        case UPDATE_SHOPIFY_SETTINGS_REQUEST:\\n            return {\\n                ...state,\\n                updating: true\\n            }\\n        case UPDATE_SHOPIFY_SETTINGS_SUCCESS:\\n            return {\\n                ...state,\\n                settings: action.result,\\n                getError: false,\\n                updating: false\\n            }\\n        case UPDATE_SHOPIFY_SETTINGS_ERROR:\\n            return {\\n                ...state,\\n                updateError: action.error,\\n                updating: false\\n            }\\n        default:\\n            return state\\n    }\\n}\\n\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Similar to \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"actions\"), \", we gotta drop in our new \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"reducers\"), \" to \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"interface/store/reducers/index.js\"), \".\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-js\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"// interface/store/reducers/index.js\\nimport users from './users'\\nimport locations from './locations'\\nimport shopify from './shopify'\\n\\nmodule.exports = {\\n    users,\\n    locations,\\n    shopify\\n}\\n\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Phew, ok, now we can make requests and expect \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"state\"), \" to be accurate. Lets try incorporating it into the above \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"interface/owner/settings.js\"), \" page with a fancy \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"<Loader />\"), \" and everything.\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-js\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"// interface/owner/settings.js\\n\\nimport React from 'react'\\nimport PageWrapper from '../../containers/PageWrapper'\\nimport {\\n    Page,\\n    PageContent,\\n    Loader,\\n    Form,\\n    Input,\\n    SubmitWrapper,\\n    Button\\n} from '@sprucelabs/react-heartwood-components'\\n\\nclass OwnerSettings extends React.Component {\\n    static getInitialProps(props) {\\n        return {}\\n    }\\n\\n    componentDidMount() {\\n        this.props.skill.ready()\\n\\n        // get the shopify settings using our new action\\n        this.props.actions.shopify.get()\\n    }\\n\\n    onSubmit(e) {\\n        console.log(e)\\n    }\\n\\n    render() {\\n        // our reducer will set the props for us as the state of the app changes\\n        // and this will trigger a re-render\\n        const { auth, shopify, lang, skill } = this.props\\n\\n        // we'll handle the 3 states we setup; request, success, error\\n        return (\\n            <Page\\n                className=\\\"owner-settings\\\"\\n                header={{\\n                    title: lang.getText('ownerSettingsHeading', {\\n                        owner: auth\\n                    })\\n                }}\\n            >\\n                <PageContent>\\n                    {!shopify.getError && (\\n                        <BotText>\\n                            {lang.getText('ownerSettingsBotTex', {\\n                                owner: auth\\n                            })}\\n                        </BotText>\\n                    )}\\n\\n                    {shopify.getError && (\\n                        <BotText>{shopify.getError.friendlyReason}</BotText>\\n                    )}\\n\\n                    {shopify.getting && <Loader />}\\n\\n                    {shopify.settings && (\\n                        <Form>\\n                            <Input\\n                                label={lang.getText('shopNameLabel')}\\n                                defaultValue={shopify.settings.shopName}\\n                            />\\n                            <Input\\n                                label={lang.getText('apiKeyLabel')}\\n                                defaultValue={shopify.settings.shopName}\\n                            />\\n                            <Input\\n                                label={lang.getText('accessTokenLabel')}\\n                                defaultValue={shopify.settings.shopName}\\n                            />\\n                            <SubmitWrapper>\\n                                <Button alt onClick={skill.back()}>\\n                                    {lang.getText('backToDashboardButtonLabel')}\\n                                </Button>\\n                                <Button type=\\\"submit\\\" primary>\\n                                    {lang.getText('saveButtonLabel')}\\n                                </Button>\\n                            </SubmitWrapper>\\n                        </Form>\\n                    )}\\n                </PageContent>\\n            </Page>\\n        )\\n    }\\n}\\n\\n// Wrapping your component in Page is what make the whole thing work\\nexport default PageWrapper(OwnerSettings)\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"getinitialprops\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"getInitialProps()\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"We've added some behaviors here for convenience. These are \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"redirect\"), \" and \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"public\"), \".\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-js\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"getInitialProps(props) {\\n    return {\\n        redirect: '/where/you/want', // sends 302 Location: to client\\n        public: false // will skip the auth check, so user could be anonymous\\n    }\\n}\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"config\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Config\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"If there are any \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"config/default.js\"), \" (or any environment) settings you need available on the client, it's a 2 step process. First, inside of \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"config/default.js\"), \" you will see a \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"sanitizeClientConfig\"), \" block. Anything in there will be passed to the client.\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-js\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"// config/default.js\\nmodule.exports = {\\n    ...,\\n    myNewSetting: 'What the!??',\\n    sanitizeClientConfig: config =>\\n        pick(config), [\\n            ...,\\n            'myNewSetting'\\n        ])\\n}\\n\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Once your setting is dropped in, you can access it from your \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Component\"), \"'s \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"props\"), \".\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-js\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"// server side\\nstatic getInitialProps(props) {\\n    console.log(props.config.myNewSetting) // 'What the!??'\\n    return {\\n        anotherNewSetting: 'Totally!'\\n    }\\n}\\n\\n// client side\\ncomponentDidMount() {\\n    alert(this.props.config.myNewSetting) // 'What the!??'\\n    alert(this.props.config.anotherNewSetting) // 'Totally!'\\n}\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"styleguide\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"Styleguide\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"When you first visit your skill, you'll be taken to the \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"Styleguide\"), \". This guide has every \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"Component\"), \" defined in \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"react-heartwood-components\"), \" with examples on how they can be configured. As soon as you set \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \".env\"), \" \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"DEV_MODE=false\"), \", this page goes away.\"), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"custom-styling\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Custom styling\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"Currently it is against Sprucebot rules to add custom styles to your Skill. If you find our control library is not sufficient, put your styles inline, take a screen, and shoot it to scientists (at) sprucelabs.ai and we'll see how we can enhance the kit to accommodate.\"), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"gotchyas\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Gotchya's\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"We say \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"interface\"), \" and not \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"client\"), \" because this code can render on the \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"server\"), \" as well.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"getInitialProps\"), \" can run both \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"server\"), \" side and \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"client\"), \" side, so check for \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"window\"), \" or anything else you expect to use.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"Dispatch actions \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"client\"), \" side and use a \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"<Loader />\"), \" so things load quickly.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"NEVER\"), \" \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"import config from 'config'\"), \" client side. It'll expose all your settings! Use \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"sanitizeClientConfig\"), \" && \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"this.props.config\"), \" instead.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"Deving through a proxy (like ngrok) is really slow. One way to make development faster is to inspect the \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"iframe\"), \" in Sprucebot, copy the \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"src\"), \", and paste it into a new window.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"Make sure you set the \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"error\"), \" to \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"false\"), \" on \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"REQUEST_SUCCESS\"), \" so any previous error is removed.\")), React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"whats-next\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"What's next?\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"Ok, we're almost end-to-end... but it's probably a good time to get more familiar with all the things you can do with the \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"api.md\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"api\"), \".\"));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MDXContent;\n}(React.Component);\n\nexport { MDXContent as default };\nMDXContent.isMDXComponent = true;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(layoutProps, \"layoutProps\", \"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/docs/spruce-skill/interface.md\");\n  reactHotLoader.register(MDXContent, \"MDXContent\", \"/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/docs/spruce-skill/interface.md\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/Users/jeremytinianow/Sites/workspace.sprucebot-skills-kit/docs/spruce-skill/interface.md"],"names":["React","MDXTag","layoutProps","MDXContent","props","layout","components","Component","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"your-skills-interface\"}}>{`Your skill's interface`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`interface`}</MDXTag>{`, without a doubt, has the steepest learning curve for those who are unfamiliar with `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://reactjs.org\"}}>{`reactjs`}</MDXTag>{` and `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://redux.js.org/#the-gist\"}}>{`redux`}</MDXTag>{`. Seriously, if you don't know these technologies, you are gonna wanna read up now.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We have done are best to abstract away most of the ceremony involved (such as routing, setup of redux store, etc), but it still, familiarity with React and Redux is going to be important.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"routes\"}}>{`Routes`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`So you wanna create a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/owner/settings`}</MDXTag>{` page? Easy, create a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Component`}</MDXTag>{` at `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`interface/pages/owner/settings.js`}</MDXTag>{`. So easy! This is thanks to the powerful `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/zeit/next.js/\"}}>{`Nextjs`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// interface/owner/settings.js\n\nimport React from 'react'\nimport PageWrapper from '../../containers/PageWrapper'\nimport { Page, PageContent } from '@sprucelabs/react-heartwood-components'\n\nclass OwnerSettings extends React.Component {\n    // this method can be run both server side and client side\n    // so be aware of your environment (tips below)\n    static getInitialProps({ props }) {\n        return {}\n    }\n\n    // always runs client side, so you can be certain you are\n    // in a browser\n    componentDidMount() {\n        // always call skill.ready() to let Sprucebot know\n        // your skill is ready to display\n        this.props.skill.ready()\n    }\n\n    // can run both server and client side, which should not\n    // be a problem since you should only be accessing local\n    // props and state\n    render() {\n        // you can always be certain auth exists and is an\n        // owner because we are in the \"owner\" dir\n        const { auth } = this.props\n\n        // Page should always be the outer most component\n        return (\n            <Page\n                className=\"owner-settings\"\n                header={{\n                    title: this.props.lang.getText('ownerSettingsHeading', {\n                        owner: auth\n                    })\n                }}\n            >\n                <PageContent>\n                    <BotText>\n                        {this.props.lang.getText('ownerSettingsBotTex', {\n                            owner: auth\n                        })}\n                    </BotText>\n                </PageContent>\n            </Page>\n        )\n    }\n}\n\n// Wrapping your component in Page is what make the whole thing work\nexport default PageWrapper(OwnerSettings)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"restricting-by-role\"}}>{`Restricting by role`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`interface`}</MDXTag>{` restricts using the same rules as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`server`}</MDXTag>{`, but does it all automatically for you. Simply creating a page under `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`owner`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`guest`}</MDXTag>{`, or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`teammate`}</MDXTag>{` will restrict based off the following:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`/owner/*`}</MDXTag>{` - must be an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`owner`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`/teammate/*`}</MDXTag>{` - must be an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`owner`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`teammate`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`/guest/*`}</MDXTag>{` - must be an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`owner`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`teammate`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`guest`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"auth-object\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`Auth`}</MDXTag>{` object`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This mirrors exactly the functionality `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`server`}</MDXTag>{` side. But, in React tradition, the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`auth`}</MDXTag>{` is attached to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`this.props`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"making-calls-to-server\"}}>{`Making calls to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`server`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`So you've got your `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`server`}</MDXTag>{` side `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`routes`}</MDXTag>{` setup and want to make some calls. You'd follow these steps.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Create your `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`action`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Create your `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`reducer`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Dispatch the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`action`}</MDXTag>{` in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`componentDidMount`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"actions\"}}>{`Actions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is how you change state in your app. They are stored in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`interface/store/actions`}</MDXTag>{`.In most cases, it means making an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`https`}</MDXTag>{` request. We'll use the Shopify sync example from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`server`}</MDXTag>{`. All `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`https`}</MDXTag>{` requests are made using the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/axios/axios\"}}>{`axios`}</MDXTag>{` library under the hood. Everything is a passthrough.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`All actions need 3 states, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`REQUEST`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`SUCCESS`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ERROR`}</MDXTag>{`. They are all used and the state being set is handled for you (though you'll still need to reduce the state changes).`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// interface/store/actions/shopify.js\nexport const GET_SHOPIFY_SETTINGS_REQUEST =\n    'shopify/GET_SHOPIFY_SETTINGS_REQUEST'\nexport const GET_SHOPIFY_SETTINGS_SUCCESS =\n    'shopify/GET_SHOPIFY_SETTINGS_SUCCESS'\nexport const GET_SHOPIFY_SETTINGS_ERROR = 'shopify/GET_SHOPIFY_SETTINGS_ERROR'\n\nexport const UPDATE_SHOPIFY_SETTINGS_REQUEST =\n    'shopify/UPDATE_SHOPIFY_SETTINGS_REQUEST'\nexport const UPDATE_SHOPIFY_SETTINGS_SUCCESS =\n    'shopify/UPDATE_SHOPIFY_SETTINGS_SUCCESS'\nexport const UPDATE_SHOPIFY_SETTINGS_ERROR =\n    'shopify/UPDATE_SHOPIFY_SETTINGS_ERROR'\n\nexport function get() {\n    return {\n        types: [\n            GET_SHOPIFY_SETTINGS_REQUEST,\n            GET_SHOPIFY_SETTINGS_SUCCESS,\n            GET_SHOPIFY_SETTINGS_ERROR\n        ],\n        promise: client => client.get(\\`/api/1.0/owner/shopify/settings.json\\`)\n    }\n}\n\nexport function update(settings) {\n    return {\n        types: [\n            UPDATE_SHOPIFY_REQUEST,\n            UPDATE_SHOPIFY_SUCCESS,\n            UPDATE_SHOPIFY_ERROR\n        ],\n        promise: client =>\n            client.post(\\`/api/1.0/owner/shopify/settings.json\\`, {\n                body: settings\n            })\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`After you create actions, you need to add them `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`interface/store/reducers/index.js`}</MDXTag>{` so the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`interface`}</MDXTag>{` is aware of them.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// interface/store/actions/index.js\nimport * as users from './users'\nimport * as locations from './locations'\nimport * as shopify from './shopify'\n\nmodule.exports = {\n    users,\n    locations,\n    shopify\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"reducers\"}}>{`Reducers`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Every time state changes, you need to take that new state and update the current state. Reducers are located in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`interface/store/reducers`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// interface/store/reducers/shopify.js\nimport {\n    UPDATE_SHOPIFY_SETTINGS_REQUEST,\n    UPDATE_SHOPIFY_SETTINGS_SUCCESS,\n    UPDATE_SHOPIFY_SETTINGS_ERROR,\n    GET_SHOPIFY_SETTINGS_REQUEST,\n    GET_SHOPIFY_SETTINGS_SUCCESS,\n    GET_SHOPIFY_SETTINGS_ERROR\n} from '../actions/shopify'\n\nexport default function reducer(state = null, action) {\n    switch (action.type) {\n        case GET_SHOPIFY_SETTINGS_REQUEST:\n            return {\n                ...state,\n                getting: true\n            }\n        case GET_SHOPIFY_SETTINGS_SUCCESS:\n            return {\n                ...state,\n                settings: action.result,\n                getError: false,\n                getting: false\n            }\n        case GET_SHOPIFY_SETTINGS_ERROR:\n            return {\n                ...state,\n                getError: action.error,\n                getting: false\n            }\n        case UPDATE_SHOPIFY_SETTINGS_REQUEST:\n            return {\n                ...state,\n                updating: true\n            }\n        case UPDATE_SHOPIFY_SETTINGS_SUCCESS:\n            return {\n                ...state,\n                settings: action.result,\n                getError: false,\n                updating: false\n            }\n        case UPDATE_SHOPIFY_SETTINGS_ERROR:\n            return {\n                ...state,\n                updateError: action.error,\n                updating: false\n            }\n        default:\n            return state\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Similar to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`actions`}</MDXTag>{`, we gotta drop in our new `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`reducers`}</MDXTag>{` to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`interface/store/reducers/index.js`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// interface/store/reducers/index.js\nimport users from './users'\nimport locations from './locations'\nimport shopify from './shopify'\n\nmodule.exports = {\n    users,\n    locations,\n    shopify\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Phew, ok, now we can make requests and expect `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{` to be accurate. Lets try incorporating it into the above `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`interface/owner/settings.js`}</MDXTag>{` page with a fancy `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Loader />`}</MDXTag>{` and everything.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// interface/owner/settings.js\n\nimport React from 'react'\nimport PageWrapper from '../../containers/PageWrapper'\nimport {\n    Page,\n    PageContent,\n    Loader,\n    Form,\n    Input,\n    SubmitWrapper,\n    Button\n} from '@sprucelabs/react-heartwood-components'\n\nclass OwnerSettings extends React.Component {\n    static getInitialProps(props) {\n        return {}\n    }\n\n    componentDidMount() {\n        this.props.skill.ready()\n\n        // get the shopify settings using our new action\n        this.props.actions.shopify.get()\n    }\n\n    onSubmit(e) {\n        console.log(e)\n    }\n\n    render() {\n        // our reducer will set the props for us as the state of the app changes\n        // and this will trigger a re-render\n        const { auth, shopify, lang, skill } = this.props\n\n        // we'll handle the 3 states we setup; request, success, error\n        return (\n            <Page\n                className=\"owner-settings\"\n                header={{\n                    title: lang.getText('ownerSettingsHeading', {\n                        owner: auth\n                    })\n                }}\n            >\n                <PageContent>\n                    {!shopify.getError && (\n                        <BotText>\n                            {lang.getText('ownerSettingsBotTex', {\n                                owner: auth\n                            })}\n                        </BotText>\n                    )}\n\n                    {shopify.getError && (\n                        <BotText>{shopify.getError.friendlyReason}</BotText>\n                    )}\n\n                    {shopify.getting && <Loader />}\n\n                    {shopify.settings && (\n                        <Form>\n                            <Input\n                                label={lang.getText('shopNameLabel')}\n                                defaultValue={shopify.settings.shopName}\n                            />\n                            <Input\n                                label={lang.getText('apiKeyLabel')}\n                                defaultValue={shopify.settings.shopName}\n                            />\n                            <Input\n                                label={lang.getText('accessTokenLabel')}\n                                defaultValue={shopify.settings.shopName}\n                            />\n                            <SubmitWrapper>\n                                <Button alt onClick={skill.back()}>\n                                    {lang.getText('backToDashboardButtonLabel')}\n                                </Button>\n                                <Button type=\"submit\" primary>\n                                    {lang.getText('saveButtonLabel')}\n                                </Button>\n                            </SubmitWrapper>\n                        </Form>\n                    )}\n                </PageContent>\n            </Page>\n        )\n    }\n}\n\n// Wrapping your component in Page is what make the whole thing work\nexport default PageWrapper(OwnerSettings)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"getinitialprops\"}}>{`getInitialProps()`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We've added some behaviors here for convenience. These are `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`redirect`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`public`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`getInitialProps(props) {\n    return {\n        redirect: '/where/you/want', // sends 302 Location: to client\n        public: false // will skip the auth check, so user could be anonymous\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"config\"}}>{`Config`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If there are any `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`config/default.js`}</MDXTag>{` (or any environment) settings you need available on the client, it's a 2 step process. First, inside of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`config/default.js`}</MDXTag>{` you will see a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`sanitizeClientConfig`}</MDXTag>{` block. Anything in there will be passed to the client.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// config/default.js\nmodule.exports = {\n    ...,\n    myNewSetting: 'What the!??',\n    sanitizeClientConfig: config =>\n        pick(config), [\n            ...,\n            'myNewSetting'\n        ])\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once your setting is dropped in, you can access it from your `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Component`}</MDXTag>{`'s `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// server side\nstatic getInitialProps(props) {\n    console.log(props.config.myNewSetting) // 'What the!??'\n    return {\n        anotherNewSetting: 'Totally!'\n    }\n}\n\n// client side\ncomponentDidMount() {\n    alert(this.props.config.myNewSetting) // 'What the!??'\n    alert(this.props.config.anotherNewSetting) // 'Totally!'\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"styleguide\"}}>{`Styleguide`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When you first visit your skill, you'll be taken to the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Styleguide`}</MDXTag>{`. This guide has every `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Component`}</MDXTag>{` defined in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`react-heartwood-components`}</MDXTag>{` with examples on how they can be configured. As soon as you set `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.env`}</MDXTag>{` `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`DEV_MODE=false`}</MDXTag>{`, this page goes away.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"custom-styling\"}}>{`Custom styling`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Currently it is against Sprucebot rules to add custom styles to your Skill. If you find our control library is not sufficient, put your styles inline, take a screen, and shoot it to scientists (at) sprucelabs.ai and we'll see how we can enhance the kit to accommodate.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"gotchyas\"}}>{`Gotchya's`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`We say `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`interface`}</MDXTag>{` and not `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`client`}</MDXTag>{` because this code can render on the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`server`}</MDXTag>{` as well.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`getInitialProps`}</MDXTag>{` can run both `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`server`}</MDXTag>{` side and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`client`}</MDXTag>{` side, so check for `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`window`}</MDXTag>{` or anything else you expect to use.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Dispatch actions `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`client`}</MDXTag>{` side and use a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`<Loader />`}</MDXTag>{` so things load quickly.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`NEVER`}</MDXTag>{` `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`import config from 'config'`}</MDXTag>{` client side. It'll expose all your settings! Use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`sanitizeClientConfig`}</MDXTag>{` && `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`this.props.config`}</MDXTag>{` instead.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Deving through a proxy (like ngrok) is really slow. One way to make development faster is to inspect the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`iframe`}</MDXTag>{` in Sprucebot, copy the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`src`}</MDXTag>{`, and paste it into a new window.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Make sure you set the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`error`}</MDXTag>{` to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`false`}</MDXTag>{` on `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`REQUEST_SUCCESS`}</MDXTag>{` so any previous error is removed.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"whats-next\"}}>{`What's next?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Ok, we're almost end-to-end... but it's probably a good time to get more familiar with all the things you can do with the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"api.md\"}}>{`api`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "]}]}